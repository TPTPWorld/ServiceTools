%==============================================================================
%----This outputs TPTP Problem Set clauses in a format acceptable to 
%----the ANU SCOTT system.
%----
%----Written by Kal Hodgson, April, 1999.
%----Minor adaptation of format.otter
%------------------------------------------------------------------------------
%----Output all the clauses in Scott format
scott(scott:SoSSpecifier:InputFirstSpecifier:OtterOptions,Formulae,_):-
	%----Negate conjecture if FOF (for the future of SCOTT :-)
	negate_otter_conjecture(Formulae,ProofFormulae),
	tptp2X_member(SoSSpecifier,[conjecture,hypothesis,positive,negative,
		unit,none,all]),
	tptp2X_member(InputFirstSpecifier,[conjecture,hypothesis,positive,
		negative,unit,none,all]),
	output_otter_header(OtterOptions),

%--- this way if we separate hypothesis and conjecture
%	extract_otter_sos(ProofFormulae,[SoSSpecifier],SoS,Usable1),
%	extract_otter_sos(Usable1,[InputFirstSpecifier],InputFirst,Usable),

%--- otherwise (that is, normal format.otter)
	extract_otter_sos(ProofFormulae,[SoSSpecifier],SoS1,Usable),
	extract_otter_sos(SoS1,[InputFirstSpecifier],InputFirst,SoS),

	output_otter_list(Usable,usable),
	output_otter_list(InputFirst,input_first),
	output_otter_list(SoS,sos).

%------------------------------------------------------------------------------
%----Provide information about the Otter format
scott_format_information('%','.sin').
%------------------------------------------------------------------------------
%----Provide information about the Otter file
scott_file_information(format,
scott:conjecture:conjecture:'clear(print_given),set(auto)',
'SoS1 is one of conjecture, hypothesis, positive, negative, unit, none, all
 SoS2 is one of conjecture, hypothesis, positive, negative, unit, none, all
 Flags can be added').
%------------------------------------------------------------------------------
