tff(lk,type,(
    lk: $int > $int )).

tff(ns,type,(
    ns: $int > $int )).

tff(dc_type,type,(
    dc: ( $real * $int * $int ) > $real )).

tff(imp,type,(
    imp: ( $real * $int * $int ) > $real )).

tff(recexp,type,(
    recexp: ( $real * $int * $int ) > $real )).

tff(mylk,type,(
    mylk: $int > $int )).

tff(mysumr,type,(
    mysumr: ( $real * $int * $int * $int ) > $real )).

tff(mysump,type,(
    mysump: ( $real * $int * $int * $int ) > $real )).

tff(problen,type,(
    problen: $int )).

tff(probsize,type,(
    probsize: $int )).

tff(tougher_local_search,conjecture,(
    ! [S: $real,C: $int,Problen: $int,Probsize: $int] :
      ( ( $lesseq(2,Problen)
        & problen = Problen
        & $lesseq($product(Problen,Problen),Probsize)
        & probsize = Probsize
        & $lesseq($product(C,2),problen)
        & $lesseq($to_real(probsize),recexp(S,probsize,C))
        & $lesseq(0.9,S)
        & $lesseq(S,10.0) )
     => $lesseq(S,1.0) ) )).

tff(lk_0,axiom,(
    lk(0) = 1 )).

tff(lk_n,axiom,(
    ! [K: $int] :
      ( ( $lesseq(1,K)
        & $lesseq(K,problen) )
     => $lesseq(lk($difference(K,1)),lk(K)) ) )).

tff(ns_0,axiom,(
    ns(0) = $sum(lk(0),lk(1)) )).

tff(ns_pl,axiom,(
    ns(problen) = $sum(lk($difference(problen,1)),lk(problen)) )).

tff(ns_n,axiom,(
    ! [K: $int] :
      ( ( $lesseq(1,K)
        & $lesseq(K,$difference(problen,1)) )
     => ns(K) = $sum($sum(lk($difference(K,1)),lk(K)),lk($sum(K,1))) ) )).

tff(dc,axiom,(
    ! [D: $real,T: $int,C: $int] : $product(dc(D,T,C),$to_real($difference(T,ns(C)))) = $difference($to_real(T),$product(D,$to_real(ns(C)))) )).

tff(imp_0,axiom,(
    ! [D: $real,T: $int] : imp(D,T,0) = 0.0 )).

tff(imp_n,axiom,(
    ! [D: $real,T: $int,C: $int] :
      ( $lesseq(1,C)
     => $product($to_real(T),imp(D,T,C)) = $sum($product(D,$to_real(lk($difference(C,1)))),mysump(D,T,C,$difference(C,2))) ) )).

tff(mysump_0,axiom,(
    ! [D: $real,T: $int,C: $int] : mysump(D,T,C,0) = 0.0 )).

tff(mysump_n,axiom,(
    ! [D: $real,T: $int,C: $int,K: $int] :
      ( $lesseq(1,K)
     => mysump(D,T,C,K) = $sum($product(dc(D,T,C),$to_real(lk(K))),mysump(D,T,C,$difference(K,1))) ) )).

tff(recexp_0,axiom,(
    ! [D: $real,T: $int] : recexp(D,T,0) = 0.0 )).

tff(recexp_n,axiom,(
    ! [D: $real,T: $int,C: $int] :
      ( $lesseq(1,C)
     => ( $product(imp(D,T,C),$product($to_real(T),recexp(D,T,C))) = $sum($sum($to_real(T),$product($product(D,recexp(D,T,$difference(C,1))),$to_real(lk($difference(C,1))))),mysumr(D,T,C,$difference(C,2))) ) ) )).

tff(mylk_0,axiom,(
    mylk(0) = 1 )).

tff(mylk_n,axiom,(
    ! [K: $int] :
      ( ( $lesseq(1,K)
        & $lesseq(K,problen) )
     => mylk(K) = $sum(lk(K),mylk($difference(K,1))) ) )).

tff(mylk_tot,axiom,(
    $lesseq(mylk(problen),probsize) )).

tff(mysumr_0,axiom,(
    ! [D: $real,T: $int,C: $int] : mysumr(D,T,C,0) = 0.0 )).

tff(mysumr_n,axiom,(
    ! [D: $real,T: $int,C: $int,K: $int] :
      ( $lesseq(1,K)
     => mysumr(D,T,C,K) = $sum($product(dc(D,T,C),$product(recexp(D,T,K),$to_real(lk(K)))),mysumr(D,T,C,$difference(K,1))) ) )).
