%--------------------------------------------------------------------------
% File     : BOO017-1 : TPTP v2.1.0. Released v1.0.0.
% Domain   : Boolean Algebra
% Problem  : Relating sum and product (X + Y = Z -> X * Z = X)
% Version  : [MOW76] axioms.
% English  : 

% Refs     : [Whi61] Whitesitt (1961), Boolean Algebra and Its Applications
%          : [MOW76] McCharen et al. (1976), Problems and Experiments for a
% Source   : [MOW76]
% Names    : Established lemma [MOW76]

% Status   : unsatisfiable
% Rating   : 0.33 v2.1.0, 0.20 v2.0.0
% Syntax   : Number of clauses    :   24 (   0 non-Horn;  12 unit;  14 RR)
%            Number of literals   :   62 (   2 equality)
%            Maximal clause size  :    5 (   2 average)
%            Number of predicates :    3 (   0 propositional; 2-3 arity)
%            Number of functors   :    8 (   5 constant; 0-2 arity)
%            Number of variables  :   82 (   0 singleton)
%            Maximal term depth   :    2 (   1 average)

% Comments : 
%          : tptp2X -f tptp -t rm_equality:rstfp BOO017-1.p 
%--------------------------------------------------------------------------
input_clause(closure_of_addition,axiom,
    [++ sum(X, Y, add(X, Y))]).

input_clause(closure_of_multiplication,axiom,
    [++ product(X, Y, multiply(X, Y))]).

input_clause(commutativity_of_addition,axiom,
    [-- sum(X, Y, Z),
     ++ sum(Y, X, Z)]).

input_clause(commutativity_of_multiplication,axiom,
    [-- product(X, Y, Z),
     ++ product(Y, X, Z)]).

input_clause(additive_identity1,axiom,
    [++ sum(additive_identity, X, X)]).

input_clause(additive_identity2,axiom,
    [++ sum(X, additive_identity, X)]).

input_clause(multiplicative_identity1,axiom,
    [++ product(multiplicative_identity, X, X)]).

input_clause(multiplicative_identity2,axiom,
    [++ product(X, multiplicative_identity, X)]).

input_clause(distributivity1,axiom,
    [-- product(X, Y, V1),
     -- product(X, Z, V2),
     -- sum(Y, Z, V3),
     -- product(X, V3, V4),
     ++ sum(V1, V2, V4)]).

input_clause(distributivity2,axiom,
    [-- product(X, Y, V1),
     -- product(X, Z, V2),
     -- sum(Y, Z, V3),
     -- sum(V1, V2, V4),
     ++ product(X, V3, V4)]).

input_clause(distributivity3,axiom,
    [-- product(Y, X, V1),
     -- product(Z, X, V2),
     -- sum(Y, Z, V3),
     -- product(V3, X, V4),
     ++ sum(V1, V2, V4)]).

input_clause(distributivity4,axiom,
    [-- product(Y, X, V1),
     -- product(Z, X, V2),
     -- sum(Y, Z, V3),
     -- sum(V1, V2, V4),
     ++ product(V3, X, V4)]).

input_clause(distributivity5,axiom,
    [-- sum(X, Y, V1),
     -- sum(X, Z, V2),
     -- product(Y, Z, V3),
     -- sum(X, V3, V4),
     ++ product(V1, V2, V4)]).

input_clause(distributivity6,axiom,
    [-- sum(X, Y, V1),
     -- sum(X, Z, V2),
     -- product(Y, Z, V3),
     -- product(V1, V2, V4),
     ++ sum(X, V3, V4)]).

input_clause(distributivity7,axiom,
    [-- sum(Y, X, V1),
     -- sum(Z, X, V2),
     -- product(Y, Z, V3),
     -- sum(V3, X, V4),
     ++ product(V1, V2, V4)]).

input_clause(distributivity8,axiom,
    [-- sum(Y, X, V1),
     -- sum(Z, X, V2),
     -- product(Y, Z, V3),
     -- product(V1, V2, V4),
     ++ sum(V3, X, V4)]).

input_clause(additive_inverse1,axiom,
    [++ sum(inverse(X), X, multiplicative_identity)]).

input_clause(additive_inverse2,axiom,
    [++ sum(X, inverse(X), multiplicative_identity)]).

input_clause(multiplicative_inverse1,axiom,
    [++ product(inverse(X), X, additive_identity)]).

input_clause(multiplicative_inverse2,axiom,
    [++ product(X, inverse(X), additive_identity)]).

input_clause(addition_is_well_defined,axiom,
    [-- sum(X, Y, U),
     -- sum(X, Y, V),
     ++ equal(U, V)]).

input_clause(multiplication_is_well_defined,axiom,
    [-- product(X, Y, U),
     -- product(X, Y, V),
     ++ equal(U, V)]).

input_clause(x_plus_y,hypothesis,
    [++ sum(x, y, z)]).

input_clause(prove_product,conjecture,
    [-- product(x, z, x)]).
%--------------------------------------------------------------------------
