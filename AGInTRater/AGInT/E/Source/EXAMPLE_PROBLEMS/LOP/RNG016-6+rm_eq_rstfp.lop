#--------------------------------------------------------------------------
# File     : RNG016-6 : TPTP v2.1.0. Released v1.0.0.
# Domain   : Ring Theory (Alternative)
# Problem  : (X+ -Y)*Z = (X*Z) + -(Y*Z)
# Version  : [Ste87] (equality) axioms.
# English  : 

# Refs     : [Ste87] Stevens (1987), Some Experiments in Nonassociative Rin
# Source   : [Ste87]
# Names    : c19 [Ste87]

# Status   : unsatisfiable
# Rating   : 0.33 v2.1.0, 0.38 v2.0.0
# Syntax   : Number of clauses    :   16 (   0 non-Horn;  16 unit;   1 RR)
#            Number of literals   :   16 (  16 equality)
#            Maximal clause size  :    1 (   1 average)
#            Number of predicates :    1 (   0 propositional; 2-2 arity)
#            Number of functors   :    9 (   4 constant; 0-3 arity)
#            Number of variables  :   27 (   2 singleton)
#            Maximal term depth   :    5 (   2 average)

# Comments : 
#          : tptp2X -f setheo:sign -t rm_equality:rstfp RNG016-6.p 
#--------------------------------------------------------------------------
# commutativity_for_addition, axiom.
equal(add(X, Y), add(Y, X)) <- .

# associativity_for_addition, axiom.
equal(add(X, add(Y, Z)), add(add(X, Y), Z)) <- .

# left_additive_identity, axiom.
equal(add(additive_identity, X), X) <- .

# right_additive_identity, axiom.
equal(add(X, additive_identity), X) <- .

# left_multiplicative_zero, axiom.
equal(multiply(additive_identity, X), additive_identity) <- .

# right_multiplicative_zero, axiom.
equal(multiply(X, additive_identity), additive_identity) <- .

# left_additive_inverse, axiom.
equal(add(additive_inverse(X), X), additive_identity) <- .

# right_additive_inverse, axiom.
equal(add(X, additive_inverse(X)), additive_identity) <- .

# distribute1, axiom.
equal(multiply(X, add(Y, Z)), add(multiply(X, Y), multiply(X, Z))) <- .

# distribute2, axiom.
equal(multiply(add(X, Y), Z), add(multiply(X, Z), multiply(Y, Z))) <- .

# additive_inverse_additive_inverse, axiom.
equal(additive_inverse(additive_inverse(X)), X) <- .

# right_alternative, axiom.
equal(multiply(multiply(X, Y), Y), multiply(X, multiply(Y, Y))) <- .

# left_alternative, axiom.
equal(multiply(multiply(X, X), Y), multiply(X, multiply(X, Y))) <- .

# associator, axiom.
equal(associator(X, Y, Z), add(multiply(multiply(X, Y), Z), additive_inverse(multiply(X, multiply(Y, Z))))) <- .

# commutator, axiom.
equal(commutator(X, Y), add(multiply(Y, X), additive_inverse(multiply(X, Y)))) <- .

# prove_distributivity, conjecture.
 <- equal(multiply(add(x, additive_inverse(y)), z), add(multiply(x, z), additive_inverse(multiply(y, z)))).

#--------------------------------------------------------------------------
