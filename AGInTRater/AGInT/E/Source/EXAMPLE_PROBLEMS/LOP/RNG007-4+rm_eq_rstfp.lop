#--------------------------------------------------------------------------
# File     : RNG007-4 : TPTP v2.1.0. Released v1.0.0.
# Domain   : Ring Theory
# Problem  : In Boolean rings, X is its own inverse
# Version  : [Peterson & Stickel,1981] (equality) axioms.
#            Theorem formulation : Equality.
# English  : Given a ring in which for all x, x * x = x, prove that for 
#            all x, x + x = additive_identity

# Refs     : [PS81]  Peterson & Stickel (1981), Complete Sets of Reductions
# Source   : [ANL]
# Names    : lemma.ver2.in [ANL]

# Status   : unsatisfiable
# Rating   : 0.17 v2.1.0, 0.13 v2.0.0
# Syntax   : Number of clauses    :   16 (   0 non-Horn;  16 unit;   2 RR)
#            Number of literals   :   16 (  16 equality)
#            Maximal clause size  :    1 (   1 average)
#            Number of predicates :    1 (   0 propositional; 2-2 arity)
#            Number of functors   :    5 (   2 constant; 0-2 arity)
#            Number of variables  :   26 (   2 singleton)
#            Maximal term depth   :    3 (   2 average)

# Comments : 
#          : tptp2X -f setheo:sign -t rm_equality:rstfp RNG007-4.p 
#--------------------------------------------------------------------------
# left_identity, axiom.
equal(add(additive_identity, X), X) <- .

# left_additive_inverse, axiom.
equal(add(additive_inverse(X), X), additive_identity) <- .

# distribute1, axiom.
equal(multiply(X, add(Y, Z)), add(multiply(X, Y), multiply(X, Z))) <- .

# distribute2, axiom.
equal(multiply(add(X, Y), Z), add(multiply(X, Z), multiply(Y, Z))) <- .

# additive_inverse_identity, axiom.
equal(additive_inverse(additive_identity), additive_identity) <- .

# additive_inverse_additive_inverse, axiom.
equal(additive_inverse(additive_inverse(X)), X) <- .

# multiply_additive_id1, axiom.
equal(multiply(X, additive_identity), additive_identity) <- .

# multiply_additive_id2, axiom.
equal(multiply(additive_identity, X), additive_identity) <- .

# distribute_additive_inverse, axiom.
equal(additive_inverse(add(X, Y)), add(additive_inverse(X), additive_inverse(Y))) <- .

# multiply_additive_inverse1, axiom.
equal(multiply(X, additive_inverse(Y)), additive_inverse(multiply(X, Y))) <- .

# multiply_additive_inverse2, axiom.
equal(multiply(additive_inverse(X), Y), additive_inverse(multiply(X, Y))) <- .

# associative_addition, axiom.
equal(add(add(X, Y), Z), add(X, add(Y, Z))) <- .

# commutative_addition, axiom.
equal(add(X, Y), add(Y, X)) <- .

# associative_multiplication, axiom.
equal(multiply(multiply(X, Y), Z), multiply(X, multiply(Y, Z))) <- .

# boolean_ring, hypothesis.
equal(multiply(X, X), X) <- .

# prove_inverse, conjecture.
 <- equal(add(a, a), additive_identity).

#--------------------------------------------------------------------------
