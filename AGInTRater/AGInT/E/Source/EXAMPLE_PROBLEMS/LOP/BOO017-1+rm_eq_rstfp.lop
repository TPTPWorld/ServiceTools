#--------------------------------------------------------------------------
# File     : BOO017-1 : TPTP v2.1.0. Released v1.0.0.
# Domain   : Boolean Algebra
# Problem  : Relating sum and product (X + Y = Z -> X * Z = X)
# Version  : [MOW76] axioms.
# English  : 

# Refs     : [Whi61] Whitesitt (1961), Boolean Algebra and Its Applications
#          : [MOW76] McCharen et al. (1976), Problems and Experiments for a
# Source   : [MOW76]
# Names    : Established lemma [MOW76]

# Status   : unsatisfiable
# Rating   : 0.33 v2.1.0, 0.20 v2.0.0
# Syntax   : Number of clauses    :   24 (   0 non-Horn;  12 unit;  14 RR)
#            Number of literals   :   62 (   2 equality)
#            Maximal clause size  :    5 (   2 average)
#            Number of predicates :    3 (   0 propositional; 2-3 arity)
#            Number of functors   :    8 (   5 constant; 0-2 arity)
#            Number of variables  :   82 (   0 singleton)
#            Maximal term depth   :    2 (   1 average)

# Comments : 
#          : tptp2X -f setheo:sign -t rm_equality:rstfp BOO017-1.p 
#--------------------------------------------------------------------------
# closure_of_addition, axiom.
sum(X, Y, add(X, Y)) <- .

# closure_of_multiplication, axiom.
product(X, Y, multiply(X, Y)) <- .

# commutativity_of_addition, axiom.
sum(Y, X, Z) <- 
    sum(X, Y, Z).

# commutativity_of_multiplication, axiom.
product(Y, X, Z) <- 
    product(X, Y, Z).

# additive_identity1, axiom.
sum(additive_identity, X, X) <- .

# additive_identity2, axiom.
sum(X, additive_identity, X) <- .

# multiplicative_identity1, axiom.
product(multiplicative_identity, X, X) <- .

# multiplicative_identity2, axiom.
product(X, multiplicative_identity, X) <- .

# distributivity1, axiom.
sum(V1, V2, V4) <- 
    product(X, Y, V1),
    product(X, Z, V2),
    sum(Y, Z, V3),
    product(X, V3, V4).

# distributivity2, axiom.
product(X, V3, V4) <- 
    product(X, Y, V1),
    product(X, Z, V2),
    sum(Y, Z, V3),
    sum(V1, V2, V4).

# distributivity3, axiom.
sum(V1, V2, V4) <- 
    product(Y, X, V1),
    product(Z, X, V2),
    sum(Y, Z, V3),
    product(V3, X, V4).

# distributivity4, axiom.
product(V3, X, V4) <- 
    product(Y, X, V1),
    product(Z, X, V2),
    sum(Y, Z, V3),
    sum(V1, V2, V4).

# distributivity5, axiom.
product(V1, V2, V4) <- 
    sum(X, Y, V1),
    sum(X, Z, V2),
    product(Y, Z, V3),
    sum(X, V3, V4).

# distributivity6, axiom.
sum(X, V3, V4) <- 
    sum(X, Y, V1),
    sum(X, Z, V2),
    product(Y, Z, V3),
    product(V1, V2, V4).

# distributivity7, axiom.
product(V1, V2, V4) <- 
    sum(Y, X, V1),
    sum(Z, X, V2),
    product(Y, Z, V3),
    sum(V3, X, V4).

# distributivity8, axiom.
sum(V3, X, V4) <- 
    sum(Y, X, V1),
    sum(Z, X, V2),
    product(Y, Z, V3),
    product(V1, V2, V4).

# additive_inverse1, axiom.
sum(inverse(X), X, multiplicative_identity) <- .

# additive_inverse2, axiom.
sum(X, inverse(X), multiplicative_identity) <- .

# multiplicative_inverse1, axiom.
product(inverse(X), X, additive_identity) <- .

# multiplicative_inverse2, axiom.
product(X, inverse(X), additive_identity) <- .

# addition_is_well_defined, axiom.
equal(U, V) <- 
    sum(X, Y, U),
    sum(X, Y, V).

# multiplication_is_well_defined, axiom.
equal(U, V) <- 
    product(X, Y, U),
    product(X, Y, V).

# x_plus_y, hypothesis.
sum(x, y, z) <- .

# prove_product, conjecture.
 <- product(x, z, x).

#--------------------------------------------------------------------------
