
ANALYSIS/can_clausestats.c,291
ClauseStats_p ClauseStatsCopy(60,1784
void ClauseStatsParseInto(87,2526
ClauseStats_p ClauseStatsParse(125,3616
void ClauseStatsPrint(145,4048
void ClauseStatsPrintNormalized(171,4647
long ClauseSetInfoParse(235,6363
long ClauseSetInfoPrint(269,7210
void ClauseStatTreeFree(304,8001

ANALYSIS/can_clausestore.c,327
long dummy;31,784
void CompClauseFree(62,1792
void CompClauseAddTerms(85,2312
void CompClauseRemoveTerms(120,3247
CompClause_p PackClause(145,3926
Clause_p UnpackClause(175,4650
CompClause_p CompactifyClause(205,5360
Clause_p UnCompactifyClause(226,5812
void CompClausePrint(247,6315
void CompClausePCLPrint(270,6866

ANALYSIS/can_treeanalyze.c,330
static long select_examples_from_proof(55,1606
static long select_examples_from_non_proof(119,3061
long ProofMarkProofClauses(161,4133
void ProofSetClauseStatistics(222,5520
void ProofComputeParentNumbers(256,6481
void ProofComputeDistance(324,8383
long ProofDistanceDistrib(373,9641
long InfStateSelectExamples(415,10851

BASICS/clb_ddarrays.c,181
DDArray_p DDArrayAlloc(60,1865
void DDArrayFree(90,2531
void DDArayEnlarge(112,2999
void DDArrayDebugPrint(141,3721
void DDArrayAdd(170,4364
double DDArraySelectPart(200,5035

BASICS/clb_dstacks.c,252
static void push(56,1746
DStack_p DStackAlloc(93,2773
void DStackFree(118,3279
void DStackReset(140,3734
void DStackPush(157,4073
double DStackPop(174,4428
double DStackTop(195,4846
double DStackBelowTop(216,5280
double DStackElement(236,5676

BASICS/clb_dstrings.c,420
char NullStr[NullStr29,766
DStr_p DStrAlloc(59,1762
void DStrFree(84,2293
char* DStrAppendStr(113,2805
char* DStrAppendChar(160,3959
char* DStrAppendInt(190,4682
char* DStrAppendStrArray(211,5156
char DStrDeleteLastChar(242,5797
char* DStrView(274,6622
char* DStrCopy(299,7138
char* DStrCopyCore(333,8014
char* DStrSet(361,8581
long  DStrLen(385,9050
void  DStrReset(406,9495
void  DStrMinimize(430,9937

BASICS/clb_error.c,490
char ErrStr[ErrStr34,863
int TmpErrno;38,949
char* ProgName 42,995
char* EmptyString 48,1166
#define E_SC_PAGE_SIZE 69,1963
#define E_SC_PAGE_SIZE 71,2028
long GetSystemPageSize(87,2410
#define MEM_PHRASE 118,3066
long GetSystemPhysMemory(120,3115
void InitError(198,5034
VOLATILE void Error(217,5447
VOLATILE void SysError(241,6117
void Warning(265,6656
double GetTotalCPUTime(288,7240
void PrintRusage(315,7802
void StrideMemory(359,9181
bool CheckLetterString(393,9921

BASICS/clb_fixdarrays.c,142
FixedDArray_p FixedDArrayAlloc(59,1739
void FixedDArrayFree(82,2235
FixedDArray_p FixedDArrayCopy(104,2696
void FixedDArrayPrint(136,3307

BASICS/clb_floattrees.c,328
static FloatTree_p splay_tree(56,1591
FloatTree_p FloatTreeCellAllocEmpty(153,3744
void FloatTreeFree(176,4317
FloatTree_p FloatTreeInsert(216,5199
bool FloatTreeStore(263,6190
FloatTree_p FloatTreeFind(297,6881
FloatTree_p FloatTreeExtractEntry(326,7536
bool FloatTreeDeleteEntry(367,8375
long FloatTreeNodes(393,8879

BASICS/clb_gpdarrays.c,278
GGPDArray_p GGPDArrayAlloc(60,1833
GPDArray_p PDIntArrayAlloc(92,2622
void GPDArrayFree(124,3329
void PDArayEnlarge(146,3802
GPDArray_p GPDArrayCopy(194,4902
void GPDArrayElementDeleteP(220,5479
void GPDArrayElementDeleteInt(241,5966
long GPDArrayElementIncInt(261,6416

BASICS/clb_intmap.c,469
static bool switch_to_array(56,1593
static bool switch_to_tree(81,2130
static NumTree_p add_new_tree_node(106,2744
static void array_to_tree(135,3409
static void tree_to_array(177,4330
IntMap_p IntMapAlloc(222,5540
void IntMapFree(244,5974
void* IntMapGetVal(279,6675
void** IntMapGetRef(336,7935
void IntMapAssign(445,10954
void* IntMapDelKey(473,11577
IntMapIter_p IntMapIterAlloc(549,13674
void IntMapIterFree(594,14780
void IntMapDebugPrint(628,15463

BASICS/clb_memory.c,673
bool MemIsLow 42,1419
Mem_p free_mem_list[free_mem_list44,1443
long size_malloc_mem 47,1513
long size_malloc_count 48,1539
long size_free_mem 49,1567
long size_free_count 50,1591
long clb_free_count 51,1617
long secure_malloc_count 52,1642
long secure_malloc_mem 53,1672
long secure_realloc_count 54,1700
long secure_realloc_m_count 55,1731
long secure_realloc_f_count 56,1764
static long free_list_size(79,2344
void MemFlushFreeList(113,3210
void* SecureMalloc(147,4109
void* SecureRealloc(198,5351
char* SecureStrdup(259,6708
char* SecureStrndup(283,7311
long* IntArrayAlloc(322,8004
void MemDebugPrintStats(354,8597
void MemFreeListPrint(396,10050

BASICS/clb_newmem.c,662
bool MemIsLow 38,1362
Mem_p free_mem_list[free_mem_list41,1387
long size_malloc_mem 44,1457
long size_malloc_count 45,1483
long size_free_mem 46,1511
long size_free_count 47,1535
long clb_free_count 48,1561
long secure_malloc_count 49,1586
long secure_malloc_mem 50,1616
long secure_realloc_count 51,1644
long secure_realloc_m_count 52,1675
long secure_realloc_f_count 53,1708
void MemFlushFreeList(77,2470
void* SecureMalloc(97,3103
void* SecureRealloc(141,4180
void* SizeMallocReal(189,5367
void SizeFreeReal(252,7011
void MemAddNewChunk(297,8190
char* SecureStrdup(331,9023
long* IntArrayAlloc(354,9513
void MemDebugPrintStats(386,10106

BASICS/clb_numtrees.c,456
static long numtree_print(57,1696
static NumTree_p splay_tree(111,3032
NumTree_p NumTreeCellAllocEmpty(208,5199
void NumTreeFree(231,5760
NumTree_p NumTreeInsert(271,6642
bool NumTreeStore(318,7671
long NumTreeDebugPrint(349,8330
NumTree_p NumTreeFind(371,8862
NumTree_p NumTreeExtractEntry(400,9507
bool NumTreeDeleteEntry(441,10332
long NumTreeNodes(467,10820
NumTree_p NumTreeMaxNode(503,11535
PStack_p NumTreeLimitedTraverseInit(529,12053

BASICS/clb_objtrees.c,314
static PTree_p splay_tree(53,1543
PTree_p PTreeObjInsert(150,3418
void* PTreeObjStore(201,4506
PTree_p PTreeObjFind(232,5164
PTree_p PTreeObjFindBinary(260,5788
PTree_p PTreeObjExtractEntry(302,6582
void* PTreeObjExtractObject(345,7495
void* PTreeObjExtractRootObject(373,8155
void PTreeObjMerge(397,8701

BASICS/clb_os_wrapper.c,163
RLimResult SetSoftRlimit(64,1921
void SetSoftRlimitErr(102,2781
void SetMemoryLimit(149,3828
rlim_t GetSoftRlimit(174,4381
void IncreaseMaxStackSize(202,5020

BASICS/clb_partial_orderings.c,46
char* POCompareSymbol[POCompareSymbol31,811

BASICS/clb_pdarrays.c,445
PDArray_p PDArrayAlloc(60,1831
PDArray_p PDIntArrayAlloc(92,2629
void PDArrayFree(124,3331
void PDArayEnlarge(146,3801
PDArray_p PDArrayCopy(194,4898
void PDArrayElementDeleteP(220,5469
void PDArrayElementDeleteInt(241,5952
long PDArrayMembers(262,6382
long PDArrayFirstUnused(292,6927
long PDArrayStore(323,7550
long PDArrayStoreP(348,8076
long PDArrayStoreInt(371,8556
void PDArrayAdd(394,9072
long PDArrayElementIncInt(419,9641

BASICS/clb_plist.c,219
PList_p PListAlloc(59,1708
void PListFree(81,2108
void PListInsert(103,2522
void PListStore(124,2968
void PListStoreP(145,3378
void PListStoreInt(166,3762
PList_p PListExtract(187,4150
void PListDelete(214,4746

BASICS/clb_pqueue.c,25
void PQueueGrow(58,1726

BASICS/clb_pstacks.c,25
void PStackSort(57,1765

BASICS/clb_ptrees.c,672
static PTree_p splay_ptree(53,1517
PTree_p PTreeCellAllocEmpty(151,3432
void PTreeFree(173,3921
PTree_p PTreeInsert(213,4741
bool PTreeStore(261,5742
PTree_p PTreeFind(291,6338
PTree_p PTreeFindBinary(318,6903
PTree_p PTreeExtractEntry(358,7653
void* PTreeExtractKey(400,8490
void* PTreeExtractRootKey(427,9086
bool PTreeDeleteEntry(449,9603
bool PTreeMerge(477,10204
void PTreeInsertTree(520,10982
long PTreeNodes(552,11603
long PTreeDebugPrint(588,12281
long PStackToPTree(631,13159
long PTreeToPStack(660,13753
void* PTreeSharedElement(700,14704
PTree_p PTreeIntersection(740,15505
long PTreeDestrIntersection(778,16363
PTree_p PTreeCopy(814,17019

BASICS/clb_quadtrees.c,294
static QuadTree_p splay_tree(54,1596
int DoubleKeyCmp(147,3303
int QuadKeyCmp(173,3733
void QuadTreeFree(200,4341
QuadTree_p QuadTreeInsert(240,5173
bool QuadTreeStore(290,6231
QuadTree_p QuadTreeFind(324,7003
QuadTree_p QuadTreeExtractEntry(354,7667
bool QuadTreeDeleteEntry(396,8550

BASICS/clb_simple_stuff.c,202
int WeightedObjectCompareFun(59,1748
int StringIndex(87,2337
#define LOG_2 114,2788
double Log2(116,2833
long Log2Ceil(133,3184
double sqrt(167,3813
double pow(206,4508
char* IndentStr(234,5002

BASICS/clb_stringtrees.c,279
static StrTree_p splay_tree(57,1726
StrTree_p StrTreeCellAllocEmpty(153,3881
void StrTreeFree(176,4445
StrTree_p StrTreeInsert(203,5026
StrTree_p StrTreeStore(250,6079
StrTree_p StrTreeFind(284,6799
StrTree_p StrTreeExtractEntry(313,7457
bool StrTreeDeleteEntry(354,8296

BASICS/clb_sysdate.c,27
void SysDatePrint(61,1758

BASICS/clb_verbose.c,20
int Verbose 31,779

CLAUSES/ccl_axiomsorter.c,116
WAxiom_p WAxiomAlloc(60,1756
void WAxiomAddRelEval(94,2502
int WAxiomCmp(148,3635
int WAxiomCmpWrapper(181,4235

CLAUSES/ccl_clausecpos.c,169
CompactPos PackTermPos(60,1732
CompactPos PackClausePos(100,2493
void UnpackTermPos(138,3246
void UnpackClausePosInto(179,4120
ClausePos_p UnpackClausePos(227,5132

CLAUSES/ccl_clausefunc.c,438
static int clause_canon_compare(54,1585
static int clause_canon_compare_wrapper(74,2033
void ClauseRemoveLiteralRef(101,2856
void ClauseRemoveLiteral(136,3661
void ClauseFlipLiteralSign(161,4218
void ClauseKillChildren(189,4785
int ClauseRemoveSuperfluousLiterals(221,5610
long ClauseSetRemoveSuperfluousLiterals(273,6734
void ClauseSetCanonize(301,7387
int ClauseRemoveACResolved(329,8048
bool ClauseUnitSimplifyTest(368,9002

CLAUSES/ccl_clauseinfo.c,105
ClauseInfo_p ClauseInfoAlloc(65,2043
void ClauseInfoFree(101,2935
void ClauseSourceInfoPrint(131,3506

CLAUSES/ccl_clausepos.c,300
void ClausePosPrint(61,1728
Eqn_p ClausePosFindPosLiteral(92,2443
Eqn_p ClausePosFindMaxLiteral(122,3125
Term_p ClausePosFindFirstMaximalSide(152,3832
Term_p ClausePosFindNextMaximalSide(181,4550
Term_p ClausePosFindFirstMaximalSubterm(223,5502
Term_p ClausePosFindNextMaximalSubterm(254,6110

CLAUSES/ccl_clauses.c,2301
bool   ClausesHaveLocalVariables 36,881
bool   ClausesHaveDisjointVariables 43,1128
static long global_clause_counter 48,1256
long ClauseIdentCounter 53,1393
static bool foundEqLitLater(80,2380
static bool term_query_var_prop(111,3086
Clause_p clause_copy_meta(160,4036
void TSTPSkipSource(202,5243
void ClauseSetTPTPType(223,5683
Clause_p EmptyClauseAlloc(243,6160
Clause_p ClauseAlloc(283,7230
bool ClauseHasMaxPosEqLit(330,8243
Clause_p ClauseSortLiterals(360,8900
Clause_p ClauseCanonize(403,10092
bool ClauseIsSorted(430,10663
int ClauseStructWeightCompareWrapper(469,11470
int ClauseStructWeightCompare(496,12316
int ClauseStructWeightLexCompare(566,13711
bool ClauseIsACRedundant(604,14665
void ClauseFree(631,15323
bool ClauseIsRangeRestricted(659,16059
bool ClauseIsAntiRangeRestricted(722,17580
bool ClauseIsTPTPRangeRestricted(786,19183
bool ClauseIsStronglyRangeRestricted(847,20699
EqnSide ClauseIsEqDefinition(924,22363
Clause_p ClauseCopy(952,23109
Clause_p ClauseCopyOpt(975,23635
Clause_p ClauseCopyDisjoint(996,24111
Clause_p ClauseSkolemize(1018,24573
void ClausePrintList(1050,25282
void ClausePrintAxiom(1070,25864
void ClausePrintRule(1121,26977
void ClausePrintGoal(1153,27708
void ClausePrintQuery(1174,28258
void ClausePrintTPTPFormat(1195,28769
void ClausePrintLOPFormat(1247,29939
void ClausePrint(1274,30610
void ClausePCLPrint(1319,31514
#define PCLPRINTDEGBUG1333,31789
void ClauseTSTPCorePrint(1367,32742
void ClauseTSTPPrint(1395,33376
bool ClauseStartsMaybe(1459,34844
ClauseProperties ClauseTypeParse(1487,35449
Clause_p ClauseParse(1540,36544
Clause_p ClausePCLParse(1696,40936
void ClauseMarkMaximalTerms(1732,41780
bool ClauseParentsAreSubset(1753,42287
void ClauseDetachParents(1798,43165
void ClauseRegisterChild(1830,43897
void ClauseAddEvalCell(1850,44459
void ClauseRemoveEvaluations(1869,44925
double ClauseWeight(1888,45396
double ClauseFunWeight(1919,46244
double ClauseNonLinearWeight(1954,47234
double ClauseSymTypeWeight(1989,48158
double ClauseStandardWeight(2021,49013
double ClauseOrientWeight(2046,49601
bool ClauseNotGreaterEqual(2091,50809
int ClauseCompareFun(2171,52743
Clause_p ClauseNormalizeVars(2215,53685
long ClauseCollectSubterms(2255,54665
long ClauseReturnFCodes(2287,55422

CLAUSES/ccl_clausesets.c,2391
static void print_var_pattern(53,1532
static void eq_func_axiom_print(90,2267
static void eq_pred_axiom_print(136,3365
static void tptp_eq_func_axiom_print(177,4318
static void tptp_eq_pred_axiom_print(223,5491
static void clause_set_extract_entry(268,6597
ClauseSet_p ClauseSetAlloc(318,8046
void ClauseSetFreeClauses(353,8852
void ClauseSetFree(379,9334
void ClauseSetGCMarkTerms(411,9976
void ClauseSetInsert(434,10485
long ClauseSetInsertSet(474,11535
void ClauseSetPDTIndexedInsert(501,12101
void ClauseSetIndexedInsert(542,13161
void ClauseSetIndexedInsertClause(573,13867
Clause_p ClauseSetExtractEntry(593,14403
Clause_p ClauseSetExtractFirst(637,15487
void ClauseSetDeleteEntry(665,16055
Clause_p ClauseSetFindBest(686,16522
void ClauseSetPrint(720,17245
void ClauseSetTSTPPrint(745,17825
void ClauseSetPrintPrefix(770,18446
void ClauseSetSort(802,19237
void ClauseSetSetProp(839,20070
void ClauseSetDelProp(863,20568
long ClauseSetMarkCopies(890,21265
long ClauseSetDeleteMarkedEntries(932,22154
long ClauseSetDeleteCopies(971,23001
long ClauseSetDeleteNonUnits(998,23555
long ClauseSetGetTermNodes(1035,24359
long ClauseSetMarkSOS(1061,24940
void ClauseSetTermSetProp(1096,25708
long ClauseSetTBTermPropDelCount(1119,26272
long ClauseSetGetSharedTermNodes(1144,26882
long ClauseSetParseList(1169,27477
void ClauseSetMarkMaximalTerms(1198,28103
void ClauseSetSortLiterals(1222,28615
SysDate ClauseSetListGetMaxDate(1247,29214
Clause_p ClauseSetFind(1275,29894
Clause_p ClauseSetFindById(1309,30565
void ClauseSetRemoveEvaluations(1341,31217
long ClauseSetFilterTrivial(1371,31935
long ClauseSetFilterTautologies(1411,32741
Clause_p ClauseSetFindMaxStandardWeight(1450,33596
ClausePos_p ClauseSetFindEqDefinition(1486,34404
void ClauseSetDocInital(1534,35440
void ClauseSetPropDocQuote(1563,36069
bool ClauseSetVerifyDemod(1596,36840
bool PDTreeVerifyIndex(1630,37551
void EqAxiomsPrint(1712,39459
void ClauseSetAddSymbolDistribution(1786,41218
void ClauseSetAddConjSymbolDistribution(1810,41796
void ClauseSetComputeFunctionRanks(1838,42455
FunCode ClauseSetFindFreqSymbol(1864,43107
long ClauseSetMaxVarNumber(1909,44193
long ClauseSetFindCharFreqVectors(1940,44929
PermVector_p PermVectorCompute(1982,46091
long ClauseSetFVIndexify(2033,47358
long ClauseSetNewTerms(2068,48146
long ClauseSetSplitConjectures(2106,49034

CLAUSES/ccl_context_sr.c,90
int ClauseContextualSimplifyReflect(60,1840
long ClauseSetFindContextSRClauses(118,3333

CLAUSES/ccl_def_handling.c,120
DefStore_p DefStoreAlloc(63,2018
void DefStoreFree(89,2629
Eqn_p GenDefLit(109,3060
Clause_p GetDefinition(167,4722

CLAUSES/ccl_eqn.c,2384
bool EqnUseInfix 34,878
bool EqnFullEquationalRep 35,903
IOFormat OutputFormat 36,938
static CompareResult compare_pos_eqns(112,3660
static CompareResult compare_poseqn_negeqn(179,6104
#define BOOL_TERM_NORMALIZE(243,8052
static bool eqn_parse_infix(265,8595
static bool eqn_parse_prefix(346,10975
static bool eqn_parse_mixfix(402,12301
bool eqn_parse_real(426,12917
Eqn_p EqnAlloc(504,14951
void EqnFree(556,16341
Eqn_p EqnParse(581,17031
Eqn_p EqnFOFParse(608,17585
Term_p EqnTermsTBTermEncode(635,18240
Eqn_p EqnTBTermDecode(679,19241
Term_p EqnTBTermParse(709,19944
void EqnPrint(737,20635
void EqnFOFPrint(836,22733
void EqnTSTPPrint(912,24326
void EqnSwapSidesSimple(953,25359
void EqnSwapSides(976,25839
Eqn_p EqnCopy(1001,26515
Eqn_p EqnCopyRepl(1033,27288
Eqn_p EqnCopyOpt(1064,28158
Eqn_p EqnCopyDisjoint(1096,28952
bool EqnIsACTrivial(1128,29684
bool EqnTermsAreDistinct(1147,30132
bool EqnIsTrue(1175,30931
bool EqnIsFalse(1197,31381
bool EqnHasUnboundVars(1222,31861
EqnSide EqnIsDefinition(1256,32735
int EqnSubsumeQOrderCompare(1291,33582
int EqnSubsumeInverseCompareRef(1328,34402
int EqnSubsumeInverseRefinedCompareRef(1353,35047
int EqnSubsumeCompare(1397,36105
Eqn_p EqnCanonize(1420,36747
int EqnStructWeightCompare(1454,37518
int EqnCanonCompare(1502,38461
int EqnStructWeightLexCompare(1523,38927
bool EqnEqualDirected(1555,39643
bool EqnEqual(1581,40242
bool EqnSubsumeDirected(1612,41054
bool EqnSubsume(1650,42002
bool EqnSubsumeP(1684,42818
bool LiteralSubsumeP(1709,43389
bool EqnUnifyDirected(1735,44088
bool EqnUnify(1771,44925
bool  EqnUnifyP(1799,45551
bool EqnOrient(1823,46063
CompareResult EqnCompare(1890,47501
bool EqnGreater(1911,47945
CompareResult LiteralCompare(1951,49004
bool LiteralGreater(2010,50240
FunCode SubstNormEqn(2033,50811
double EqnWeight(2057,51355
double EqnFunWeight(2090,52064
double EqnNonLinearWeight(2127,53100
double  EqnSymTypeWeight(2160,53886
double EqnMaxWeight(2194,54731
double EqnCorrectedWeight(2217,55393
double EqnCorrectedNonLinearWeight(2259,56376
long EqnMaxTermPositions(2303,57337
long EqnInferencePositions(2328,57888
double  LiteralWeight(2356,58656
double  LiteralFunWeight(2394,59542
double  LiteralNonLinearWeight(2437,60787
double LiteralSymTypeWeight(2480,61940
int LiteralCompareFun(2517,62736
long EqnCollectSubterms(2555,63649

CLAUSES/ccl_eqnlist.c,1779
EqnRef eqn_list_find_last(54,1559
void EqnListFree(80,2182
void EqnListGCMarkTerms(105,2634
int EqnListSetProp(128,3086
int EqnListDelProp(155,3599
int EqnListFlipProp(182,4113
int EqnListQueryPropNumber(208,4593
int EqnListLength(237,5085
Eqn_p EqnListFromArray(261,5495
PStack_p EqnListToStack(291,6109
Eqn_p EqnListExtractElement(317,6625
Eqn_p EqnListExtractByProps(341,7137
void EqnListDeleteElement(373,7813
void EqnListInsertElement(395,8261
Eqn_p EqnListAppend(414,8644
Eqn_p EqnListFlatCopy(439,9153
Eqn_p EqnListCopy(470,9869
Eqn_p EqnListCopyExcept(501,10569
Eqn_p EqnListCopyOpt(534,11267
Eqn_p EqnListCopyOptExcept(565,11931
Eqn_p EqnListCopyDisjoint(598,12591
Eqn_p EqnListCopyRepl(630,13264
Eqn_p EqnListNegateEqns(661,13879
int EqnListRemoveDuplicates(688,14453
int EqnListRemoveResolved(726,15163
int EqnListRemoveACResolved(758,15746
Eqn_p EqnListFindNegPureVarLit(791,16390
Eqn_p EqnListFindTrue(818,16902
bool EqnListIsTrivial(845,17428
bool EqnListIsACTrivial(884,18153
bool EqnListIsGround(910,18657
bool EqnListIsEquational(939,19164
bool EqnListIsPureEquational(965,19647
int EqnListOrient(992,20204
int EqnListMaximalLiterals(1023,20861
bool EqnListEqnIsMaximal(1077,22202
bool EqnListEqnIsStrictlyMaximal(1119,23209
void EqnListDeleteTermProperties(1160,24128
void EqnListPrint(1186,24824
void EqnListTSTPPrint(1216,25467
Eqn_p EqnListParse(1246,26112
FunCode NormSubstEqnListExcept(1288,27231
long EqnListDepth(1318,27870
void EqnListAddSymbolDistribution(1348,28558
void EqnListComputeFunctionRanks(1370,29045
long EqnListCollectVariables(1393,29586
void EqnListTermSetProp(1418,30077
long EqnListTBTermDelPropCount(1441,30578
long EqnListTermDelProp(1467,31134
long EqnListCollectSubterms(1494,31792

CLAUSES/ccl_eqnresolution.c,156
bool EqResOnMaximalLiteralsOnly 31,793
Clause_p ComputeEqRes(61,1866
Eqn_p ClausePosFirstEqResLiteral(102,3004
Eqn_p ClausePosNextEqResLiteral(133,3724

CLAUSES/ccl_factor.c,381
Eqn_p find_next_potential_eq_factor_partner(58,1693
Eqn_p find_first_eq_factor_partner(86,2453
Clause_p ComputeOrderedFactor(124,3594
Eqn_p ClausePosFirstOrderedFactorLiterals(183,5267
Eqn_p ClausePosNextOrderedFactorLiterals(223,6373
Clause_p ComputeEqualityFactor(268,7490
Eqn_p ClausePosFirstEqualityFactorSides(329,9588
Eqn_p ClausePosNextEqualityFactorSides(364,10395

CLAUSES/ccl_fcvindexing.c,475
FVIndexParmsCell FVIDefaultParameters 31,777
static FVIndex_p insert_empty_node(62,1715
void FVIndexParmsInit(101,2766
FVIndexParms_p FVIndexParmsAlloc(118,3165
FVIndex_p FVIndexAlloc(140,3616
void FVIndexFree(166,4190
FVIAnchor_p FVIAnchorAlloc(205,5008
void FVIAnchorFree(232,5630
FVIndex_p FVIndexGetNextNonEmptyNode(264,6418
void FVIndexInsert(292,6999
bool FVIndexDelete(340,8263
long FVIndexCountNodes(380,9274
FVPackedClause_p FVIndexPackClause(431,10325

CLAUSES/ccl_findex.c,454
static void findex_add_instance(54,1501
static void findex_remove_instance(75,1996
FIndex_p FIndexAlloc(102,2678
void FIndexFree(124,3081
void FIndexAddClause(151,3595
void FIndexRemoveClause(179,4203
void FIndexAddClauseSet(209,4825
void FIndexAddPLClause(234,5376
void FIndexRemovePLClause(265,6029
void FIndexAddPLClauseSet(295,6678
void FIndexAddPLFormula(322,7217
void FIndexRemovePLFormula(353,7878
void FIndexAddPLFormulaSet(383,8529

CLAUSES/ccl_formula_wrapper.c,487
long global_formula_counter 31,757
long FormulaDefLimit 32,797
WFormula_p DefaultWFormulaAlloc(62,1891
WFormula_p WTFormulaAlloc(91,2642
void WFormulaFree(115,3171
void WFormulaGCMarkCells(142,3752
void WFormulaMarkPolarity(159,4152
WFormula_p WFormulaTPTPParse(176,4541
void WFormulaTPTPPrint(236,6060
WFormula_p WFormulaTSTPParse(287,7093
void WFormulaTSTPPrint(358,9243
WFormula_p WFormulaParse(423,10605
void WFormulaPrint(463,11553
long WFormulaReturnFCodes(495,12320

CLAUSES/ccl_formulafunc.c,579
Clause_p tformula_collect_clause(60,1646
static bool verify_name(122,3330
static void check_all_found(153,4035
bool WFormulaConjectureNegate(218,5831
bool WFormulaSimplify(247,6726
long FormulaSetPreprocConjectures(280,7661
long WFormulaCNF(311,8281
long FormulaSetSimplify(333,8939
long FormulaSetCNF(382,10196
long FormulaAndClauseSetParse(436,11787
long TFormulaToCNF(543,15069
void TFormulaSetDelTermpProp(593,16412
void TFormulaSetFindDefs(620,17105
long TFormulaApplyDefs(655,18197
long TFormulaSetIntroduceDefs(694,19224
void FormulaSetDocInital(747,20803

CLAUSES/ccl_formulasets.c,445
FormulaSet_p FormulaSetAlloc(60,1744
void FormulaSetFreeFormulas(84,2275
void FormulaSetFree(106,2740
void FormulaSetGCMarkCells(128,3239
void FormulaSetMarkPolarity(153,3752
void FormulaSetInsert(179,4242
long FormulaSetInsertSet(207,4888
WFormula_p FormulaSetExtractEntry(235,5464
WFormula_p FormulaSetExtractFirst(263,6069
void FormulaSetDeleteEntry(287,6539
void FormulaSetPrint(309,6946
long FormulaSetSplitConjectures(338,7640

CLAUSES/ccl_freqvectors.c,738
int tuple3_compare_23lex(54,1641
PermVector_p PermVectorComputeInternal(107,2916
FreqVector_p FreqVectorAlloc(174,4594
void FreqVectorFreeReal(198,5146
void FreqVectorInitialize(226,5685
void FreqVectorPrint(248,6103
void VarFreqVectorAddVals(285,6849
FreqVector_p VarFreqVectorCompute(379,9397
FreqVector_p OptimizedVarFreqVectorCompute(413,10287
FVPackedClause_p FVPackClause(454,11329
Clause_p FVUnpackClause(485,12038
void FVPackedClauseFreeReal(510,12490
void FreqVectorAdd(534,13045
void FreqVectorMulAdd(563,13749
void FreqVectorMax(591,14360
void FreqVectorMin(618,14940
void StandardFreqVectorAddVals(647,15606
FreqVector_p StandardFreqVectorCompute(692,16813
FreqVector_p OptimizedFreqVectorCompute(719,17555

CLAUSES/ccl_g_lithash.c,221
void lit_tree_free(55,1658
int LitDescCompare(98,2682
LitHash_p LitHashAlloc(119,3191
void LitHashFree(150,3882
void LitHashInsertEqn(178,4550
void LitHashInsertClause(221,5579
void LitHashInsertClauseSet(244,6109

CLAUSES/ccl_garbage_coll.c,229
GCAdmin_p GCAdminAlloc(59,1789
void GCAdminFree(84,2303
void GCRegisterFormulaSet(105,2755
void GCRegisterClauseSet(123,3177
void GCDeregisterFormulaSet(141,3611
void GCDeregisterClauseSet(158,4050
long GCCollect(175,4441

CLAUSES/ccl_groundconstr.c,432
LitOccTable_p LitOccTableAlloc(63,1957
void LitOccTableFree(100,2912
bool LitPosGetConstrState(134,3643
void LitPosSetConstrState(157,4207
PTree_p LitPosGetConstraints(181,4837
bool LitPosAddConstraint(206,5518
void LitOccAddLitAlt(236,6167
void LitOccAddClauseAlt(274,6891
void LitOccAddClauseSetAlt(299,7456
long SigCollectConstantTerms(328,8218
void EqnCollectVarConstr(385,9630
void ClauseCollectVarConstr(440,10842

CLAUSES/ccl_grounding.c,974
long clause_get_max_lit(56,1712
void varsetinstapply(82,2299
void varsetinstclear(111,3072
bool varsetinstinitialize(135,3616
double varinstestimate(165,4230
bool varsetinstnext(192,4820
void ground_set_print_unit(222,5454
int  ClauseCmpByLen(254,6460
bool EqnEqlitRecode(281,7185
bool ClauseEqlitRecode(315,8024
long ClauseSetEqlitRecode(341,8584
VarSetInst_p VarSetInstAlloc(371,9209
void VarSetInstFree(413,10113
VarSetInst_p VarSetConstrInstAlloc(446,10783
void VarSetConstrInstFree(512,12385
void PrintDimacsHeader(549,13099
void ClausePrintDimacs(571,13556
void ClauseSetPrintDimacs(610,14414
GroundSet_p GroundSetAlloc(634,14930
void GroundSetFree(664,15630
bool GroundSetInsert(691,16392
void GroundSetPrint(750,17762
void GroundSetPrintDimacs(785,18569
bool GroundSetUnitSimplifyClause(826,19574
bool ClauseCreateGroundInstances(890,20841
bool ClauseSetCreateGroundInstances(967,22633
bool ClauseSetCreateConstrGroundInstances(1050,24620

CLAUSES/ccl_inferencedoc.c,1651
OutputFormatType DocOutputFormat 31,791
bool             PCLFullTerms 32,840
bool             PCLStepCompact 33,880
char* pcl_type_str(58,1761
static void pcl_print_start(90,2355
static void pcl_print_end(110,2905
static void tstp_print_end(141,3639
static void print_initial(171,4289
static void print_paramod(206,5161
static void print_eres(245,6138
static void print_efactor(281,7018
static void print_factor(317,7902
static void print_split(354,8776
static void print_simplify_reflect(392,9748
static void print_context_simplify_reflect(429,10717
static void print_ac_res(468,11684
static void print_minimize(521,13038
static void print_rewrite(556,13945
static void print_eq_unfold(624,15717
static void pcl_formula_print_start(687,17266
static void pcl_formula_print_end(709,17858
static void tstp_formula_print_end(731,18330
static void print_formula_initial(753,18768
static void print_fof_intro_def(788,19623
static void print_fof_simpl(822,20429
static void print_neg_conj(856,21318
static void print_fof_nnf(890,22191
static void print_shift_quantors(925,23113
static void print_skolemize(960,23989
static void print_distribute(994,24862
static void print_var_rename(1029,25739
void DocClauseCreation(1070,26912
void DocClauseFromForm(1137,28706
void DocClauseModification(1182,29972
void DocClauseQuote(1243,31647
void DocClauseRewrite(1312,33267
void DocClauseEqUnfold(1343,34094
void DocFormulaCreation(1371,34822
void DocFormulaModification(1411,35836
void DocFormulaIntroDefs(1462,37226
void DocIntroSplitDef(1524,39037
void DocIntroSplitDefRest(1566,40280
void DocClauseApplyDefs(1611,41569

CLAUSES/ccl_neweval.c,661
long EvaluationCounter 29,793
static Eval_p splay_tree(53,1577
Eval_p EvalsAlloc(148,3919
void EvalsFree(172,4423
void EvalPrint(194,4859
void EvalPrintComment(213,5336
void EvalListPrint(234,5748
void EvalListPrintComment(257,6181
void EvalListSetPriority(277,6611
void EvalListChangePriority(299,7076
bool EvalGreater(325,7555
long EvalCompare(365,8501
Eval_p EvalTreeInsert(408,9450
Eval_p EvalTreeFind(454,10556
Eval_p EvalTreeExtractEntry(482,11154
bool EvalTreeDeleteEntry(523,12082
Eval_p EvalTreeFindSmallest(549,12578
PStack_p EvalTreeTraverseInit(576,13117
Eval_p EvalTreeTraverseNext(601,13673
void EvalTreePrintInOrder(634,14367

CLAUSES/ccl_paramod.c,704
bool ParamodOverlapNonEqLiterals 35,931
bool ParamodOverlapIntoNegativeLiterals 36,972
#define PARAMOD_FROM_LENGTH_LIMIT 69,2250
static bool check_paramod_ordering_constraint(73,2373
static Term_p clause_pos_find_first_neg_max_lside(114,3385
Term_p ComputeOverlap(162,4782
Eqn_p  EqnOrderedParamod(222,6519
Clause_p ClauseOrderedParamod(281,8253
Clause_p ClauseOrderedSimParamod(387,11341
#define IS_NO_PARAMOD_POS 510,15797
Term_p ClausePosFirstParamodInto(536,16847
Term_p ClausePosNextParamodInto(587,18298
Term_p ClausePosFirstParamodFromSide(635,19699
Term_p ClausePosNextParamodFromSide(671,20753
Term_p ClausePosFirstParamodPair(702,21573
Term_p ClausePosNextParamodPair(743,22684

CLAUSES/ccl_pdtrees.c,847
bool PDTreePreferGeneral 32,836
static void pdtree_default_cell_free(56,1643
static void* pdt_select_alt_ref(82,2243
static bool recompute_node_constraints(117,3304
static long  delete_clause_entries(196,5269
static bool pdtree_verify_node_constr(240,6260
static void pdtree_forward(275,7145
static void pdtree_backtrack(355,9352
void pdt_node_print(395,10296
PDTree_p PDTreeAlloc(465,12350
void PDTreeFree(504,13386
PDTNode_p PDTNodeAlloc(528,13889
void PDTNodeFree(564,14775
void TermLRTraverseInit(608,15685
Term_p TermLRTraverseNext(628,16166
Term_p TermLRTraversePrev(660,16799
void PDTreeInsert(689,17340
long PDTreeDelete(756,19143
void PDTreeSearchInit(835,21021
void PDTreeSearchExit(864,21911
PDTNode_p PDTreeFindNextIndexedLeaf(891,22563
ClausePos_p PDTreeFindNextDemodulator(926,23410
void PDTreePrint(969,24286

CLAUSES/ccl_proofstate.c,371
char* UseInlinedWatchList 33,853
ProofState_p ProofStateAlloc(68,2272
void ProofStateInitWatchlist(149,5748
void ProofStateResetClauseSets(212,7677
void ProofStateFree(245,8554
void ProofStateGCMarkTerms(290,9794
long ProofStateGCSweepTerms(319,10693
void ProofStateStatisticsPrint(338,11091
void ProofStatePrint(440,15352
void ProofStatePropDocQuote(467,16324

CLAUSES/ccl_propclauses.c,335
PropClause_p PropClauseAlloc(61,1851
void PropClauseFree(110,2894
Clause_p PropClauseToClause(139,3507
void PropClausePrint(172,4355
PropClauseSet_p PropClauseSetAlloc(193,4849
void PropClauseSetFree(219,5392
long PropClauseSetInsertPropClause(247,5975
long PropClauseSetInsertClause(277,6673
void PropClauseSetPrint(299,7186

CLAUSES/ccl_relevance.c,424
void find_level_fcodes(56,1639
void extract_new_core(120,3332
static void move_clauses(161,4362
static void move_formulas(188,4961
static void proofstate_rel_prune(217,5589
Relevance_p RelevanceAlloc(276,7487
void RelevanceFree(310,8342
void ClausePListPrint(349,9162
void FormulaPListPrint(376,9718
long RelevanceDataInit(407,10365
Relevance_p RelevanceDataCompute(439,11255
long ProofStatePreprocess(487,12491

CLAUSES/ccl_rewrite.c,952
long RewriteAttempts 30,735
long RewriteSucesses 31,761
long RewriteUnboundVarFails 32,787
bool RewriteStrongRHSInst 33,820
static bool instance_is_rule(63,1921
/* static */ Term_p term_follow_top_RW_chain(99,2904
static RWResultType term_is_top_rewritable(133,3815
static bool term_is_rewritable(227,7042
static EqnSide eqn_has_rw_side(311,9225
static bool clause_is_rewritable(348,10247
static bool find_rewritable_clauses(382,11017
static ClausePos_p indexed_find_demodulator(420,11864
static Term_p rewrite_with_clause_set(508,14158
static Term_p rewrite_with_clause_setlist(556,15463
static bool term_subterm_rewrite(605,16668
static Term_p term_li_normalform(646,17826
EqnSide eqn_li_normalform(728,20234
static __inline__ RWDesc_p rw_desc_cell_alloc(783,21530
Term_p TermComputeLINormalform(823,22805
bool ClauseComputeLINormalform(851,23640
long ClauseSetComputeLINormalform(923,25537
bool FindRewritableClauses(969,26643

CLAUSES/ccl_splitting.c,420
static void initialize_lit_table(55,1592
static int find_free_literal(99,2758
static void build_part(130,3477
int clause_split_general(187,5141
static void initialize_permute_stack(385,10999
static bool permute_stack_next(409,11514
bool ClauseHasSplitLiteral(451,12462
int ClauseSplit(490,13469
int ClauseSplitGeneral(518,14287
long ClauseSetSplitClauses(594,16052
long ClauseSetSplitClausesGeneral(629,16856

CLAUSES/ccl_subsumption.c,1799
bool StrongUnitForwardSubsumption 30,770
long ClauseClauseSubsumptionCalls 31,813
long ClauseClauseSubsumptionCallsRec 32,852
long UnitClauseClauseSubsumptionCalls 33,894
ClausePos_p unit_clause_set_strongsubsumes_termpair(61,1817
Clause_p unit_clause_set_subsumes_clause(112,2886
static bool eqn_topsubsumes_termpair(159,3876
static bool eqn_subsumes_termpair(202,4736
static Eqn_p find_spec_literal_old(261,5870
static Eqn_p find_spec_literal(302,6867
static bool check_subsumption_possibility(374,8450
   bool    res 392,8815
   Eqn_p   sub_eqn;393,8838
   PStack_p lit_stack 394,8858
bool eqn_list_rec_subsume_old(428,9575
bool eqn_list_rec_subsume(514,11891
static bool clause_subsumes_clause(610,14263
Clause_p clause_set_subsumes_clause(698,16875
Clause_p clause_tree_find_subsuming_clause(733,17751
Clause_p clause_set_subsumes_clause_indexed(774,18803
void clause_tree_find_subsumed_clauses(821,19923
void clauseset_find_subsumed_clauses(860,20966
void clauseset_find_subsumed_clauses_indexed(894,21744
Clause_p clause_tree_find_variant_clause(940,22771
Clause_p clauseset_find_variant_clause_indexed(981,23683
bool LiteralSubsumesClause(1024,24970
bool UnitClauseSubsumesClause(1067,25788
Clause_p UnitClauseSetSubsumesClause(1096,26454
Clause_p ClauseSetFindUnitSubsumedClause(1126,27151
bool ClausePositiveSimplifyReflect(1159,28009
bool ClauseNegativeSimplifyReflect(1214,29373
bool ClauseSubsumesClause(1261,30491
Clause_p ClauseSetSubsumesFVPackedClause(1287,31217
Clause_p ClauseSetSubsumesClause(1314,31981
Clause_p ClauseSetFindSubsumedClause(1346,32987
long ClauseSetFindFVSubsumedClauses(1378,33826
long ClauseSetFindSubsumedClauses(1413,34685
Clause_p ClauseSetFindFVVariantClause(1444,35487
Clause_p ClauseSetFindVariantClause(1467,36099

CLAUSES/ccl_tautologies.c,338
CompareResult TO_ground_compare(57,1693
static bool ground_orient_eqn(120,2988
static bool term_compute_top_nf(151,3661
static bool term_compute_ground_NF(196,4795
static bool ground_normalize_eqn(226,5512
static void ground_backward_contract(269,6612
static void ground_complete_neg_eqns(303,7313
bool ClauseIsTautology(347,8457

CLAUSES/ccl_tcnf.c,722
TFormula_p tprop_arg_return_other(55,1642
TFormula_p tprop_arg_return(82,2300
TFormula_p troot_nnf(110,2935
TFormula_p tformula_rek_skolemize(237,8121
bool tformula_rename_test(312,10395
#define RETURN_IF_LARGE(405,13038
long TFormulaEstimateClauses(408,13142
TFormula_p TFormulaDefRename(557,18162
void TFormulaFindDefs(620,20010
TFormula_p TFormulaCopyDef(720,23630
TFormula_p TFormulaSimplify(789,25598
TFormula_p TFormulaNNF(959,31060
TFormula_p TFormulaMiniScope(1032,33217
TFormula_p TFormulaVarRename(1129,36656
TFormula_p TFormulaSkolemizeOutermost(1186,38248
TFormula_p TFormulaShiftQuantors(1217,39020
TFormula_p TFormulaDistributeDisjunctions(1283,41149
void WTFormulaConjunctiveNF(1348,43361

CLAUSES/ccl_tformulae.c,1126
static FunCode tptp_operator_convert(57,1747
static FunCode tptp_operator_parse(108,2807
static FunCode tptp_quantor_parse(131,3315
static TFormula_p quantified_tform_tptp_parse(164,4060
static TFormula_p elem_tform_tptp_parse(217,5512
static TFormula_p quantified_tform_tstp_parse(265,6804
static TFormula_p literal_tform_tstp_parse(319,8272
static TFormula_p assoc_tform_tstp_parse(366,9449
bool TFormulaIsPropConst(403,10328
TFormula_p TFormulaFCodeAlloc(428,10969
TFormula_p TFormulaLitAlloc(469,11868
TFormula_p TFormulaPropConstantAlloc(495,12499
TFormula_p TFormulaQuantorAlloc(519,13054
void TFormulaTPTPPrint(540,13548
TFormula_p TFormulaTPTPParse(639,15967
TFormula_p TFormulaTSTPParse(671,16654
bool TFormulaVarIsFree(708,17449
void TFormulaCollectFreeVars(759,18566
TFormula_p TFormulaAddQuantor(800,19697
TFormula_p TFormulaAddQuantors(825,20329
TFormula_p TFormulaClosure(855,21085
TFormula_p TFormulaCreateDef(881,21732
TFormula_p TFormulaClauseEncode(925,22989
void TFormulaMarkPolarity(965,23936
int TFormulaDecodePolarity(1030,25669
TFormula_p TFormulaClauseClosedEncode(1065,26526

CLAUSES/ccl_unfold_defs.c,263
static Term_p term_top_unfold_def(54,1609
static Term_p term_unfold_def(94,2750
static bool eqn_unfold_def(142,3745
bool ClauseUnfoldEqDef(180,4767
bool ClauseSetUnfoldEqDef(219,5663
long ClauseSetUnfoldAllEqDefs(251,6464
long ClauseSetPreprocess(294,7711

CLAUSES/ccl_unit_simplify.c,228
char* UnitSimplifyNames[UnitSimplifyNames32,821
ClausePos_p FindTopSimplifyingUnit(70,1937
ClausePos_p FindSignedTopSimplifyingUnit(112,3118
ClausePos_p FindSimplifyingUnit(156,4300
bool ClauseSimplifyWithUnitSet(226,5809

CONTROL/cco_clausesplitting.c,36
int  ControlledClauseSplit(62,1973

CONTROL/cco_eqnresolving.c,74
long ComputeAllEqnResolvents(62,1920
long ClauseERNormalizeVar(113,3449

CONTROL/cco_factoring.c,80
long ComputeAllOrderedFactors(61,1785
long ComputeAllEqualityFactors(114,3274

CONTROL/cco_forward_contraction.c,345
static FVPackedClause_p forward_contract_keep(60,1927
bool ForwardModifyClause(171,5398
FVPackedClause_p ForwardContractClause(240,7416
Clause_p ForwardContractSet(281,8539
void ClauseSetReweight(333,9690
Clause_p ForwardContractSetReweight(383,10937
void ClauseSetFilterReweigth(420,11805
Clause_p ProofStateFilterUnprocessed(444,12485

CONTROL/cco_paramodulation.c,122
Clause_p variable_paramod(55,1582
long ComputeClauseClauseParamodulants(114,3457
long ComputeAllParamodulants(248,7569

CONTROL/cco_proofproc.c,729
static void check_ac_status(56,1597
static long remove_subsumed(89,2470
eliminate_backward_rewritten_clauses(132,3546
static long eliminate_backward_subsumed_clauses(187,5172
static void eliminate_unit_simplified_clauses(235,6606
static long eliminate_context_sr_clauses(272,7630
void check_watchlist(297,8321
void simplify_watchlist(332,9431
static void generate_new_clauses(384,10808
static Clause_p insert_new_clauses(447,13494
static void print_sharing_factor(557,17138
void print_rw_state(597,18421
void ProofControlInit(632,19542
void ProofStateResetProcessedSet(705,21672
void ProofStateResetProcessed(747,22841
void ProofStateInit(771,23683
Clause_p ProcessClause(887,27590
Clause_p Saturate(1062,32676

CONTROL/cco_simplification.c,151
void ClauseMoveSimplified(61,1819
bool RemoveRewritableClauses(82,2371
long ClauseSetUnitSimplify(116,3249
long RemoveContextualSRClauses(154,4088

EXTERNAL/CSSCPA_filter.c,380
#define NAME 33,933
   OPT_NOOPT=37,981
   OPT_HELP,38,997
   OPT_VERSION,39,1010
   OPT_VERBOSE,40,1026
   OPT_OUTPUT,41,1042
   OPT_SILENT,42,1057
   OPT_OUTPUTLEVEL,43,1072
   OPT_RANT44,1092
}OptionCodes;OptionCodes45,1104
OptCell opts[opts53,1344
char   *outname outname101,2471
int main(115,3025
CLState_p process_options(181,4575
void print_help(238,5804

EXTERNAL/cex_csscpa.c,297
char* ClauseStatusString(52,1519
static void print_csscpa_state(88,2218
static long collect_subsumed(118,3101
static Clause_p find_unit_contradiction(165,4174
CSSCPAState_p CSSCPAStateAlloc(214,5327
void CSSCPAStateFree(246,6184
bool CSSCPAProcessClause(278,7111
void CSSCPALoop(444,11561

HEURISTICS/che_axiomscan.c,159
#define FAIL_ON(41,1179
FunCode DetectCommutativity(61,1795
FunCode DetectAssociativity(109,3181
bool ClauseScanAC(172,4908
bool ClauseSetScanAC(212,5822

HEURISTICS/che_clausefeatures.c,590
static long term_depth_info_add(55,1580
static long eqn_tptp_depth_info_add(84,2232
int ClauseCountExtSymbols(123,3243
FunCode TermAddVarDistribution(160,4116
FunCode EqnAddVarDistribution(211,5187
FunCode EqnListAddVarDistribution(234,5740
long ClauseCountVariableSet(261,6318
long ClauseCountSingletonSet(294,7010
long ClauseCountMaximalTerms(327,7717
long ClauseCountMaximalLiterals(355,8294
long ClauseCountUnorientableLiterals(383,8853
long ClauseTPTPDepthInfoAdd(412,9450
void ClauseInfoPrint(446,10278
void ClauseLinePrint(472,10979
void ClausePropInfoPrint(497,11535

HEURISTICS/che_clausesetfeatures.c,1464
SpecLimits_p SpecLimitsAlloc(58,1778
long ClauseSetCountGoals(110,3422
long ClauseSetCountUnit(138,3957
long ClauseSetCountUnitGoals(167,4502
long ClauseSetCountHorn(196,5064
long ClauseSetCountHornGoals(224,5603
long ClauseSetCountEquational(253,6202
long ClauseSetCountPureEquational(281,6788
long ClauseSetCountPosUnits(310,7355
long ClauseSetCountGroundGoals(339,7914
long ClauseSetCountGround(368,8485
long ClauseSetCountGroundUnitAxioms(397,9051
long ClauseSetCountGroundPositiveAxioms(426,9657
long ClauseSetCountPositiveAxioms(455,10258
long ClauseSetCountTPTPRangeRestricted(484,10832
double ClauseSetNonGoundAxiomPart(514,11476
long ClauseSetCollectArityInformation(541,12228
long ClauseSetCountMaximalTerms(627,14237
long ClauseSetCountMaximalLiterals(652,14802
long ClauseSetCountVariables(679,15464
long ClauseSetCountSingletons(706,16122
long ClauseSetTPTPDepthInfoAdd(733,16734
long ClauseSetCountUnorientableLiterals(759,17371
long ClauseSetCountEqnLiterals(784,17951
long ClauseSetMaxStandardWeight(811,18555
long ClauseSetTermCells(836,19072
long ClauseSetMaxLiteralNumber(862,19622
void SpecFeaturesCompute(888,20178
void SpecFeaturesAddEval(1032,24171
void SpecFeaturesPrint(1219,28998
void SpecFeaturesParse(1267,30358
void SpecTypePrint(1401,34437
void ClauseSetPrintPosUnits(1447,35741
void ClauseSetPrintNegUnits(1474,36342
void ClauseSetPrintNonUnits(1502,36954
void ProofStatePrintSelective(1531,37601

HEURISTICS/che_clauseweight.c,651
double uniq_term_weight(54,1523
double uniq_eqn_weight(87,2121
WFCB_p ClauseWeightInit(112,2855
WFCB_p ClauseWeightParse(138,3536
double ClauseWeightCompute(171,4353
WFCB_p LMaxWeightInit(194,4905
WFCB_p LMaxWeightParse(220,5578
double LMaxWeightCompute(254,6461
WFCB_p CMaxWeightInit(285,7170
WFCB_p CMaxWeightParse(311,7843
double CMaxWeightCompute(345,8729
void ClauseWeightExit(373,9427
WFCB_p UniqWeightInit(394,9953
WFCB_p UniqWeightParse(413,10386
double UniqWeightCompute(436,10937
WFCB_p DefaultWeightInit(462,11547
WFCB_p DefaultWeightParse(481,11993
double DefaultWeightCompute(504,12528
void TrivialWeightExit(522,12983

HEURISTICS/che_fcode_featurearrays.c,171
static int feature_compare_function(54,1632
FCodeFeatureArray_p FCodeFeatureArrayAlloc(99,2768
void FCodeFeatureArrayFree(152,4343
void FCodeFeatureArraySort(171,4827

HEURISTICS/che_fifo.c,120
WFCB_p FIFOEvalInit(62,1728
WFCB_p FIFOEvalParse(85,2189
double FIFOEvalCompute(110,2728
void FIFOEvalExit(131,3151

HEURISTICS/che_funweights.c,581
static void init_conj_vector(56,1695
static void init_relevance_vector2(110,3167
static void init_relevance_vector(162,4591
WFCB_p ConjectureSymbolWeightInit(215,6191
WFCB_p RelevanceLevelWeightInit(273,8263
WFCB_p RelevanceLevelWeightInit2(331,10453
WFCB_p ConjectureSymbolWeightParse(394,12655
WFCB_p ConjectureSimplifiedSymbolWeightParse(458,14776
WFCB_p ConjectureRelativeSymbolWeightParse(518,16775
WFCB_p RelevanceLevelWeightParse(582,18709
WFCB_p RelevanceLevelWeightParse2(665,20963
double GenericFunWeightCompute(745,23252
void GenericFunWeightExit(773,24080

HEURISTICS/che_hcb.c,470
static Clause_p get_next_clause(54,1566
void default_exit_fun(67,1778
void HeuristicParmsInitialize(88,2346
HeuristicParms_p HeuristicParmsAlloc(164,5296
void HeuristicParmsFree(184,5747
HCB_p HCBAlloc(209,6244
void HCBFree(237,6941
long HCBAddWFCB(266,7572
void HCBClauseEvaluate(300,8400
Clause_p HCBStandardClauseSelect(327,9037
Clause_p HCBSingleWeightClauseSelect(360,9770
long HCBClauseSetDelProp(382,10459
long HCBClauseSetDeleteBadClauses(446,11832

HEURISTICS/che_hcbadmin.c,270
static void parse_single_wfcb_item(56,1581
HCBAdmin_p HCBAdminAlloc(113,3005
void HCBAdminFree(136,3498
long HCBAdminAddHCB(173,4224
HCB_p HCBAdminFindHCB(204,5004
HCB_p HeuristicParse(239,5652
long HeuristicDefParse(270,6361
long HeuristicDefListParse(309,7273

HEURISTICS/che_heuristics.c,498
HeuristicAssocCell HeuristicsTable[HeuristicsTable33,790
#define CHE_HEURISTICS_INTERNAL56,1737
#define CHE_HEURISTICS_AUTO71,2111
HCB_p HCBAutoModeCreate(72,2139
#undef CHE_HEURISTICS_AUTO122,3820
#define CHE_HEURISTICS_AUTO_CASC138,4223
HCB_p HCBCASCAutoModeCreate(139,4256
#undef CHE_HEURISTICS_AUTO_CASC189,5935
#define CHE_HEURISTICS_AUTO_DEV206,6353
HCB_p HCBDevAutoModeCreate(207,6385
#undef CHE_HEURISTICS_AUTO_DEV257,8087
HCB_p HCBCreate(273,8482
HCB_p GetHeuristic(311,9339

HEURISTICS/che_learning.c,271
static TSMParam_p tsm_param_init(53,1509
WFCB_p TSMWeightInit(119,3575
WFCB_p TSMWeightParse(158,4889
double TSMWeightCompute(258,7702
WFCB_p TSMRWeightInit(334,9972
WFCB_p TSMRWeightParse(379,11594
double TSMRWeightCompute(489,14763
void TSMWeightExit(570,17073

HEURISTICS/che_lifo.c,120
WFCB_p LIFOEvalInit(62,1709
WFCB_p LIFOEvalParse(84,2169
double LIFOEvalCompute(108,2707
void LIFOEvalExit(130,3134

HEURISTICS/che_litselection.c,6098
static LitSelNameFunAssocCell name_fun_assoc[name_fun_assoc34,813
static long literal_weight_counter=152,10144
#define lit_sel_diff_weight(163,10630
static Eqn_p find_maxlcomplex_literal(179,11069
static Eqn_p find_lcomplex_literal(254,12571
static Eqn_p find_smallest_neg_ground_lit(331,14085
static Eqn_p find_smallest_max_neg_ground_lit(368,14950
static Eqn_p find_ng_min11_infpos_no_xtype_lit(406,15855
static Eqn_p find_max_xtype_no_type_lit(447,16742
static void clause_select_pos(487,17526
int lit_eval_compare(518,18195
void generic_uniq_selection(557,19097
static PDArray_p pos_pred_dist_array_compute(625,20929
#define pred_dist_array_free(641,21289
LiteralSelectionFun GetLitSelFun(662,21974
char* GetLitSelName(692,22596
void LitSelAppendNames(724,23233
void SelectNoLiterals(751,23764
void SelectNoGeneration(769,24183
void SelectNegativeLiterals(788,24670
void PSelectNegativeLiterals(816,25274
void SelectFirstVariableLiteral(840,25796
void PSelectFirstVariableLiteral(864,26378
void SelectLargestNegativeLiteral(887,26896
void PSelectLargestNegativeLiteral(922,27776
void SelectSmallestNegativeLiteral(961,28669
void PSelectSmallestNegativeLiteral(995,29558
void SelectLargestOrientableLiteral(1034,30522
void PSelectLargestOrientableLiteral(1081,31721
void MSelectLargestOrientableLiteral(1131,33027
void SelectSmallestOrientableLiteral(1157,33667
void PSelectSmallestOrientableLiteral(1204,34957
void MSelectSmallestOrientableLiteral(1254,36274
void SelectDiffNegativeLiteral(1279,36854
void PSelectDiffNegativeLiteral(1314,37749
void SelectGroundNegativeLiteral(1353,38681
void PSelectGroundNegativeLiteral(1390,39609
void SelectOptimalLiteral(1440,40803
void PSelectOptimalLiteral(1483,41848
void SelectMinOptimalLiteral(1525,42811
void PSelectMinOptimalLiteral(1568,43791
void SelectMinOptimalNoTypePred(1611,44812
void PSelectMinOptimalNoTypePred(1658,46017
void SelectMinOptimalNoXTypePred(1705,47198
void PSelectMinOptimalNoXTypePred(1752,48415
void SelectMinOptimalNoRXTypePred(1799,49604
void PSelectMinOptimalNoRXTypePred(1846,50832
#define VAR_FACTOR 1892,51979
void SelectCondOptimalLiteral(1894,52001
void PSelectCondOptimalLiteral(1943,53121
void SelectAllCondOptimalLiteral(1993,54313
void PSelectAllCondOptimalLiteral(2042,55438
void SelectDepth2OptimalLiteral(2092,56583
void PSelectDepth2OptimalLiteral(2129,57325
void SelectPDepth2OptimalLiteral(2167,58123
void PSelectPDepth2OptimalLiteral(2204,58877
void SelectNDepth2OptimalLiteral(2242,59702
void PSelectNDepth2OptimalLiteral(2279,60453
void SelectNonRROptimalLiteral(2317,61278
void PSelectNonRROptimalLiteral(2339,61848
void SelectNonStrongRROptimalLiteral(2361,62412
void PSelectNonStrongRROptimalLiteral(2383,63015
void SelectAntiRROptimalLiteral(2406,63581
void PSelectAntiRROptimalLiteral(2435,64300
void SelectNonAntiRROptimalLiteral(2457,64862
void PSelectNonAntiRROptimalLiteral(2479,65449
void SelectStrongRRNonRROptimalLiteral(2501,66042
void PSelectStrongRRNonRROptimalLiteral(2524,66709
void SelectUnlessUniqMaxOptimalLiteral(2551,67385
void PSelectUnlessUniqMaxOptimalLiteral(2575,68050
void SelectUnlessUniqMaxSmallestOrientable(2600,68733
void PSelectUnlessUniqMaxSmallestOrientable(2626,69458
void SelectUnlessPosMaxOptimalLiteral(2652,70170
void PSelectUnlessPosMaxOptimalLiteral(2678,70913
void SelectUnlessUniqPosMaxOptimalLiteral(2704,71582
void PSelectUnlessUniqPosMaxOptimalLiteral(2730,72304
void SelectUnlessUniqMaxPosOptimalLiteral(2756,72978
void PSelectUnlessUniqMaxPosOptimalLiteral(2799,73864
void SelectComplex(2844,74827
void PSelectComplex(2896,76052
void SelectComplexExceptRRHorn(2945,77165
void PSelectComplexExceptRRHorn(2967,77725
void SelectLComplex(2989,78252
void PSelectLComplex(3038,79326
void SelectMaxLComplex(3095,80627
void PSelectMaxLComplex(3135,81603
void SelectMaxLComplexNoTypePred(3185,82925
void PSelectMaxLComplexNoTypePred(3246,84503
void SelectMaxLComplexNoXTypePred(3309,86132
void PSelectMaxLComplexNoXTypePred(3370,87735
void SelectComplexPreferNEQ(3423,89008
void PSelectComplexPreferNEQ(3497,90816
void SelectComplexPreferEQ(3572,92651
void PSelectComplexPreferEQ(3646,94444
void SelectComplexExceptUniqMaxHorn(3721,96300
void PSelectComplexExceptUniqMaxHorn(3749,97020
void MSelectComplexExceptUniqMaxHorn(3777,97743
void SelectNewComplex(3808,98558
void PSelectNewComplex(3850,99663
void SelectNewComplexExceptUniqMaxHorn(3887,100554
void PSelectNewComplexExceptUniqMaxHorn(3914,101247
void SelectMinInfpos(3941,101912
void PSelectMinInfpos(3984,103020
void HSelectMinInfpos(4031,104211
void GSelectMinInfpos(4084,105560
void SelectMinInfposNoTypePred(4137,106902
void PSelectMinInfposNoTypePred(4182,108116
void SelectMin2Infpos(4228,109296
void PSelectMin2Infpos(4271,110409
void SelectComplexExceptUniqMaxPosHorn(4317,111568
void PSelectComplexExceptUniqMaxPosHorn(4346,112381
static void diversification_weight(4375,113114
void SelectDiversificationLiterals(4398,113704
static void diversification_prefer_into_weight(4418,114308
void SelectDiversificationPreferIntoLiterals(4444,115102
static void maxlcomplex_weight(4463,115631
void SelectMaxLComplexG(4502,116512
static void maxlcomplexavoidpred_weight(4539,117390
void SelectMaxLComplexAvoidPosPred(4588,118505
void SelectMaxLComplexAvoidPosUPred(4631,119532
static void complex_weight(4669,120466
void SelectComplexG(4704,121222
static void complex_weight_ahp(4726,121778
void SelectComplexAHP(4772,122802
void PSelectComplexAHP(4802,123534
static void new_complex_notp_ahp(4833,124341
void SelectNewComplexAHP(4886,125543
void PSelectNewComplexAHP(4915,126279
void SelectComplexAHPExceptRRHorn(4947,127103
void PSelectComplexAHPExceptRRHorn(4969,127675
void SelectNewComplexAHPExceptRRHorn(4991,128253
void PSelectNewComplexAHPExceptRRHorn(5013,128837
void SelectNewComplexAHPExceptUniqMaxHorn(5035,129432
void PSelectNewComplexAHPExceptUniqMaxHorn(5063,130137
static void new_complex_notp_ahp_ns(5095,130854
void SelectNewComplexAHPNS(5154,132216

HEURISTICS/che_normsubst.c,36
NormSubst_p NormSubstAlloc(59,1783

HEURISTICS/che_orientweight.c,278
WFCB_p ClauseOrientWeightInit(59,1789
WFCB_p ClauseOrientWeightParse(91,2780
double ClauseOrientWeightCompute(131,3902
WFCB_p OrientLMaxWeightInit(158,4590
WFCB_p OrientLMaxWeightParse(190,5575
double OrientLMaxWeightCompute(230,6709
void ClauseOrientWeightExit(270,7693

HEURISTICS/che_prio_funs.c,1534
char* PrioFunNames[PrioFunNames32,868
static ClausePrioFun prio_fun_array[prio_fun_array67,1526
ClausePrioFun GetPrioFun(132,3404
ClausePrioFun ParsePrioFun(160,3922
EvalPriority PrioFunPreferGroundGoals(191,4549
EvalPriority PrioFunPreferUnitGroundGoals(216,5079
EvalPriority PrioFunPreferGround(241,5623
EvalPriority PrioFunPreferNonGround(266,6121
EvalPriority PrioFunPreferProcessed(291,6634
EvalPriority PrioFunPreferNew(316,7158
EvalPriority PrioFunPreferGoals(341,7653
EvalPriority PrioFunPreferNonGoals(367,8139
EvalPriority PrioFunPreferMixed(392,8682
EvalPriority PrioFunPreferPositive(419,9274
EvalPriority PrioFunPreferNegative(449,10036
EvalPriority PrioFunPreferUnits(477,10531
EvalPriority PrioFunPreferNonEqUnits(501,11035
EvalPriority PrioFunPreferDemods(526,11575
EvalPriority PrioFunPreferNonUnits(553,12136
EvalPriority PrioFunConstPrio(578,12568
EvalPriority PrioFunByLiteralNumber(597,12952
EvalPriority PrioFunByDerivationDepth(616,13349
EvalPriority PrioFunByDerivationSize(635,13738
EvalPriority PrioFunByNegLitDist(655,14287
EvalPriority PrioFunGoalDifficulty(689,14954
EvalPriority PrioFunSimulateSOS(728,15724
EvalPriority PrioFunDeferSOS(750,16182
EvalPriority PrioFunPreferHorn(774,16668
EvalPriority PrioFunPreferNonHorn(799,17158
EvalPriority PrioFunPreferUnitAndNonEq(824,17676
EvalPriority PrioFunDeferNonUnitMaxPosEq(853,18282
EvalPriority PrioFunByCreationDate(882,18903
EvalPriority PrioFunPreferWatchlist(901,19321
EvalPriority PrioFunDeferWatchlist(926,19859

HEURISTICS/che_proofcontrol.c,267
#define CHE_PROOFCONTROL_INTERNAL32,890
char* DefaultWeightFunctions 34,925
char* DefaultHeuristics=50,1777
static bool select_inherited_literal(107,3819
ProofControl_p ProofControlAlloc(154,4934
void ProofControlFree(179,5612
void DoLiteralSelection(206,6225

HEURISTICS/che_refinedweight.c,252
WFCB_p ClauseRefinedWeightInit(59,1793
WFCB_p ClauseRefinedWeightParse(91,2758
double ClauseRefinedWeightCompute(130,3828
WFCB_p ClauseRefinedWeight2Parse(159,4551
double ClauseRefinedWeight2Compute(182,5067
void ClauseRefinedWeightExit(209,5752

HEURISTICS/che_simweight.c,185
double sim_eqn_weight(53,1552
double sim_weight(123,2976
WFCB_p SimWeightInit(153,3776
WFCB_p SimWeightParse(182,4530
double SimWeightCompute(217,5467
void SimWeightExit(237,5896

HEURISTICS/che_to_autoselect.c,952
#define TO_ORDERING_INTERNAL41,1220
#define CHE_HEURISTICS_AUTO56,1664
OCB_p generate_auto_ordering(58,1693
#undef CHE_HEURISTICS_AUTO105,3317
#define CHE_HEURISTICS_AUTO_CASC122,3799
OCB_p generate_autocasc_ordering(124,3833
#undef CHE_HEURISTICS_AUTO_CASC171,5455
#define CHE_HEURISTICS_AUTO_DEV188,5907
OCB_p generate_autodev_ordering(190,5940
#define CHE_HEURISTICS_AUTO_DEV237,7588
void OrderParmsInitialize(258,8223
void HeuristicParmsUpdate(281,8922
#define KBO_BONUS 303,9576
#define MAX_TERM_PENALTY 304,9596
#define MAX_LITERAL_PENALTY 305,9623
#define UNORIENT_LITERAL_PENALTY 306,9653
double OrderEvaluate(308,9689
bool OrderNextType(342,10638
bool OrderNextWeightGen(383,11445
bool OrderNextPrecGen(412,12123
#define MAX_CONST_WEIGHT 442,12892
bool OrderNextConstWeight(444,12920
bool OrderNextOrdering(483,14123
OCB_p OrderFindOptimal(536,15267
OCB_p TOSelectOrdering(597,17049
OCB_p  TOCreateOrdering(653,18433

HEURISTICS/che_to_precgen.c,972
char* TOPrecGenNames[TOPrecGenNames32,814
void print_prec_array(78,2421
static void compute_precedence_from_array(110,3165
static void generate_unary_first_precedence(160,4497
static void generate_unary_first_freq_precedence(199,5438
static void generate_arity_precedence(243,6495
static void generate_invarity_precedence(273,7303
static void generate_const_max_precedence(303,8156
static void generate_const_min_precedence(337,9090
static void generate_freq_precedence(372,10026
static void generate_invfreq_precedence(403,10928
static void generate_invconjfreq_precedence(435,11917
static void generate_invfreq_conjmax_precedence(469,12970
static void generate_invfreq_conjmin_precedence(501,13983
static void generate_invfreq_constmin_precedence(534,15012
static void generate_invfreq_hack_precedence(577,16262
static void generate_arrayopt_precedence(633,17676
TOPrecGenMethod TOTranslatePrecGenMethod(713,19625
void TOGeneratePrecedence(740,20188

HEURISTICS/che_to_weightgen.c,1324
char* TOWeightGenNames[TOWeightGenNames35,987
typedef struct prec_rank_cell71,2054
}PrecRankCell, *PrecRank_p;PrecRank_p75,2161
static void print_weight_array(104,2985
int prec_rank_cell_cmp(137,3622
static void generate_precrank_weights(176,4711
static void set_maximal_0(220,5778
static void set_maximal_unary_0(259,6550
static void generate_constant_weights(301,7356
static void generate_selmax_weights(325,7956
static void generate_arity_weights(344,8371
static void generate_precedence_weights(403,9879
static void generate_invprecedence_weights(438,10663
static void generate_precrank5_weights(472,11386
static void generate_precrank10_weights(490,11802
static void generate_precrank20_weights(510,12222
static void generate_freq_weights(531,12677
static void generate_invfreq_weights(557,13414
static void generate_freqrank_weights(590,14277
static void generate_invfreqrank_weights(628,15273
static void generate_invconjfreqrank_weights(668,16289
static void generate_freqranksq_weights(713,17519
static void generate_invfreqranksq_weights(752,18541
static void generate_inv_modfreqrank_weights(791,19552
static void generate_inv_modfreqrank_weights_max_0(831,20630
void set_user_weights(875,21684
TOWeightGenMethod TOTranslateWeightGenMethod(904,22475
void TOGenerateWeights(932,23107

HEURISTICS/che_varweights.c,1134
WFCB_p TPTPTypeWeightInit(60,1813
WFCB_p TPTPTypeWeightParse(96,2957
double TPTPTypeWeightCompute(142,4344
WFCB_p SigWeightInit(185,5404
WFCB_p SigWeightParse(218,6427
double SigWeightCompute(259,7633
WFCB_p ProofWeightInit(299,8853
WFCB_p ProofWeightParse(335,9987
double ProofWeightCompute(381,11379
WFCB_p DepthWeightInit(414,12268
WFCB_p DepthWeightParse(448,13314
double DepthWeightCompute(489,14536
WFCB_p WeightLessDepthInit(539,15878
WFCB_p WeightLessDepthParse(572,16909
double WeightLessDepthCompute(613,18146
WFCB_p NLWeightInit(664,19566
WFCB_p NLWeightParse(696,20563
double NLWeightCompute(739,21724
WFCB_p PNRefinedWeightInit(769,22452
WFCB_p PNRefinedWeightParse(803,23516
double PNRefinedWeightCompute(848,24821
WFCB_p SymTypeWeightInit(892,25997
WFCB_p SymTypeWeightParse(925,27045
double SymTypeWeightCompute(968,28294
WFCB_p ClauseWeightAgeInit(998,29057
WFCB_p ClauseWeightAgeParse(1026,29839
double ClauseWeightAgeCompute(1061,30775
WFCB_p StaggeredWeightInit(1092,31564
WFCB_p StaggeredWeightParse(1116,32225
double StaggeredWeightCompute(1144,32908
void VarWeightExit(1169,33439

HEURISTICS/che_wfcb.c,84
WFCB_p WFCBAlloc(59,1743
void WFCBFree(85,2309
void ClauseAddEvaluation(108,2805

HEURISTICS/che_wfcbadmin.c,411
char* WeightFunParseFunNames[WeightFunParseFunNames31,780
static WeightFunParseFun parse_fun_array[parse_fun_array65,1447
WFCBAdmin_p WFCBAdminAlloc(127,3216
void WFCBAdminFree(151,3755
long WFCBAdminAddWFCB(188,4478
WFCB_p WFCBAdminFindWFCB(219,5285
WeightFunParseFun GetWeightFunParseFun(255,6020
WFCB_p WeightFunParse(283,6536
char* WeightFunDefParse(314,7281
long WeightFunDefListParse(358,8356

INOUT/cio_basicparser.c,318
long ParseInt(63,1930
#define DECIMAL_DOT 105,2849
#define DECIMAL_DOT 107,2884
double ParseFloat(110,2927
StrNumType ParseNumString(177,4642
long DDArrayParse(244,6428
#define PLAIN_FILE_TOKENS 289,7425
char* ParseFilename(291,7492
char* ParsePlainFilename(321,8180
void ParseSkipParenthesizedExpr(351,8962

INOUT/cio_commandline.c,568
static char* print_start_of_str(59,1828
static bool shift_array_left(128,3148
static Opt_p find_long_opt(158,3669
static Opt_p find_short_opt(197,4418
static Opt_p process_long_option(226,5076
static Opt_p process_short_option(300,6792
static void append_option_desc(385,8967
CLState_p CLStateAlloc(424,9986
void CLStateFree(459,10772
int CLStateInsertArg(481,11321
Opt_p CLStateGetOpt(510,12127
double CLStateGetFloatArg(560,13286
long CLStateGetIntArg(604,14227
bool CLStateGetBoolArg(648,15202
void PrintOption(685,16073
void PrintOptions(767,17836

INOUT/cio_fileops.c,303
void FileOpenErrorPrint(59,1740
FILE* InputOpen(82,2433
void  InputClose(122,3140
long ConcatFiles(151,3849
long CopyFile(186,4540
void FileRemove(210,4963
void  FilePrint(234,5552
char* FileNameDirName(263,6240
char *FileFindBaseName(FileFindBaseName296,6824
char* FileNameBaseName(326,7472

INOUT/cio_filevars.c,254
FileVars_p FileVarsAlloc(59,1768
void FileVarsFree(81,2213
long FileVarsParse(117,3092
long FileVarsReadFromFile(174,4470
bool FileVarsGetBool(202,5175
bool FileVarsGetInt(251,6399
bool FileVarsGetStr(303,7681
bool FileVarsGetIdentifier(333,8426

INOUT/cio_initio.c,65
char* TPTP_dir 31,763
void InitIO(62,1781
void ExitIO(99,2438

INOUT/cio_output.c,186
long  OutputLevel 35,890
FILE* GlobalOut;36,913
int   GlobalOutFD 37,930
void OpenGlobalOut(68,1997
FILE* OutOpen(89,2465
void OutClose(130,3440
void PrintDashedStatuses(166,4322

INOUT/cio_scanner.c,872
static TokenRepCell token_print_rep[token_print_rep31,756
static void scan_white(99,3488
static void scan_ident(123,4034
static void scan_int(170,5088
static void scan_line_comment(205,5845
static void scan_C_comment(231,6466
static void scan_string(260,7208
static Token_p scan_token(310,8517
Token_p scan_token_follow_includes(514,13938
static Token_p scan_real_token(578,15605
bool str_n_element(612,16428
char* PosRep(656,17394
char* TokenPosRep(701,18503
char* DescribeToken(721,19030
void PrintToken(759,19806
Scanner_p CreateScanner(787,20664
void DestroyScanner(892,24134
bool TestTok(929,25198
bool TestId(950,25745
bool TestIdnum(973,26234
VOLATILE void AktTokenError(1011,26980
void CheckInpTok(1045,27822
void CheckInpTokNoSkip(1078,28629
void CheckInpId(1112,29495
void NextToken(1143,30348
Scanner_p ScannerParseInclude(1172,31091

INOUT/cio_signals.c,338
rlim_t                SystemTimeLimit 32,819
rlim_t                SoftTimeLimit 33,874
rlim_t                HardTimeLimit 34,929
VOLATILE sig_atomic_t TimeIsUp 35,984
VOLATILE sig_atomic_t TimeLimitIsSoft 36,1027
static VOLATILE sig_atomic_t fatal_error_in_progress 37,1070
void ESignalSetup(69,2118
void ESignalHandler(92,2668

INOUT/cio_streams.c,377
const StreamType StreamTypeFile 35,1052
const StreamType StreamTypeInternalString 36,1092
const StreamType StreamTypeUserString 39,1221
const StreamType StreamTypeOptionString 41,1296
static int read_char(67,2183
Stream_p CreateStream(120,3270
void DestroyStream(188,4773
int StreamNextChar(222,5657
Stream_p OpenStackedInput(255,6420
void CloseStackedInput(282,7014

INOUT/cio_tempfile.c,192
static StrTree_p temp_file_store 31,758
void TempFileCleanup(61,1773
void TempFileRegister(88,2468
char* TempFileName(112,3002
char* TempFileCreate(157,3903
void TempFileRemove(187,4416

LEARN/cle_annotations.c,337
Annotation_p AnnotationAlloc(59,1792
void AnnotationFree(84,2297
void AnnotationTreeFree(106,2723
Annotation_p AnnotationParse(132,3357
long AnnotationListParse(186,4638
void AnnotationPrint(235,5839
void AnnotationListPrint(263,6421
void AnnotationCombine(291,7086
long AnnotationMerge(334,8384
double AnnotationEval(382,9487

LEARN/cle_annoterms.c,619
void annotation_collect_max(52,1523
void annotation_normalize(82,2246
AnnoTerm_p AnnoTermAlloc(120,3203
void AnnoTermFree(143,3751
AnnoTerm_p AnnoTermParse(164,4210
void AnnoTermPrint(192,4836
void AnnoTermRecToFlatEnc(214,5421
AnnoSet_p AnnoSetAlloc(236,5912
void AnnoSetFree(265,6551
bool AnnoSetAddTerm(298,7356
AnnoSet_p AnnoSetParse(346,8469
void AnnoSetPrint(373,9042
bool AnnoSetComputePatternSubst(402,9748
long AnnoSetRemoveByIdent(437,10680
long AnnoSetRemoveExceptIdentList(492,12111
long AnnoSetFlatten(563,13870
void AnnoSetNormalizeFlatAnnos(624,15390
long AnnoSetRecToFlatEnc(669,16510

LEARN/cle_classification.c,99
double TSMTermClassify(60,1796
bool TSMClassifiedTermCheck(83,2409
long TSMClassifySet(104,2940

LEARN/cle_clauseenc.c,193
Term_p FlatEncodeClauseListRep(60,1838
Term_p   RecEncodeClauseListRep(105,2964
Term_p TermEncodeEqnList(156,4282
Term_p FlatRecodeRecClauseRep(190,5078
Term_p ParseClauseTermRep(255,6755

LEARN/cle_examplerep.c,454
void ExampleRepFree(59,1758
void ExampleRepPrint(79,2170
ExampleRep_p  ExampleRepParse(99,2675
ExampleSet_p ExampleSetAlloc(140,3594
void ExampleSetFree(164,4068
ExampleRep_p  ExampleSetFindName(193,4754
bool ExampleSetInsert(217,5290
ExampleRep_p ExampleSetExtract(253,6046
bool ExampleSetDeleteId(285,6774
bool ExampleSetDeleteName(313,7393
void ExampleSetPrint(341,7995
long ExampleSetParse(368,8672
long ExampleSetSelectByDist(420,10164

LEARN/cle_flatannoterms.c,437
FlatAnnoTerm_p FlatAnnoTermAlloc(60,1755
void FlatAnnoTermPrint(88,2429
FlatAnnoSet_p FlatAnnoSetAlloc(108,2965
void FlatAnnoSetFree(130,3385
void FlatAnnoSetPrint(160,4036
bool FlatAnnoSetAddTerm(186,4731
long FlatAnnoSetTranslate(228,5888
long FlatAnnoSetSize(276,7108
long FlatAnnoTermFlatten(310,7895
long FlatAnnoSetFlatten(351,8870
double FlatAnnoSetEvalAverage(380,9526
double FlatAnnoSetEvalWeightedAverage(419,10308

LEARN/cle_indexfunctions.c,421
char* IndexFunNames[IndexFunNames32,822
static long index_counter 48,1038
static Term_p any_term_top(71,1842
int GetIndexType(115,2924
char* GetIndexName(144,3509
IndexTerm_p IndexTermAlloc(194,4458
void IndexTermFree(219,4953
int IndexTermCompareFun(240,5362
TSMIndex_p TSMIndexAlloc(281,6231
void TSMIndexFree(338,7374
long TSMIndexFind(386,8325
long TSMIndexInsert(475,10469
void TSMIndexPrint(596,13417

LEARN/cle_kbdesc.c,140
KBDesc_p KBDescAlloc(60,1742
void KBDescFree(84,2298
void KBDescPrint(102,2649
KBDesc_p KBDescParse(128,3311
char* KBFileName(167,4288

LEARN/cle_kbinsert.c,103
AnnoTerm_p ParseExampleClause(60,1793
long KBAxiomsInsert(153,4272
void KBParseExampleFile(180,4977

LEARN/cle_numfeatures.c,378
static double relative_difference(53,1538
static double arity_distr_distance(83,2219
static int parse_sig_distrib(117,2974
Features_p FeaturesAlloc(158,3975
void FeaturesFree(180,4455
double PStackComputeAverage(202,4990
void ComputeClauseSetNumFeatures(255,6093
void NumFeaturesPrint(373,9500
Features_p NumFeaturesParse(415,10450
double NumFeatureDistance(454,11403

LEARN/cle_patterns.c,1265
static FunCode get_new_fun_symbol(53,1482
FunCode pat_symb_comp_val(80,2144
static CompareResult pat_symbol_compare(129,3541
static void generate_print_rep(164,4357
static CompareResult pat_term_size_compare(196,5361
static void initialize_lit_list(285,7256
static void mark_minimal_literals(333,8532
static int collect_choices(462,12428
static bool complete_state(515,13846
static long lit_list_rep_pattern(560,15183
PatternSubst_p PatternSubstAlloc(654,17823
PatternSubst_p PatternDefaultSubstAlloc(683,18741
void PatternSubstFree(711,19327
bool PatSubstExtend(736,19938
PatternSubst_p PatternSubstCopy(784,20960
FunCode PatSymbValue(811,21686
bool PatSymbolIsBound(843,22391
bool PatternSubstBacktrack(862,22859
bool PatternTermCompute(916,24136
CompareResult PatternTermCompare(949,24820
bool PatternTermPairCompute(1005,25976
CompareResult PatternTermPairCompare(1039,26746
bool PatternLitListCompute(1110,28129
CompareResult PatternLitListCompare(1146,29174
long PatternClauseCompute(1194,30479
void PatternTermPrint(1225,31199
void PatternEqnPrint(1283,32316
void PatternClausePrint(1327,33460
PStack_p DebugPatternClauseToStack(1361,34357
Term_p PatternTranslateSig(1391,35147
FunCode PatternSubstGetOriginalSymbol(1489,37198

LEARN/cle_termtops.c,303
static void term_del_prop_level(54,1582
static void term_set_prop_at_level(97,2564
static Term_p rek_term_top(140,3440
static Term_p alt_rek_term_top(185,4405
Term_p term_top_marked(239,5567
Term_p TermTop(298,6939
Term_p AltTermTop(320,7499
Term_p CSTermTop(352,8251
Term_p ESTermTop(388,9094

LEARN/cle_tsm.c,1025
char* TSMTypeNames[TSMTypeNames30,711
static double dist_combi_entropy(63,1608
static double distribution_entropy(118,2840
static double evaluate_index(163,3878
static double evaluate_index_desc(206,5048
static double evaluate_top_index(241,6016
static double compute_list_entropy(301,7375
static double tsm_rec_eval(351,8434
static double tsm_rec_eval_no_weight(400,9611
static TSM_p tsmbasealloc(458,10862
static void tsmcomplete(483,11411
double TSMRemainderEntropy(523,12615
double TSMFlatAnnoSetEntropy(558,13463
long TSMPartitionSet(612,14739
IndexType TSMFindOptimalIndex(666,16018
long TSMCreateSubtermSet(786,18462
TSMAdmin_p TSMAdminAlloc(821,19302
void TSMAdminFree(862,20355
void TSMAdminBuildTSM(909,21361
TSM_p TSMCreate(1003,24173
void TSMFree(1047,25217
TSA_p TSACreate(1083,25839
void TSAFree(1174,28003
double TSMEvalTerm(1207,28664
double TSMComputeClassificationLimit(1233,29279
double TSMComputeAverageEval(1292,30572
void TSMPrintFlat(1331,31425
void TSMPrintRek(1360,31983

LEARN/cle_tsmio.c,337
static double selection_weights[selection_weights30,719
static double get_default_eval(56,1634
static double rec_get_highest_weight(121,3439
static double level_get_highest_weight(158,4191
static double get_highest_weight(189,4801
double ExampleSetPrepare(241,6124
double ExampleSetFromKB(279,7364
TSMAdmin_p TSMFromKB(328,8644

ORDERINGS/cto_cmpcache.c,99
static bool prepare_key(54,1564
CompareResult CmpCacheFind(90,2428
bool CmpCacheInsert(136,3332

ORDERINGS/cto_kbo.c,363
static __inline__ int getweight(85,2609
static int gettermweight(112,3166
static CompareResult kbocomparevars(149,4021
static CompareResult kbogtrnew(198,5149
CompareResult KBOCompare(317,7940
CompareResult KBOVarCompare(521,12237
CompareResult KBOVarCompare(584,13442
bool KBOGreater(651,14803
bool KBOVarGreater(674,15389
bool KBOVarGreater(718,16254

ORDERINGS/cto_kbodata.c,82
KBOLin_p KBOLinAlloc(61,1852
void KBOLinFree(87,2368
void KBOLinReset(106,2684

ORDERINGS/cto_kbolin.c,299
static void inc_vb(66,2004
static void dec_vb(104,2823
static void local_vb_update(142,3643
static bool mfyvwbc(183,4375
static void mfyvwb(219,5081
static CompareResult kbo6cmplex(248,5778
static CompareResult kbo6cmp(285,6627
CompareResult KBO6Compare(405,9605
bool KBO6Greater(436,10397

ORDERINGS/cto_lpo.c,787
long LPORecursionDepthLimit 49,1736
static bool lpo_term_dominates_args(91,3049
static bool lpo_subterm_dominates_term(120,3644
static CompareResult lpo_lex_greater(155,4495
static CompareResult lpo_greater(206,5559
static bool lpo4_alpha(329,8659
static bool lpo4_majo(358,9387
static bool lpo4_lex_ma(385,10019
static bool lpo4_greater(423,11029
static bool lpo4_copy_alpha(497,13040
static bool lpo4_copy_majo(524,13676
static bool lpo4_copy_lex_ma(549,14247
static bool lpo4_copy_greater(581,15008
bool LPOGreater(627,16231
CompareResult LPOCompare(651,16963
bool LPO4Greater(710,18222
CompareResult LPO4Compare(735,18852
bool LPO4GreaterCopy(776,19802
CompareResult LPO4CompareCopy(829,20809
bool LPOGreaterCopy(896,22137
CompareResult LPOCompareCopy(948,23154

ORDERINGS/cto_lpo_debug.c,406
static CompareResult lpofungtr(88,2854
static CompareResult lpofuneq(140,4143
static CompareResult lpocheckarg(212,5737
static CompareResult lpogtr(243,6508
static CompareResult lpogtrcompvars(329,8617
static CompareResult lpogtrfuneq(377,9723
static CompareResult lpogtrcheckarg(434,10960
CompareResult D_LPOCompare(474,12132
bool D_LPOGreater(556,14498
CompareResult D_LPOCompareVars(583,15241

ORDERINGS/cto_ocb.c,380
char* TONames[TONames31,776
bool ocb_trans_compute(71,1822
static void alloc_precedence(121,2902
OCB_p OCBAlloc(156,3815
void OCBFree(229,5404
void OCBDebugPrint(285,6955
PStackPointer OCBPrecedenceAddTuple(365,8904
bool OCBPrecedenceBacktrack(431,10468
FunCode OCBFindMinConst(465,11452
FunCode OCBTermMaxFunCode(506,12458
CompareResult OCBFunCompareMatrix(549,13414

ORDERINGS/cto_orderings.c,263
bool TOGreater(61,1753
CompareResult TOCompare(139,3806
CompareResult TOCompareSymbolParse(218,5953
PStackPointer TOSymbolComparisonChainParse(258,6758
PStackPointer TOPrecedenceParse(320,8521
void TOSymbolWeightParse(354,9285
long TOWeightsParse(382,9943

PCL2/pcl_analysis.c,242
int pcl_example_cmp(57,1703
long PCLExprProofDistance(115,3203
long PCLStepProofDistance(166,4457
void PCLProtProofDistance(197,5215
void PCLExprUpdateGRefs(225,5811
void PCLProtUpdateGRefs(309,7925
long PCLProtSelectExamples(341,8823

PCL2/pcl_expressions.c,214
PCLExpr_p PCLExprAlloc(59,1722
void PCLExprFree(83,2194
void PCLMiniExprFree(132,3102
PCLExpr_p PCLExprParse(179,4032
void PCLExprPrint(396,8894
void PCLExprPrintTSTP(557,12785
bool PCLStepExtract(752,17561

PCL2/pcl_idents.c,119
PCLId_p PCLIdParse(60,1796
void PCLIdPrintFormatted(94,2500
void PCLIdPrintTSTP(124,3316
int PCLIdCompare(161,4144

PCL2/pcl_lemmas.c,560
LemmaParam_p LemmaParamAlloc(60,1807
InferenceWeight_p InferenceWeightsAlloc(90,2675
void PCLExprUpdateRefs(126,4097
void PCLStepUpdateRefs(218,6267
void PCLProtUpdateRefs(243,6885
int PCLStepLemmaCmpWrapper(271,7440
int PCLStepLemmaCmp(293,7986
long PCLExprProofSize(325,8637
long PCLStepProofSize(376,9769
void PCLProtComputeProofSize(411,10592
float PCLStepComputeLemmaWeight(441,11319
PCLStep_p PCLProtComputeLemmaWeights(498,12777
long PCLProtSeqFindLemmas(537,13919
long PCLProtRecFindLemmas(582,15080
long PCLProtFlatFindLemmas(620,16092

PCL2/pcl_miniclauses.c,316
void MiniClauseFree(60,1765
void MiniClauseAddTerms(84,2361
MiniClause_p ClauseToMiniClause(121,3339
Clause_p MiniClauseToClause(162,4455
MiniClause_p MinifyClause(191,5141
Clause_p UnMinifyClause(212,5599
void MiniClausePrint(233,6098
void MiniClausePCLPrint(256,6655
void MiniClauseTSTPCorePrint(278,7202

PCL2/pcl_miniprotocol.c,510
PCLMiniProt_p PCLMiniProtAlloc(59,1803
void PCLMiniProtFree(85,2358
bool PCLMiniProtInsertStep(122,3159
PCLMiniStep_p PCLMiniProtFindStep(152,3872
PCLMiniStep_p PCLMiniProtExtractStep(174,4354
bool PCLMiniProtDeleteStep(206,5112
long PCLMiniProtParse(237,5807
void PCLMiniProtPrint(281,6894
void PCLMiniExprCollectPreconds(312,7555
bool PCLMiniProtMarkProofClauses(360,8538
void PCLMiniProtSetClauseProp(430,9987
void PCLMiniProtDelClauseProp(457,10560
void PCLMiniProtPrintProofClauses(487,11155

PCL2/pcl_ministeps.c,176
void PCLMiniStepFree(59,1748
PCLMiniStep_p PCLMiniStepParse(92,2386
void PCLMiniStepPrint(155,3839
void PCLMiniStepPrintTSTP(191,4649
void PCLMiniStepPrintFormat(229,5593

PCL2/pcl_positions.c,119
PCL2Pos_p PCL2PosAlloc(60,1739
void PCL2PosFree(84,2232
PCL2Pos_p PCL2PosParse(109,2718
void PCL2PosPrint(159,3715

PCL2/pcl_proofcheck.c,613
static bool pcl_run_prover(55,1588
static bool pcl_verify_eprover(99,2481
static void eqn_print_otter(152,3775
static void clause_print_otter(211,4820
static void clause_set_print_otter(248,5602
static bool pcl_verify_otter(273,6186
static void sig_print_dfg(337,7831
static void eqn_print_dfg(385,8989
static void clause_print_dfg(423,9769
static void clause_set_print_dfg(488,11214
static bool pcl_verify_spass(513,11794
long PCLCollectPreconds(576,13570
long PCLNegSkolemizeClause(619,14631
ClauseSet_p PCLGenerateCheck(663,15777
PCLCheckType PCLStepCheck(694,16494
long PCLProtCheck(754,17747

PCL2/pcl_propanalysis.c,305
static int pcl_weight_compare(54,1575
static int pcl_sc_compare(99,2420
static int pcl_litno_compare(143,3216
static int pcl_depth_compare(185,3978
static void pcl_prot_global_count(228,4774
PCLStep_p PCLProtFindMaxStep(315,7493
void PCLProtPropAnalyse(358,8303
void PCLProtPropDataPrint(385,9067

PCL2/pcl_protocol.c,693
PCLProt_p PCLProtAlloc(59,1757
void PCLProtFree(87,2335
PCLStep_p PCLProtExtractStep(122,3098
bool PCLProtDeleteStep(151,3760
PCLStep_p PCLProtFindStep(180,4365
void PCLProtSerialize(210,4898
long PCLProtParse(244,5628
void PCLProtPrintExtra(290,6726
bool PCLStepHasFOFParent(320,7433
long PCLProtStripFOF(360,8436
void PCLProtResetTreeData(413,9734
void PCLExprCollectPreconds(441,10335
PCLStep_p PCLExprGetQuotedArg(482,11172
bool PCLProtMarkProofClauses(514,11953
void PCLProtSetProp(569,13159
void PCLProtDelProp(596,13752
long PCLProtCountProp(623,14364
long PCLProtCollectPropSteps(655,15032
void PCLProtPrintPropClauses(686,15771
void PCLProtPrintExamples(720,16544

PCL2/pcl_steps.c,447
void PCLStepFree(59,1709
PCLStepProperties PCLParseExternalType(94,2504
PCLStep_p PCLStepParse(139,3470
void PCLPrintExternalType(195,4831
void PCLStepPrintExtra(233,5576
char * PCLPropToTSTPType(296,7123
void PCLStepPrintTSTP(339,7977
void PCLStepPrintTPTP(388,9162
void PCLStepPrintLOP(421,10006
void PCLStepPrintFormat(448,10566
void PCLStepPrintExample(491,11747
int PCLStepIdCompare(518,12634
void PCLStepResetTreeData(539,13147

PROPOSITIONAL/cpr_dpll.c,158
long deactivate_clauses(54,1561
long shorten_clauses(74,1956
DPLLState_p DPLLStateAlloc(100,2582
void DPLLStateFree(144,3607
bool DPLLAssignVar(168,4235

PROPOSITIONAL/cpr_dpllformula.c,257
void dpll_form_add_atom_space(48,1319
DPLLFormula_p DPLLFormulaAlloc(96,2630
void DPLLFormulaFree(120,3126
void DPLLFormulaPrint(153,3794
void DPLLRegisterClauseLiteral(201,4903
void DPLLFormulaInsertClause(243,5987
void DPLLFormulaParseLOP(267,6561

PROPOSITIONAL/cpr_propclauses.c,208
int p_atom_compare(55,1617
void DPLLClauseFree(100,2574
DPLLClause_p DPLLClauseFromClause(120,3152
bool DPLLClauseNormalize(176,4689
void DPLLClausePrintLOP(220,5632
void DPLLClausePrintDimacs(266,6887

PROPOSITIONAL/cpr_propsig.c,203
PropSig_p PropSigAlloc(60,1832
void PropSigFree(84,2388
PLiteralCode PropSigGetAtomEnc(105,2877
PLiteralCode PropSigInsertAtom(131,3474
char* PropSigGetAtomName(166,4266
void PropSigPrint(188,4779

PROPOSITIONAL/cpr_varset.c,125
AtomSet_p AtomSetAlloc(59,1736
void AtomSetFree(83,2241
PLiteralCode AtomSetExtract(105,2693
void AtomSetInsert(131,3232

PROVER/checkproof.c,549
#define NAME 36,939
   OPT_NOOPT=40,984
   OPT_HELP,41,1000
   OPT_VERSION,42,1013
   OPT_VERBOSE,43,1029
   OPT_OUTPUT,44,1045
   OPT_SILENT,45,1060
   OPT_OUTPUTLEVEL,46,1075
   OPT_PROVERTYPE,47,1095
   OPT_EXECUTABLE,48,1114
   OPT_TIME_LIMIT49,1133
}OptionCodes;OptionCodes50,1151
OptCell opts[opts58,1391
char       *outname outname125,3358
long       time_limit 126,3389
char       *executable executable127,3418
ProverType prover 128,3449
int main(143,4012
CLState_p process_options(235,6103
void print_help(309,7659

PROVER/classify_problem.c,1535
#define NAME 36,990
   OPT_NOOPT=40,1038
   OPT_HELP,41,1054
   OPT_VERSION,42,1067
   OPT_VERBOSE,43,1083
   OPT_OUTPUT,44,1099
   OPT_PARSE_FEATURES,45,1114
   OPT_TPTP_PARSE,46,1137
   OPT_TPTP_PRINT,47,1156
   OPT_TPTP_FORMAT,48,1175
   OPT_TSTP_PARSE,49,1195
   OPT_TSTP_PRINT,50,1214
   OPT_TSTP_FORMAT,51,1233
   OPT_GEN_TPTP_HEADER,52,1253
   OPT_NO_PREPROCESSING,53,1277
   OPT_EQ_UNFOLD_LIMIT,54,1302
   OPT_EQ_UNFOLD_MAXCLAUSES,55,1326
   OPT_NO_EQ_UNFOLD,56,1355
   OPT_DEF_CNF,57,1376
   OPT_MASK,58,1392
   OPT_NGU_ABSOLUTE,59,1405
   OPT_NGU_FEW_LIMIT,60,1426
   OPT_NGU_MANY_LIMIT,61,1448
   OPT_NGU_FEW_COUNT,62,1471
   OPT_NGU_MANY_COUNT,63,1493
   OPT_GPC_ABSOLUTE,64,1516
   OPT_GPC_FEW_LIMIT,65,1537
   OPT_GPC_MANY_LIMIT,66,1559
   OPT_GPC_FEW_COUNT,67,1582
   OPT_GPC_MANY_COUNT,68,1604
   OPT_AXIOM_MANY_LIMIT,69,1627
   OPT_AXIOM_SOME_LIMIT,70,1652
   OPT_LIT_MANY_LIMIT,71,1677
   OPT_LIT_SOME_LIMIT,72,1700
   OPT_TERM_MEDIUM_LIMIT,73,1723
   OPT_TERM_LARGE_LIMIT,74,1749
   OPT_FAR_SUM_MEDIUM_LIMIT,75,1774
   OPT_FAR_SUM_LARGE_LIMIT,76,1803
   OPT_MAX_DEPTH_MEDIUM_LIMIT,77,1831
   OPT_MAX_DEPTH_DEEP_LIMIT,78,1862
}OptionCodes;OptionCodes79,1891
OptCell opts[opts87,2131
char     *outname outname308,9389
IOFormat parse_format 310,9450
bool     tptp_header 311,9489
long     eqdef_maxclauses 314,9594
int      eqdef_incrlimit 315,9648
int main(330,10318
CLState_p process_options(534,17250
char* parse_feature_line(688,21651
void print_help(711,22118

PROVER/direct_examples.c,441
#define NAME 34,910
#define VERSION 35,944
   OPT_NOOPT=39,985
   OPT_HELP,40,1001
   OPT_VERSION,41,1014
   OPT_VERBOSE,42,1030
   OPT_OUTPUT,43,1046
   OPT_NEG_NO,44,1061
   OPT_NEG_PROP 45,1076
}OptionCodes;OptionCodes46,1093
OptCell opts[opts54,1333
char   *outname outname95,2316
double neg_proportion 96,2340
long   neg_examples 97,2367
int main(111,2922
CLState_p process_options(195,5119
void print_help(240,6090

PROVER/edpll.c,556
#define NAME 33,863
   OPT_NOOPT=37,900
   OPT_HELP,38,916
   OPT_VERSION,39,929
   OPT_VERBOSE,40,945
   OPT_OUTPUT,41,961
   OPT_SILENT,42,976
   OPT_OUTPUTLEVEL,43,991
   OPT_TPTP_PARSE,44,1011
   OPT_DIMACS_PRINT,45,1030
   OPT_MEM_LIMIT,46,1051
   OPT_CPU_LIMIT,47,1069
   OPT_SOFTCPU_LIMIT,48,1087
}OptionCodes;OptionCodes49,1109
OptCell opts[opts57,1349
char   *outname outname138,3777
IOFormat parse_format 139,3801
bool   dimacs_format 140,3836
int main(153,4393
CLState_p process_options(222,5978
void print_help(352,9381

PROVER/eground.c,1143
#define NAME 39,1067
   OPT_NOOPT=43,1106
   OPT_HELP,44,1122
   OPT_VERSION,45,1135
   OPT_VERBOSE,46,1151
   OPT_OUTPUT,47,1167
   OPT_SILENT,48,1182
   OPT_OUTPUTLEVEL,49,1197
   OPT_PRINT_STATISTICS,50,1217
   OPT_RUSAGE_INFO,51,1242
   OPT_SUPRESS_RESULT,52,1262
   OPT_TPTP_PARSE,53,1285
   OPT_TPTP_PRINT,54,1304
   OPT_TPTP_FORMAT,55,1323
   OPT_TSTP_PARSE,56,1343
   OPT_TSTP_PRINT,57,1362
   OPT_TSTP_FORMAT,58,1381
   OPT_DIMACS_PRINT,59,1401
   OPT_SPLIT_TRIES,60,1422
   OPT_DISABLE_UNIT_SUBSUMPTION,61,1442
   OPT_DISABLE_UNIT_RESOLUTION,62,1475
   OPT_DISABLE_TAUTOLOGY_DETECTION,63,1507
   OPT_MEM_LIMIT,64,1543
   OPT_CPU_LIMIT,65,1561
   OPT_SOFTCPU_LIMIT,66,1579
   OPT_PART_COMPLETE,67,1601
   OPT_GIVE_UP,68,1623
   OPT_CONSTRAINTS,69,1639
   OPT_LOCAL_CONSTRAINTS70,1659
}OptionCodes;OptionCodes71,1684
OptCell opts[opts79,1924
char   *outname outname298,8568
IOFormat parse_format 299,8592
bool   dimacs_format 300,8627
int    split_tries 301,8657
bool   unit_sub 302,8681
long   give_up 311,8945
int main(326,9549
CLState_p process_options(542,14968
void print_help(736,20170

PROVER/ekb_create.c,384
#define NAME 34,884
   OPT_NOOPT=38,929
   OPT_HELP,39,945
   OPT_VERSION,40,958
   OPT_VERBOSE,41,974
   OPT_NEG_NO,42,990
   OPT_NEG_PROP,43,1005
   OPT_SELECT_EVAL44,1022
}OptionCodes;OptionCodes45,1041
OptCell opts[opts53,1281
double neg_proportion 89,2161
long   neg_examples 90,2190
int main(104,2747
CLState_p process_options(214,5578
void print_help(256,6494

PROVER/ekb_delete.c,355
#define NAME 31,829
#define VERSION 32,858
   OPT_NOOPT=36,899
   OPT_HELP,37,915
   OPT_VERSION,38,928
   OPT_VERBOSE,39,944
   OPT_KB,40,960
   OPT_NAME41,971
}OptionCodes;OptionCodes42,983
OptCell opts[opts50,1223
char* kb_name 78,1768
char* ex_name;79,1799
int main(93,2342
CLState_p process_options(209,5432
void print_help(246,6124

PROVER/ekb_ginsert.c,316
   OPT_NOOPT=39,980
   OPT_HELP,40,996
   OPT_VERSION,41,1009
   OPT_VERBOSE,42,1025
   OPT_KB,43,1041
   OPT_NAME44,1052
}OptionCodes;OptionCodes45,1064
OptCell opts[opts53,1304
char* ex_name 89,2155
char* kb_name 90,2177
int main(104,2736
CLState_p process_options(310,8458
void print_help(347,9156

PROVER/ekb_insert.c,340
#define NAME 36,1042
   OPT_NOOPT=40,1087
   OPT_HELP,41,1103
   OPT_VERSION,42,1116
   OPT_VERBOSE,43,1132
   OPT_KB,44,1148
   OPT_NAME45,1159
}OptionCodes;OptionCodes46,1171
OptCell opts[opts54,1411
char* ex_name 90,2262
char* kb_name 91,2284
int main(105,2843
CLState_p process_options(256,6734
void print_help(293,7426

PROVER/epclanalyse.c,410
#define NAME 37,954
   OPT_NOOPT=41,1000
   OPT_HELP,42,1016
   OPT_VERSION,43,1029
   OPT_VERBOSE,44,1045
   OPT_OUTPUT,45,1061
   OPT_SILENT46,1076
}OptionCodes;OptionCodes47,1090
OptCell opts[opts55,1330
char       *outname outname88,1945
long       time_limit 89,1976
char       *executable executable90,2005
int main(105,2565
CLState_p process_options(183,4362
void print_help(220,5058

PROVER/epclextract.c,620
#define NAME 38,1002
   OPT_NOOPT=42,1048
   OPT_HELP,43,1064
   OPT_VERSION,44,1077
   OPT_VERBOSE,45,1093
   OPT_FAST,46,1109
   OPT_TSTP_PRINT,47,1122
   OPT_COMPETITION,48,1141
   OPT_NO_EXTRACT,49,1161
   OPT_OUTPUT,50,1180
   OPT_SILENT,51,1195
   OPT_OUTPUTLEVEL52,1210
}OptionCodes;OptionCodes53,1229
OptCell opts[opts61,1469
char       *outname outname119,2898
long       time_limit 120,2929
char       *executable executable121,2958
bool       fast_extract 122,2989
OutputFormatType output_format 125,3084
int main(139,3657
CLState_p process_options(299,6898
void print_help(349,7883

PROVER/epcllemma.c,1868
#define NAME 36,943
   OPT_NOOPT=40,987
   OPT_HELP,41,1003
   OPT_VERSION,42,1016
   OPT_VERBOSE,43,1032
   OPT_OUTPUT,44,1048
   OPT_SILENT,45,1063
   OPT_OUTPUTLEVEL,46,1078
   OPT_TPTP_PRINT,47,1098
   OPT_TPTP_FORMAT,48,1117
   OPT_TSTP_PRINT,49,1137
   OPT_TSTP_FORMAT,50,1156
   OPT_LOP_PRINT,51,1176
   OPT_ITERATIVE_LEMMAS,52,1194
   OPT_RECURSIVE_LEMMAS,53,1219
   OPT_FLAT_LEMMAS,54,1244
   OPT_ABS_LEMMA_LIMIT,55,1264
   OPT_REL_LEMMA_LIMIT,56,1288
   OPT_ABS_LEMQUAL_LIMIT,57,1312
   OPT_REL_LEMQUAL_LIMIT,58,1338
   OPT_LEMMA_BASE_W,59,1364
   OPT_LEMMA_ACT_PM_W,60,1385
   OPT_LEMMA_O_GEN_W,61,1408
   OPT_LEMMA_ACT_SIMPL_W,62,1430
   OPT_LEMMA_PAS_SIMPL_W,63,1456
   OPT_NO_REFERENCE_WEIGHTS,64,1482
   OPT_LEMMA_HORN_BONUS,65,1511
   OPT_INITIAL_WEIGHT,66,1536
   OPT_QUOTE_WEIGHT,67,1559
   OPT_PARAMOD_WEIGHT,68,1580
   OPT_ERESOLUTION_WEIGHT,69,1603
   OPT_EFACTORING_WEIGHT,70,1630
   OPT_SIMPLIFYREFLECT_WEIGHT,71,1656
   OPT_ACRESOLUTION_WEIGHT,72,1687
   OPT_REWRITE_WEIGHT,73,1715
   OPT_UREWRITE_WEIGHT,74,1738
   OPT_CLAUSENORMALIZE_WEIGHT,75,1762
   OPT_SPLITCLAUSE_WEIGHT76,1793
}OptionCodes;OptionCodes77,1819
   LIterative,82,1851
   LRecursive,83,1866
   LFlat84,1881
}LemmaAlgorithm;LemmaAlgorithm85,1890
OptCell opts[opts92,2132
char       *outname outname336,10468
long       time_limit 337,10505
char       *executable executable338,10540
LemmaAlgorithm algo 339,10577
InferenceWeight_p iw 340,10620
LemmaParam_p      lp 341,10657
long       max_lemmas 342,10694
float      max_lemmas_rel 343,10728
bool       max_lemmas_rel_p 344,10766
float      min_quality 345,10803
float      min_quality_rel 346,10839
bool       min_quality_rel_p 347,10875
OutputFormatType outputformat 348,10913
int main(362,11485
CLState_p process_options(478,14289
void print_help(613,18122

PROVER/eprover.c,3951
#define NAME 42,1086
   OPT_NOOPT=46,1133
   OPT_HELP,47,1149
   OPT_VERSION,48,1162
   OPT_VERBOSE,49,1178
   OPT_OUTPUT,50,1194
   OPT_PRINT_STATISTICS,51,1209
   OPT_EXPENSIVE_DETAILS,52,1234
   OPT_PRINT_SATURATED,53,1263
   OPT_PRINT_SAT_INFO,54,1287
   OPT_FILTER_SATURATED,55,1310
   OPT_CNF_ONLY,56,1335
   OPT_PRINT_PID,57,1352
   OPT_REQUIRE_NONEMPTY,58,1370
   OPT_SILENT,59,1395
   OPT_OUTPUTLEVEL,60,1410
   OPT_PCL_COMPRESSED,61,1430
   OPT_PCL_COMPACT,62,1453
   OPT_MEM_LIMIT,63,1473
   OPT_CPU_LIMIT,64,1491
   OPT_SOFTCPU_LIMIT,65,1509
   OPT_RUSAGE_INFO,66,1531
   OPT_STEP_LIMIT,67,1551
   OPT_PROC_LIMIT,68,1570
   OPT_UNPROC_LIMIT,69,1589
   OPT_TOTAL_LIMIT,70,1610
   OPT_NO_INFIX,71,1630
   OPT_FULL_EQ_REP,72,1647
   OPT_TPTP_PARSE,73,1667
   OPT_TPTP_PRINT,74,1686
   OPT_TPTP_FORMAT,75,1705
   OPT_TSTP_PARSE,76,1725
   OPT_TSTP_PRINT,77,1744
   OPT_TSTP_FORMAT,78,1763
   OPT_NO_PREPROCESSING,79,1783
   OPT_EQ_UNFOLD_LIMIT,80,1808
   OPT_EQ_UNFOLD_MAXCLAUSES,81,1832
   OPT_NO_EQ_UNFOLD,82,1861
   OPT_REL_PRUNE_LEVEL,83,1882
   OPT_PRESAT_SIMPLIY,84,1906
   OPT_AC_HANDLING,85,1929
   OPT_AC_ON_PROC,86,1949
   OPT_LITERAL_SELECT,87,1968
   OPT_NO_GENERATION,88,1991
   OPT_SELECT_ON_PROC_ONLY,89,2013
   OPT_INHERIT_PM_LIT,90,2041
   OPT_INHERIT_GOAL_PM_LIT,91,2064
   OPT_INHERIT_CONJ_PM_LIT,92,2092
   OPT_POS_LITSEL_MIN,93,2120
   OPT_POS_LITSEL_MAX,94,2143
   OPT_NEG_LITSEL_MIN,95,2166
   OPT_NEG_LITSEL_MAX,96,2189
   OPT_ALL_LITSEL_MIN,97,2212
   OPT_ALL_LITSEL_MAX,98,2235
   OPT_WEIGHT_LITSEL_MIN,99,2258
   OPT_PREFER_INITIAL_CLAUSES,100,2284
   OPT_FILTER_LIMIT,101,2315
   OPT_FILTER_COPIES_LIMIT,102,2336
   OPT_REWEIGHT_LIMIT,103,2364
   OPT_DELETE_BAD_LIMIT,104,2387
   OPT_ASSUME_COMPLETENESS,105,2412
   OPT_DISABLE_EQ_FACTORING,106,2440
   OPT_DISABLE_NEGUNIT_PM,107,2469
   OPT_NO_GC_FORWARD_SIMPL,108,2496
   OPT_USE_SIM_PARAMOD,109,2524
   OPT_USE_ORIENTED_SIM_PARAMOD,110,2548
   OPT_SPLIT_TYPES,111,2581
   OPT_SPLIT_HOW,112,2601
   OPT_SPLIT_AGGRESSIVE,113,2619
   OPT_SPLIT_REUSE_DEFS,114,2644
   OPT_ORDERING,115,2669
   OPT_TO_WEIGHTGEN,116,2686
   OPT_TO_WEIGHTS,117,2707
   OPT_TO_PRECGEN,118,2726
   OPT_TO_CONSTWEIGHT,119,2745
   OPT_TO_PRECEDENCE,120,2768
   OPT_TO_LPO_RECLIMIT,121,2790
   OPT_TO_RESTRICT_LIT_CMPS,122,2814
   OPT_TPTP_SOS,123,2843
   OPT_ER_DESTRUCTIVE,124,2860
   OPT_ER_STRONG_DESTRUCTIVE,125,2883
   OPT_ER_AGGRESSIVE,126,2913
   OPT_FORWARD_CSR,127,2935
   OPT_FORWARD_CSR_AGGRESSIVE,128,2955
   OPT_BACKWARD_CSR,129,2986
   OPT_RULES_GENERAL,130,3007
   OPT_FORWARD_DEMOD,131,3029
   OPT_STRONG_RHS_INSTANCE,132,3051
   OPT_STRONGSUBSUMPTION,133,3079
   OPT_WATCHLIST,134,3105
   OPT_WATCHLIST_NO_SIMPLIFY,135,3123
   OPT_NO_INDEXED_SUBSUMPTION,136,3153
   OPT_FVINDEX_STYLE,137,3184
   OPT_FVINDEX_FEATURETYPES,138,3206
   OPT_FVINDEX_MAXFEATURES,139,3235
   OPT_FVINDEX_SLACK,140,3263
   OPT_UNPROC_UNIT_SIMPL,141,3285
   OPT_DEFINE_WFUN,142,3311
   OPT_DEFINE_HEURISTIC,143,3331
   OPT_HEURISTIC,144,3356
   OPT_FREE_NUMBERS,145,3374
   OPT_FREE_OBJECTS,146,3395
   OPT_OLD_STYLE_CNF,147,3416
   OPT_DEF_CNF,148,3438
   OPT_DUMMY149,3454
}OptionCodes;OptionCodes150,3467
OptCell opts[opts159,3708
char              *outname outname1015,37431
char              *watchlist_filename watchlist_filename1016,37466
HeuristicParms_p  h_parms;1017,37512
FVIndexParms_p    fvi_parms;1018,37539
bool              print_sat 1019,37568
IOFormat          parse_format 1033,38136
long              step_limit 1034,38180
int               eqdef_incrlimit 1040,38457
char              *outdesc outdesc1041,38518
PStack_p          wfcb_definitions,1043,38633
PStack_p          wfcb_definitions, hcb_definitions;1043,38633
FunctionProperties free_symb_prop 1045,38687
int main(1058,39265
CLState_p process_options(1372,48597
void print_help(1997,66601

PROVER/termprops.c,256
   OPT_NOOPT=34,878
   OPT_HELP,35,894
   OPT_VERBOSE,36,907
   OPT_OUTPUT37,923
}OptionCodes;OptionCodes38,937
OptCell opts[opts46,1177
char *outname outname66,1587
int main(79,2136
CLState_p process_options(178,4459
void print_help(207,4988

PROVER/tsm_classify.c,534
#define NAME 35,977
#define VERSION 36,1008
   OPT_NOOPT=40,1049
   OPT_HELP,41,1065
   OPT_VERSION,42,1078
   OPT_VERBOSE,43,1094
   OPT_OUTPUTLEVEL,44,1112
   OPT_OUTPUT,45,1132
   OPT_INDEXFUN,46,1147
   OPT_INDEXDEPTH,47,1164
   OPT_TSMTYPE48,1183
}OptionCodes;OptionCodes49,1198
OptCell opts[opts57,1438
char      *outname outname108,2559
int       index_type 109,2586
long      index_depth 110,2621
int       tsm_type 111,2648
int main(125,3215
CLState_p process_options(241,6451
void print_help(316,8297

SIMPLE_APPS/ex_commandline.c,260
#define VERSION 26,590
   OPT_NOOPT=34,880
   OPT_HELP,35,896
   OPT_INT_EXAMPLE,36,909
   OPT_FLOAT_EXAMPLE37,929
}OptionCodes;OptionCodes38,950
OptCell opts[opts46,1190
int main(77,2152
CLState_p process_options(120,3191
void print_help(151,3805

SIMPLE_APPS/term2dag.c,309
#define VERSION 29,671
   OPT_NOOPT=37,963
   OPT_HELP,38,979
   OPT_VERBOSE,39,992
   OPT_OUTPUT,40,1008
   OPT_PRINT_REFS41,1023
}OptionCodes;OptionCodes42,1041
OptCell opts[opts50,1281
char *outname outname74,1833
int main(87,2382
CLState_p process_options(149,3817
void print_help(181,4419

TERMS/cte_acterms.c,251
static int acterm_uniq_compare(55,1608
static void ac_collect_args(82,2221
ACTerm_p ACTermAlloc(123,3155
void ACTermFree(152,3656
int ACTermCompare(186,4255
ACTerm_p ACTermNormalize(238,5126
void ACTermPrint(303,6467
bool TermACEqual(346,7339

TERMS/cte_fp_index.c,180
#define VAR_INDEX(41,1236
FPIndex_p FPIndexAlloc(61,1818
void FPIndexFree(87,2358
FPIndex_p FPIndexFind(135,3439
FPIndex_p FPIndexInsert(183,4456
void FPIndexDelete(241,5977

TERMS/cte_functypes.c,211
#define ATOMIC_FUNC_SYM_TOK 33,911
TokenType FuncSymbToken 36,1037
TokenType FuncSymbStartToken 38,1147
void normalize_int_rep(65,2158
void normalize_float_rep(116,3221
FuncSymbType FuncSymbParse(169,4381

TERMS/cte_idx_fp.c,89
IndexFP_p IndexFP4Create(60,1840
void IndexFPFree(119,2925
void IndexFPPrint(137,3282

TERMS/cte_match_mgu_1-1.c,134
static bool check_unify_job(57,1684
static bool occur_check(96,2419
bool SubstComputeMatch(160,4254
bool SubstComputeMgu(264,6790

TERMS/cte_replace.c,133
void TermAddRWLink(62,1845
Term_p TermFollowRWChain(98,2611
bool TermComputeRWSequence(128,3351
Term_p TBTermPosReplace(183,4918

TERMS/cte_signature.c,1194
bool      SigSupportLists 31,780
static void sig_print_operator(56,1544
static void sig_compute_alpha_ranks(83,2271
Sig_p SigAlloc(117,3138
void SigInsertFOFCodes(190,5328
void SigFree(229,6655
FunCode SigFindFCode(260,7326
void SigSetPredicate(287,7829
bool SigIsPredicate(314,8414
void SigSetFunction(335,8893
bool SigIsFunction(362,9475
void SigSetSpecial(384,9952
bool SigIsSpecial(413,10509
int SigGetAlphaRank(435,11008
void SigSetAllSpecial(462,11569
FunCode SigInsertId(486,12157
FunCode SigInsertFOFOp(545,13736
void SigPrint(566,14255
void SigPrintSpecial(593,14865
void SigPrintACStatus(620,15434
FunCode SigParseKnownOperator(659,16316
FunCode SigParseSymbolDeclaration(706,17496
FunCode SigParse(758,18922
int SigFindMaxUsedArity(785,19559
int SigFindMaxPredicateArity(811,20080
int SigFindMinPredicateArity(842,20748
int SigFindMaxFunctionArity(873,21415
int SigFindMinFunctionArity(903,22048
int SigCountAritySymbols(933,22726
int SigCountSymbols(967,23442
int SigAddSymbolArities(1001,24287
FunCode SigGetOrNCode(1033,25010
FunCode SigGetOtherEqnCode(1074,25890
FunCode SigGetNewSkolemCode(1099,26485
FunCode SigGetNewPredicateCode(1129,27283

TERMS/cte_simplesorts.c,244
void default_sort_table_init(52,1571
SortTable_p SortTableAlloc(85,2532
void SortTableFree(107,2984
SortType SortTableInsert(129,3491
SortTable_p DefaultSortTableAlloc(159,4292
char* SortTableGetRep(179,4740
void SortTablePrint(196,5144

TERMS/cte_subst.c,367
PStackPointer SubstAddBinding(62,1886
bool SubstBacktrackSingle(95,2721
int SubstBacktrackToPos(124,3267
int SubstBacktrack(148,3756
FunCode SubstNormTerm(183,4818
bool SubstBindingPrint(232,5919
long SubstPrint(264,6826
bool SubstIsRenaming(303,7761
void SubstBacktrackSkolem(361,9050
void SubstSkolemizeTerm(388,9662
void SubstCompleteInstance(426,10422

TERMS/cte_termbanks.c,1069
bool TBPrintInternalInfo 48,1663
bool TBPrintDetails 50,1778
static void tb_print_dag(78,2771
static Term_p tb_termtop_insert(138,4122
static Term_p tb_parse_cons_list(193,5580
static Term_p tb_subterm_parse(262,7460
static int tb_term_parse_arglist(298,8352
TB_p TBAlloc(366,9996
void TBFree(412,11129
long TBTermNodes(439,11722
Term_p DefaultSharedTermCellAlloc(459,12289
Term_p TBInsert(486,12920
Term_p TBInsertNoProps(525,13830
Term_p  TBInsertRepl(567,14850
Term_p TBInsertInstantiated(616,16230
Term_p TBInsertOpt(668,17444
Term_p  TBInsertDisjoint(714,18514
Term_p TBTermTopInsert(763,19600
Term_p TBAllocNewSkolem(782,20056
Term_p TBFind(806,20581
void TBPrintBankInOrder(828,21091
void TBPrintTermCompact(867,22197
void TBPrintTerm(916,23299
void TBPrintBankTerms(942,23852
Term_p TBTermParseReal(987,25018
void TBRefSetProp(1142,29503
void TBRefDelProp(1176,30288
long TBTermDelPropCount(1206,31017
void TBGCMarkTerm(1243,31785
long TBGCSweep(1286,32744
Term_p TBCreateMinTerm(1331,33879
long TBTermCollectSubterms(1358,34636

TERMS/cte_termcellstore.c,449
static void collect_unmarked_termcells(56,1622
void TermCellStoreInit(95,2589
void TermCellStoreExit(119,3089
Term_p  TermCellStoreFind(143,3552
Term_p  TermCellStoreInsert(162,3987
Term_p  TermCellStoreExtract(187,4548
bool TermCellStoreDelete(213,5128
void TermCellStoreSetProp(241,5718
void TermCellStoreDelProp(263,6217
long TermCellStoreCountNodes(286,6715
long TermCellStoreGCSweep(315,7493
void TermCellStorePrintDistrib(350,8344

TERMS/cte_termcpos.c,105
Term_p term_cpos_get_subterm(42,1212
Term_p TermCPosGetSubterm(80,1976
void TermPrintAllCPos(102,2546

TERMS/cte_termfunc.c,1391
bool      TermPrintLists 32,829
static void print_cons_list(57,1670
static Term_p parse_cons_list(92,2558
static Term_p term_check_consistency_rek(147,4092
void VarPrint(189,5051
void TermPrint(217,5523
void TermPrintArgList(279,6820
FuncSymbType TermParseOperator(323,8089
FunCode TermSigInsert(354,8764
Term_p TermParse(392,9687
int TermParseArgList(489,12853
Term_p TermCopy(547,14289
Term_p TermCopyKeepVars(583,15258
Term_p TermEquivCellAlloc(621,16141
bool TermStructEqual(651,16720
bool TermStructEqualNoDeref(693,17468
bool TermStructEqualNoDerefHardVars(729,18180
bool TermStructEqualDeref(770,19003
bool TermStructEqualDerefHardVars(811,19914
int TermStructWeightCompare(855,20903
int TermLexCompare(918,22083
bool TermIsSubterm(954,22755
bool TermIsSubtermDeref(989,23482
long TermWeight(1023,24285
long TermFsumWeight(1071,25148
long TermNonLinearWeight(1124,26259
long TermSymTypeWeight(1183,27375
long TermDepth(1240,28343
bool TermIsDefTerm(1266,28878
bool TermHasFCode(1312,29758
bool TermHasVariables(1346,30370
FunCode TermFindMaxVarCode(1386,31177
FunCode VarBankCheckBindings(1422,31945
void TermAddSymbolDistributionLimited(1473,33142
void TermAddSymbolFeaturesLimited(1519,34250
void TermComputeFunctionRanks(1558,35130
long TermCollectPropVariables(1590,35836
long TermLinearize(1637,36814
Term_p TermCheckConsistency(1665,37479

TERMS/cte_termpos.c,98
Term_p TermPosNextLIPosition(61,1816
void TermPosPrint(99,2495
void TermPosDebugPrint(129,3132

TERMS/cte_termtrees.c,312
static Term_p splay_term_tree(55,1664
void TermTreeFree(149,3751
int TermTopCompare(193,4666
Term_p TermTreeFind(231,5414
Term_p TermTreeInsert(259,6052
Term_p TermTreeExtract(306,6969
bool TermTreeDelete(347,7788
void TermTreeSetProp(373,8286
void TermTreeDelProp(405,8951
long TermTreeNodes(436,9593

TERMS/cte_termtypes.c,436
Term_p TermDefaultCellAlloc(63,1967
Term_p TermConstCellAlloc(95,2741
Term_p  TermTopAlloc(118,3242
void TermTopFree(145,3774
void TermFree(172,4350
Term_p TermAllocNewSkolem(211,5113
void TermSetProp(249,6005
bool TermSearchProp(286,6833
void TermDelProp(327,7773
void TermVarSetProp(364,8636
bool TermVarSearchProp(405,9515
void TermVarDelProp(447,10485
void TermStackSetProps(486,11339
void TermStackDelProps(511,11873

TERMS/cte_termvars.c,396
VarBank_p VarBankAlloc(60,1783
void VarBankFree(86,2341
void VarBankClearExtNames(117,3002
void VarBankClearExtNamesNoReset(137,3481
void VarBankVarsSetProp(155,3887
void VarBankVarsDelProp(183,4461
Term_p VarBankFCodeFind(212,5106
Term_p VarBankExtNameFind(232,5622
Term_p VarBankFCodeAssertAlloc(259,6232
Term_p  VarBankGetFreshVar(298,7430
Term_p VarBankExtNameAssertAlloc(323,8079

TERMS/cte_varhash.c,235
void VarHashEntryListFree(59,1770
void VarHashFree(85,2238
int VarHashFunction(108,2702
VarHashEntry_p VarHashListFind(128,3138
long VarHashAddValue(156,3746
void VarHashAddVarDistrib(188,4505
void PDArrayAddVarDistrib(232,5474

TEST/cl_test.c,362
   OPT_NOOPT=33,843
   OPT_HELP,34,859
   OPT_VERBOSE,35,872
   OPT_OUTPUT,36,888
   OPT_PRINT_REFS,37,903
   OPT_DISCOUNT_VARS,38,922
   OPT_NO_INFIX,39,944
   OPT_FULL_EQ_REP40,961
}OptionCodes;OptionCodes41,980
OptCell opts[opts49,1220
char *outname outname57,1304
int main(70,1853
CLState_p process_options(138,3466
void print_help(158,3790

TEST/patterntest.c,340
   OPT_NOOPT=37,944
   OPT_HELP,38,960
   OPT_VERBOSE,39,973
   OPT_OUTPUT,40,989
   OPT_DISCOUNT_VARS,41,1004
   OPT_NO_INFIX,42,1026
   OPT_FULL_EQ_REP43,1043
}OptionCodes;OptionCodes44,1062
OptCell opts[opts52,1302
char *outname outname84,2102
int main(97,2651
CLState_p process_options(185,4625
void print_help(220,5343

ANALYSIS/can_clausestats.h,200
#define CAN_CLAUSESTATS26,557
typedef struct clausestatscell37,863
}ClauseStatsCell, *ClauseStats_p;ClauseStats_p45,1037
#define ClauseStatsCellAlloc(53,1297
#define ClauseStatsCellFree(55,1391

ANALYSIS/can_clausestore.h,200
#define CAN_CLAUSESTORE26,593
typedef struct compact_clause_cell40,1046
}CompClauseCell, *CompClause_p;CompClause_p52,1540
#define CompClauseCellAlloc(61,1799
#define CompClauseCellFree(63,1890

ANALYSIS/can_infstate.h,28
#define CAN_INFSTATE25,562

ANALYSIS/can_treeanalyze.h,104
#define CAN_TREEANALYZE25,565
#define PROOF_DIST_INFINITY 41,1067
#define PROOF_DIST_DEFAULT 42,1121

BASICS/clb_avlgeneric.h,113
#define CLB_AVLGENERIC29,804
#define AVL_TRAVERSE_DECLARATION(56,1668
#define AVL_TRAVERSE_DEFINITION(91,2600

BASICS/clb_ddarrays.h,292
#define CLB_DDARRAYS25,581
typedef struct ddarraycell34,852
}DDArrayCell, *DDArray_p;DDArray_p39,931
#define DDArrayCellAlloc(46,1183
#define DDArrayCellFree(47,1256
#define   DDArrayAssign(56,1540
#define   DDArrayElement(59,1641
static __inline__ double* DDArrayElementRef(88,2641

BASICS/clb_defines.h,1010
#define CLB_DEFINES25,545
   false 49,1057
   true 50,1071
}bool;bool51,1083
#define CPPCAST(53,1091
#define CPPCAST(58,1151
typedef union int_or_p66,1293
}IntOrP;IntOrP70,1349
#define INTORP_MEM 73,1388
#define LONG_MEM 74,1409
#define INTORP_MEM 76,1434
#define LONG_MEM 77,1468
#define NULL 85,1565
#define NULL 87,1595
#define VOLATILE 96,1823
#define VOLATILE98,1855
typedef void (*GenericExitFun)GenericExitFun105,1997
typedef int (*ComparisonFunctionType)ComparisonFunctionType109,2100
typedef unsigned long ulong_c;111,2166
typedef ptrdiff_t ptr_int;120,2547
#undef MAX130,2878
#define MAX(132,2896
#undef MIN135,2943
#define MIN(137,2961
#undef ABS140,3008
#define ABS(142,3026
#undef XOR145,3075
#define XOR(147,3093
#undef EQUIV150,3155
#define EQUIV(152,3175
#define SWAP(154,3226
#define KILO 159,3332
#define MEGA 160,3350
#define WRITE_STR(164,3404
#define TSTPOUT(168,3484
#define TSTPOUTFD(169,3550
#define TSTPOUT(173,3663
#define TSTPOUTFD(174,3690

BASICS/clb_dstacks.h,297
#define CLB_DSTACKS25,551
typedef int DStackPointer;36,851
typedef struct dstackcell38,879
}DStackCell, *DStack_p;DStack_p43,1079
#define DSTACK_DEFAULT_SIZE 50,1328
#define DStackCellAlloc(55,1460
#define DStackCellFree(56,1530
#define  DStackEmpty(60,1667
#define  DStackGetSP(65,1808

BASICS/clb_dstrings.h,305
#define CLB_DSTRINGS35,1169
typedef struct dstrcell43,1439
}DStrCell, *DStr_p;DStr_p49,1525
#define DSTRGROW 51,1546
#define DStrCellAlloc(59,1814
#define DStrCellFree(60,1878
#define DStrAppendDStr(70,2236
#define DStrLastChar(73,2364
#define DStrGetRef(82,2705
#define DStrReleaseRef(83,2777

BASICS/clb_error.h,372
#define CLB_ERROR28,661
#define getrusage(38,809
   NO_ERROR,49,1111
   OUT_OF_MEMORY,50,1124
   SYNTAX_ERROR,51,1142
   USAGE_ERROR,52,1159
   FILE_ERROR,53,1175
   SYS_ERROR,54,1190
   CPU_LIMIT_ERROR,55,1204
   OTHER_ERROR,56,1224
   INPUT_SEMANTIC_ERROR57,1240
}ErrorCodes;ErrorCodes58,1264
#define MAX_ERRMSG_ADD 64,1501
#define MAX_ERRMSG_LEN 65,1530

BASICS/clb_fixdarrays.h,231
#define CLB_FIXDARRAYS27,591
typedef struct fixd_array_cell36,864
}FixedDArrayCell, *FixedDArray_p;FixedDArray_p40,927
#define FixedDArrayCellAlloc(47,1186
#define FixedDArrayCellFree(48,1274
#define FixedDArraySize(53,1444

BASICS/clb_floattrees.h,227
#define CLB_FLOATTREES26,641
typedef struct floattreecell51,1548
}FloatTreeCell, *FloatTree_p;FloatTree_p58,1730
#define FloatTreeCellAlloc(61,1762
#define FloatTreeCellFree(62,1841
#define FloatTreeTraverseExit(75,2448

BASICS/clb_gpdarrays.h,581
#define CLB_GPDARRAYS31,962
typedef struct pdarraycell40,1236
}GPDArrayCell, *GPDArray_p;GPDArray_p47,1353
#define GPDArrayCellAlloc(54,1607
#define GPDArrayCellFree(55,1683
#define GPDARRAYSIZE(56,1751
#define GPDARRAYCELL_MEM 59,1837
#define GPDARRAYCELL_MEM 61,1871
#define GPDArrayStorage(63,1925
#define   GPDArrayAssign(77,2438
#define   GPDArrayAssignP(79,2540
#define   GPDArrayAssignInt(81,2649
#define   GPDArrayElement(84,2761
#define   GPDArrayElementP(86,2840
#define   GPDArrayElementInt(88,2928
static __inline__ IntOrP* GPDArrayElementRef(116,3982

BASICS/clb_intmap.h,779
#define CLB_INTMAP27,669
   IMEmpty,40,1001
   IMSingle,41,1013
   IMArray,42,1026
   IMTree43,1038
}IntMapType;IntMapType44,1048
#define MAX_TREE_DENSITY 46,1062
#define MIN_TREE_DENSITY 47,1089
#define IM_ARRAY_SIZE 48,1116
typedef struct intmap_cell56,1502
}IntMapCell, *IntMap_p;IntMap_p73,2218
typedef struct intmap_iter_cell77,2245
}IntMapIterCell, *IntMapIter_p;IntMapIter_p88,2511
typedef long (*IntMapFreeFunc)IntMapFreeFunc91,2545
#define IntMapCellAlloc(97,2818
#define IntMapCellFree(98,2888
#define IntMapIterCellAlloc(109,3216
#define IntMapIterCellFree(110,3298
#define INTMAPCELL_MEM 113,3400
#define INTMAPCELL_MEM 115,3432
#define IntMapDStorage(118,3483
#define IntMapStorage(123,3731
static __inline__ void* IntMapIterNext(154,4674

BASICS/clb_memory.h,806
#define CLB_MEMORY27,785
typedef struct memcell42,1177
}MemCell, *Mem_p;Mem_p48,1274
#define MEM_ARR_SIZE 54,1516
#define MEM_FREE_PATTERN 55,1542
#define MEM_RSET_PATTERN 56,1578
#define MEMSIZE(72,2162
#define MEMSIZE(74,2259
#define SizeFree(80,2356
#define SizeMalloc(81,2407
#define ENSURE_NULL(82,2449
#define SizeFree(84,2494
#define SizeMalloc(85,2534
#define ENSURE_NULL(86,2576
#define SizeFree(92,2665
#define SizeMalloc(93,2730
#define ENSURE_NULL(94,2780
#define SizeFree(96,2825
#define SizeMalloc(97,2880
#define ENSURE_NULL(98,2930
#define FREE(108,3204
#define IntArrayFree(111,3290
#undef FREE126,3768
#define FREE(127,3780
#undef FREE131,3886
#define FREE(132,3898
static __inline__ void* SizeMallocReal(162,5058
static __inline__ void SizeFreeReal(213,6519

BASICS/clb_newmem.h,480
#define CLB_NEWMEM28,865
typedef struct memcell39,1200
}MemCell, *Mem_p;Mem_p45,1297
#define MEM_ARR_SIZE 51,1539
#define MEM_ALIGN 52,1569
#define MEM_CHUNKLIMIT 53,1597
#define MEM_MULTIPLIER 55,1720
#define MEM_FREE_PATTERN 56,1751
#define MEM_RSET_PATTERN 57,1787
#define SizeFree(66,1967
#define SizeMalloc(67,2032
#define SizeFree(69,2084
#define SizeMalloc(70,2139
#define FREE(78,2366
#define IntArrayFree(81,2441
#undef FREE95,2885
#define FREE(96,2897

BASICS/clb_numtrees.h,310
#define CLB_NUMTREES26,618
typedef struct numtreecell51,1517
}NumTreeCell, *NumTree_p;NumTree_p58,1687
#define NumTreeCellAlloc(61,1715
#define NumTreeCellFree(62,1788
#define NUMTREECELL_MEM 65,1891
#define NUMTREECELL_MEM 67,1924
#define   NumTreeMaxKey(81,2520
#define NumTreeTraverseExit(86,2690

BASICS/clb_objtrees.h,28
#define CLB_OBJTREES28,745

BASICS/clb_os_wrapper.h,129
#define CLB_OS_WRAPPERS24,546
   RLimFailed,40,926
   RLimReduced,41,941
   RLimSuccess42,957
}RLimResult;RLimResult43,972

BASICS/clb_partial_orderings.h,319
#define CLB_PARTIAL_ORDERINGS25,581
   to_unknown 38,933
   to_uncomparable 39,952
   to_equal 40,976
   to_greater 41,993
   to_lesser 42,1012
   to_notgteq,43,1030
   to_notleeq44,1083
}CompareResult;CompareResult45,1097
#define Q_TO_PART(58,1461
static __inline__ CompareResult POInverseRelation(83,2184

BASICS/clb_pdarrays.h,569
#define CLB_PDARRAYS32,935
typedef struct pdarraycell41,1206
}PDArrayCell, *PDArray_p;PDArray_p47,1305
#define GROW_EXPONENTIAL 49,1333
#define PDArrayCellAlloc(55,1584
#define PDArrayCellFree(56,1657
#define PDARRAYCELL_MEM 59,1753
#define PDARRAYCELL_MEM 61,1786
#define PDArrayStorage(63,1838
#define   PDArrayAssign(76,2356
#define   PDArrayAssignP(78,2456
#define   PDArrayAssignInt(80,2563
#define   PDArrayElement(83,2673
#define   PDArrayElementP(85,2750
#define   PDArrayElementInt(87,2836
static __inline__ IntOrP* PDArrayElementRef(120,4103

BASICS/clb_plist.h,185
#define CLB_PLIST25,537
typedef struct plistcell35,806
}PListCell, *PList_p;PList_p40,902
#define PListCellAlloc(46,1148
#define PListCellFree(47,1215
#define PListEmpty(51,1345

BASICS/clb_pqueue.h,987
#define CLB_PQUEUE25,519
#define PQUEUE_DEFAULT_SIZE 34,788
typedef struct pqueuecell38,978
}PQueueCell, *PQueue_p;PQueue_p44,1204
#define PQueueCellAlloc(51,1453
#define PQueueCellFree(52,1523
#define  PQueueEmpty(57,1733
#define  PQueueGetNextInt(67,2183
#define  PQueueGetNextP(68,2245
#define  PQueueGetLastInt(71,2366
#define  PQueueGetLastP(72,2428
#define  PQueueLookInt(75,2546
#define  PQueueLookP(76,2602
static __inline__ void pqueue_store(95,3186
static __inline__ void pqueue_bury(120,3806
static __inline__ PQueue_p PQueueAlloc(144,4341
static __inline__ void PQueueFree(169,4893
static __inline__ void PQueueReset(187,5300
static __inline__ void PQueueStoreInt(206,5673
static __inline__ void PQueueStoreP(226,6092
static __inline__ void PQueueBuryInt(246,6529
static __inline__ void PQueueBuryP(266,6958
static __inline__ IntOrP PQueueGetNext(287,7412
static __inline__ IntOrP PQueueGetLast(313,7985
static __inline__ IntOrP PQueueLook(339,8526

BASICS/clb_properties.h,249
#define CLB_PROPERTIES28,765
#define SetProp(44,1241
#define DelProp(45,1317
#define FlipProp(46,1394
#define AssignProp(47,1471
#define QueryProp(50,1603
#define IsAnyPropSet(53,1719
#define GiveProps(57,1896
#define PropsAreEquiv(61,1995

BASICS/clb_pstacks.h,1111
#define CLB_PSTACKS25,558
typedef int PStackPointer;36,897
typedef struct pstackcell38,925
}PStackCell, *PStack_p;PStack_p43,1125
#define PSTACK_DEFAULT_SIZE 46,1151
#define PStackCellAlloc(51,1287
#define PStackCellFree(52,1357
#define  PStackEmpty(57,1585
#define  PStackGetSP(62,1829
#define  PStackPopInt(65,1931
#define  PStackPopP(66,1985
#define  PStackTopInt(70,2155
#define  PStackTopP(71,2209
#define  PStackBelowTopInt(73,2322
#define  PStackBelowTopP(74,2386
#define  PStackElementInt(78,2529
#define  PStackElementP(79,2599
static __inline__ void push(104,3494
static __inline__ PStack_p PStackAlloc(136,4330
static __inline__ void  PStackFree(161,4870
static __inline__ PStack_p PStackCopy(185,5478
static __inline__ void PStackReset(210,5999
static __inline__ void PStackPushInt(227,6363
static __inline__ void PStackPushP(247,6774
static __inline__ IntOrP PStackPop(268,7190
static __inline__ void PStackDiscardTop(289,7644
static __inline__ IntOrP PStackTop(309,8045
static __inline__ IntOrP PStackBelowTop(330,8497
static __inline__ IntOrP PStackElement(350,8911

BASICS/clb_ptrees.h,386
#define CLB_PTREES32,907
typedef struct ptreecell52,1725
}PTreeCell, *PTree_p;PTree_p57,1831
#define PTreeCellAlloc(65,2079
#define PTreeCellFree(66,2149
#define PTREE_CELL_MEM 69,2241
#define PTREE_CELL_MEM 71,2273
#define SLOW_PTR_CMP79,2562
#define PCmp(81,2603
#define PCmp(83,2647
#define PTreeTraverseExit(110,3774
AVL_TRAVERSE_DECLARATION(PTreeTraverseExit109,3733

BASICS/clb_quadtrees.h,304
#define CLB_QUADTREES26,626
typedef struct quadkeycell36,955
}QuadKeyCell,QuadKey,*QuadKey_p;QuadKey_p42,1092
typedef struct quadtreecell46,1191
}QuadTreeCell, *QuadTree_p;QuadTree_p52,1337
#define QuadTreeCellAlloc(60,1591
#define QuadTreeCellFree(61,1670
#define QuadTreeTraverseExit(73,2266

BASICS/clb_simple_stuff.h,253
#define CLB_SIMPLE_STUFF25,546
}WeightedObjectCell, *WeightedObject_p;WeightedObject_p40,935
#define MAXINDENTSPACES 47,1200
#define WeightedObjectArrayAlloc(49,1228
#define WeightedObjectArrayFree(51,1329
#define WeightedObjectArraySort(56,1463

BASICS/clb_stringtrees.h,214
#define CLB_STRINGTREES27,662
typedef struct strtreecell53,1649
}StrTreeCell, *StrTree_p;StrTree_p60,1820
#define StrTreeCellAlloc(63,1848
#define StrTreeCellFree(64,1921
#define StrTreeTraverseExit(76,2453

BASICS/clb_sysdate.h,416
#define CLB_SYSDATE29,790
typedef long SysDate;41,1149
   DateEarlier 46,1192
   DateEqual 47,1213
   DateLater 48,1231
}DateRelation;DateRelation49,1248
#define      SysDateCreationTime(55,1487
#define      SysDateArmageddonTime(56,1525
#define      SysDateInc(57,1572
#define      SysDateMaximum(60,1756
#define      SysDateIsCreationDate(63,1892
static __inline__ DateRelation SysDateCompare(82,2396

BASICS/clb_verbose.h,240
#define CLB_VERBOSE26,591
#define VERBOSE(43,1106
#define VERBOUT(44,1146
#define VERBOUTARG(46,1246
#define VERBOSE2(50,1371
#define VERBOUT2(51,1415
#define VERBOUTARG2(54,1518
#define VERBOSE10(58,1645
#define VERBOUT10(59,1691

CLAUSES/ccl_axiomsorter.h,267
#define CCL_AXIOMSORTER26,620
   NoAxiom,37,913
   ClauseAxiom,38,925
   FormulaAxiom39,941
}AxiomType;AxiomType40,957
typedef struct w_axiom_cell45,1027
}WAxiomCell, *WAxiom_p;WAxiom_p54,1167
#define WAxiomCellAlloc(61,1416
#define WAxiomCellFree(62,1489

CLAUSES/ccl_clausecpos.h,58
#define CLAUSECPOS26,588
typedef long CompactPos;35,860

CLAUSES/ccl_clausefunc.h,30
#define CCL_CLAUSEFUNC26,642

CLAUSES/ccl_clauseinfo.h,324
#define CCL_CLAUSEINFO29,788
typedef struct clause_info_cell39,1087
}ClauseInfoCell, *ClauseInfo_p;ClauseInfo_p45,1241
#define ClauseInfoCellAlloc(53,1499
#define ClauseInfoCellFree(54,1584
#define      ClauseInfoAllocEmpty(57,1737
#define ClauseSourceInfoPrintTSTP(61,1988
#define ClauseSourceInfoPrintPCL(64,2094

CLAUSES/ccl_clausepos.h,516
#define CLAUSEPOS25,548
typedef struct clauseposcell37,844
}ClausePosCell, *ClausePos_p;ClausePos_p43,955
#define ClausePosCellAlloc(52,1212
#define ClausePosCellFree(53,1291
#define CLAUSEPOSCELL_MEM 56,1399
#define CLAUSEPOSCELL_MEM 58,1434
static __inline__ ClausePos_p ClausePosAlloc(93,2791
static __inline__ void ClausePosFree(117,3291
static __inline__ Term_p ClausePosGetSide(139,3746
static __inline__ Term_p ClausePosGetOtherSide(162,4277
static __inline__ Term_p ClausePosGetSubterm(186,4779

CLAUSES/ccl_clauses.h,5401
#define CCL_CLAUSES27,612
   CPIgnoreProps 40,979
   CPInitial 42,1100
   CPInputClause 43,1163
   CPInputClause       = 2*CPInitial,CPInitial43,1163
   CPIsProcessed 45,1295
   CPIsProcessed       = 2*CPInputClause,CPInputClause45,1295
   CPIsOriented 47,1426
   CPIsOriented        = 2*CPIsProcessed,CPIsProcessed47,1426
   CPIsDIndexed 50,1581
   CPIsDIndexed        = 2*CPIsOriented,CPIsOriented50,1581
   CPIsSIndexed 52,1715
   CPIsSIndexed        = 2*CPIsDIndexed,CPIsDIndexed52,1715
   CPIsTIndexed 54,1845
   CPIsTIndexed        = 2*CPIsSIndexed,CPIsSIndexed54,1845
   CPIsOIndexed 56,1970
   CPIsOIndexed        = 2*CPIsTIndexed,CPIsTIndexed56,1970
   CPDeleteClause 58,2098
   CPDeleteClause      = 2*CPIsOIndexed,CPIsOIndexed58,2098
   CPType1 60,2233
   CPType1             = 2*CPDeleteClause,CPDeleteClause60,2233
   CPType2 64,2508
   CPType2             = 2*CPType1,CPType164,2508
   CPType3 65,2552
   CPType3             = 2*CPType2,CPType265,2552
   CPTypeMask 66,2595
   CPTypeMask          = CPType1|CPType166,2595
   CPTypeMask          = CPType1|CPType2|CPType266,2595
   CPTypeMask          = CPType1|CPType2|CPType3,CPType366,2595
   CPTypeUnknown 67,2645
   CPTypeAxiom 68,2715
   CPTypeAxiom         = CPType1,68,2715
   CPTypeHypothesis 69,2779
   CPTypeHypothesis    = CPType2,69,2779
   CPTypeConjecture 70,2848
   CPTypeConjecture    = CPType1|CPType170,2848
   CPTypeConjecture    = CPType1|CPType2,CPType270,2848
   CPTypeLemma 71,2917
   CPTypeLemma         = CPType3,71,2917
   CPTypeNegConjecture 72,2981
   CPTypeNegConjecture = CPType1|CPType172,2981
   CPTypeNegConjecture = CPType1|CPType3,CPType372,2981
   CPTypeWatchClause 75,3173
   CPTypeWatchClause   = CPType1|CPType175,3173
   CPTypeWatchClause   = CPType1|CPType2|CPType275,3173
   CPTypeWatchClause   = CPType1|CPType2|CPType3,CPType375,3173
   CPIsIRVictim 78,3358
   CPIsIRVictim        = 2*CPType3,CPType378,3358
   CPOpFlag 81,3547
   CPOpFlag            = 2*CPIsIRVictim,CPIsIRVictim81,3547
   CPIsSelected 82,3612
   CPIsSelected        = 2*CPOpFlag,CPOpFlag82,3612
   CPIsFinal 84,3744
   CPIsFinal           = 2*CPIsSelected,CPIsSelected84,3744
   CPIsProofClause 88,4013
   CPIsProofClause  = 2*CPIsFinal,CPIsFinal88,4013
   CPIsSOS 90,4144
   CPIsSOS          = 2*CPIsProofClause,CPIsProofClause90,4144
   CPNoGeneration 91,4224
   CPNoGeneration   = 2*CPIsSOS,CPIsSOS91,4224
   CP_CSSCPA_1 94,4418
   CP_CSSCPA_1      = 2*CPNoGeneration,CPNoGeneration94,4418
   CP_CSSCPA_2 95,4488
   CP_CSSCPA_2      = 2*CP_CSSCPA_1,CP_CSSCPA_195,4488
   CP_CSSCPA_4 96,4526
   CP_CSSCPA_4      = 2*CP_CSSCPA_2,CP_CSSCPA_296,4526
   CP_CSSCPA_8 97,4564
   CP_CSSCPA_8      = 2*CP_CSSCPA_4,CP_CSSCPA_497,4564
   CP_CSSCPA_Mask 98,4601
   CP_CSSCPA_Mask   = CP_CSSCPA_1|CP_CSSCPA_198,4601
   CP_CSSCPA_Mask   = CP_CSSCPA_1|CP_CSSCPA_2|CP_CSSCPA_298,4601
   CP_CSSCPA_Mask   = CP_CSSCPA_1|CP_CSSCPA_2|CP_CSSCPA_4|CP_CSSCPA_498,4601
   CP_CSSCPA_Mask   = CP_CSSCPA_1|CP_CSSCPA_2|CP_CSSCPA_4|CP_CSSCPA_8,CP_CSSCPA_898,4601
   CP_CSSCPA_Unkown 99,4672
   CPIsProtected 100,4697
   CPIsProtected    = 2*CP_CSSCPA_8,CP_CSSCPA_8100,4697
   CPWatchOnly 105,5019
   CPWatchOnly      = 2*CPIsProtected,CPIsProtected105,5019
   CPSubsumesWatch 106,5058
   CPSubsumesWatch  = 2*CPWatchOnly,CPWatchOnly106,5058
   CPLimitedRW 107,5095
   CPLimitedRW      = 2*CPSubsumesWatch CPSubsumesWatch107,5095
}ClauseProperties;ClauseProperties111,5353
typedef struct clause_cell114,5374
}ClauseCell, *Clause_p;Clause_p148,7054
#define ClauseSetProp(159,7417
#define ClauseDelProp(160,7479
#define ClauseGiveProps(161,7541
#define ClauseQueryProp(164,7658
#define ClauseIsAnyPropSet(167,7773
#define ClauseQueryTPTPType(173,7947
#define TPTPTypesCombine(176,8023
#define ClauseSetCSSCPASource(180,8159
#define ClauseQueryCSSCPASource(183,8303
#define ClauseCellAlloc(186,8405
#define ClauseCellFree(187,8478
#define CLAUSECELL_MEM 190,8572
#define CLAUSECELL_MEM 192,8604
#define  ClauseGCMarkTerms(199,8763
#define  ClauseLiteralNumber(201,8838
#define  ClausePropLitNumber(204,8930
#define  ClauseIsEmpty(207,9034
#define  ClauseIsGoal(209,9099
#define  ClauseIsHorn(210,9155
#define  ClauseIsUnit(211,9213
#define  ClauseIsDemodulator(212,9276
#define  ClauseIsRWRule(215,9395
#define  ClauseIsGround(217,9505
#define  ClauseIsPositive(218,9571
#define  ClauseIsNegative(219,9633
#define  ClauseIsMixed(220,9695
#define  ClauseIsConjecture(222,9792
#define  ClauseFindNegPureVarLit(226,9955
#define  ClauseIsTrivial(228,10052
#define  ClauseSubsumeOrderSortLits(236,10302
#define  ClauseIsSubsumeOrdered(240,10550
#define  ClauseToStack(246,10818
#define  ClauseIsEquational(250,10933
#define  ClauseIsPureEquational(252,11019
#define  ClauseTermSetProp(255,11114
#define  ClauseTBTermDelPropCount(257,11213
#define  ClauseTermDelProp(259,11326
#define  ClauseIsSOS(262,11426
#define  ClauseCondMarkMaximalTerms(296,13047
#define  ClauseOrientLiterals(300,13198
#define  ClauseMarkMaximalLiterals(302,13293
#define  ClauseDeleteTermProperties(305,13403
#define  ClauseDepth(347,14990
#define  NormSubstClause(354,15203
#define  ClauseAddSymbolDistribution(360,15401
#define  ClauseComputeFunctionRanks(362,15531
#define  ClauseCollectVariables(364,15675

CLAUSES/ccl_clausesets.h,380
#define CCL_CLAUSESETS27,632
typedef struct clausesetcell43,1151
}ClauseSetCell, *ClauseSet_p;ClauseSet_p56,1698
#define CLAUSECELL_DYN_MEM 64,1954
#define ClauseSetCellAlloc(66,2016
#define ClauseSetCellFree(67,2098
#define     ClauseSetStorage(69,2169
#define     ClauseSetCardinality(85,3009
#define     ClauseSetEmpty(86,3064
#define     ClauseSetDocQuote(134,5393

CLAUSES/ccl_clausetrees.h,36
#define CCL_CLAUSESETFILTERS26,597

CLAUSES/ccl_context_sr.h,30
#define CCL_CONTEXT_SR30,715

CLAUSES/ccl_def_handling.h,185
#define CCL_DEF_HANDLING27,703
typedef struct def_store_cell36,983
}DefStoreCell, *DefStore_p;DefStore_p41,1225
#define DefStoreCellAlloc(50,1480
#define DefStoreCellFree(51,1559

CLAUSES/ccl_eqn.h,2737
#define CCL_EQN26,559
   EPNoProps 41,926
   EPIsPositive 42,994
   EPIsMaximal 43,1057
   EPIsStrictlyMaximal 44,1122
   EPIsEquLiteral 45,1184
   EPIsOriented 46,1239
   EPMaxIsUpToDate 47,1292
   EPHasEquiv 48,1363
   EPIsDominated 51,1495
   EPDominates 52,1569
   EPDominates         =   EPIsDominated,52,1569
   EPIsUsed 55,1709
   EPGONatural 57,1807
   EPIsSelected 61,1970
   EPIsPMIntoLit 62,2035
   EPLPatMinimal 63,2098
   EPRPatMinimal 64,2163
   EPIsSplitLit 65,2228
   EPFromClauseLit 67,2319
}EqnProperties;EqnProperties69,2442
typedef struct eqncell76,2628
}EqnCell, *Eqn_p, **EqnRef;EqnRef84,2915
   NoSide 89,2960
   LeftSide 90,2975
   MaxSide 91,2992
   RightSide 92,3008
   MinSide 93,3026
   BothSides 94,3042
}EqnSide;EqnSide95,3059
   PENormal 102,3123
   PEReverse 103,3141
}PatEqnDirection;PatEqnDirection104,3157
#define EQUAL_PREDICATE 109,3228
#define EQN_CELL_MEM 112,3290
#define EQN_CELL_MEM 114,3320
#define EqnCellAlloc(129,3819
#define EqnCellFree(130,3883
#define EqnGCMarkTerms(135,4044
#define EqnSetProp(138,4181
#define EqnDelProp(139,4235
#define EqnFlipProp(140,4289
#define EqnQueryProp(143,4392
#define EqnIsAnyPropSet(146,4495
#define EqnIsOriented(148,4559
#define EqnIsPositive(149,4618
#define EqnIsNegative(150,4677
#define EqnIsEquLit(151,4741
#define EqnIsMaximal(152,4802
#define EqnIsStrictlyMaximal(153,4860
#define EqnGetPredCode(156,4957
#define EqnIsSplitLit(157,5024
#define EqnHasEquiv(161,5154
#define EqnIsDominated(162,5210
#define EqnDominates(163,5272
#define EqnIsSelected(164,5330
#define EqnIsPropTrue(166,5390
#define EqnIsPropFalse(167,5469
#define EqnIsGround(169,5549
#define EqnIsPureVar(171,5644
#define EqnIsPartVar(173,5730
#define EqnIsPropositional(175,5816
#define EqnIsTypePred(177,5906
#define EqnIsXTypePred(179,5994
#define EqnIsRealXTypePred(181,6084
#define EqnTermSetProp(184,6176
#define EqnTBTermDelPropCount(187,6335
#define EqnTermDelProp(190,6479
#define EqnTBTermEncode(198,6829
#define EqnPrintOriginal(204,7138
#define EqnSkolemSubst(215,7574
#define EqnIsTrivial(221,7806
#define EqnWeightCompare(234,8130
#define LiteralEqual(246,8836
#define EqnEquiv(260,9359
#define LiteralEquiv(264,9495
#define EqnStandardWeight(283,10228
#define EqnSplitModStandardWeight(287,10350
#define EqnStandardDiff(304,10980
#define EqnCountMaximalLiterals(339,12253
#define EqnAddSymbolDistribution(345,12413
#define EqnAddSymbolDistributionLimited(348,12583
#define EqnAddSymbolFeaturesLimited(351,12799
#define EqnComputeFunctionRanks(356,13135
#define EqnCollectVariables(360,13335
#define EqnCollectPropVariables(364,13474
static __inline__ long EqnDepth(388,14203

CLAUSES/ccl_eqnlist.h,171
#define CCL_EQNLIST26,583
#define EqnListExtractFirst(55,1558
#define EqnListDeleteFirst(60,1762
#define EqnListInsertFirst(63,1888
#define NormSubstEqnList(100,3513

CLAUSES/ccl_eqnresolution.h,33
#define CCL_EQNRESOLUTION25,562

CLAUSES/ccl_factor.h,26
#define CCL_FACTOR25,530

CLAUSES/ccl_fcvindexing.h,734
#define CCL_FCVINDEXING28,663
#define FVINDEX_MAX_FEATURES_DEFAULT 37,965
#define FVINDEX_SYMBOL_SLACK_DEFAULT 38,1045
typedef struct fvindex_parms_cell40,1123
}FVIndexParmsCell, *FVIndexParms_p;FVIndexParms_p47,1286
typedef struct fv_index_cell51,1325
}FVIndexCell, *FVIndex_p;FVIndex_p60,1474
typedef struct fvi_anchor_cell62,1501
}FVIAnchorCell, *FVIAnchor_p;FVIAnchor_p69,1667
#define FVIndexParmsCellAlloc(78,1969
#define FVIndexParmsCellFree(79,2057
#define FVIndexParmsFree(83,2229
#define FVIndexCellAlloc(85,2288
#define FVIndexCellFree(86,2364
#define FVIAnchorCellAlloc(91,2501
#define FVIAnchorCellFree(92,2583
#define FVINDEX_MEM 98,2817
#define FVINDEX_MEM 100,2846
#define FVIndexStorage(103,2895

CLAUSES/ccl_findex.h,166
#define CCL_FINDEX25,568
typedef struct findex_cell35,864
}FIndexCell, *FIndex_p;FIndex_p39,1029
#define FIndexCellAlloc(49,1281
#define FIndexCellFree(50,1354

CLAUSES/ccl_formula_wrapper.h,1273
#define CCL_FORMULA_WRAPPER27,698
   WPIgnoreProps 37,993
   WPInitial 38,1061
   WPInputFormula 39,1116
   WPInputFormula      = CPInputClause,39,1116
   WPType1 40,1193
   WPType1          = CPType1,40,1193
   WPType2 41,1234
   WPType2          = CPType2,41,1234
   WPType3 42,1266
   WPType3          = CPType3,42,1266
   WPTypeMask 43,1297
   WPTypeMask       = CPTypeMask,43,1297
   WPTypeUnknown 44,1331
   WPTypeAxiom 45,1399
   WPTypeAxiom      = CPTypeAxiom,45,1399
   WPTypeHypothesis 46,1462
   WPTypeHypothesis = CPTypeHypothesis,46,1462
   WPTypeConjecture 47,1530
   WPTypeConjecture = CPTypeConjecture,47,1530
   WPTypeLemma 48,1598
   WPTypeLemma      = CPTypeLemma,48,1598
   WPTypeNegConjecture 49,1661
   WPTypeNegConjecture = CPTypeNegConjecture 49,1661
}WFormulaProperties;WFormulaProperties50,1737
typedef struct wformula_cell53,1760
}WFormulaCell, *WFormula_p;WFormula_p63,2155
#define FormulaSetProp(75,2505
#define FormulaDelProp(76,2564
#define FormulaGiveProps(77,2623
#define FormulaQueryProp(80,2735
#define FormulaIsAnyPropSet(82,2844
#define FormulaSetType(83,2913
#define FormulaQueryType(86,3025
#define  FormulaIsConjecture(88,3089
#define WFormulaCellAlloc(92,3233
#define WFormulaCellFree(93,3312

CLAUSES/ccl_formulafunc.h,66
#define CCL_FORMULAFUNC26,570
#define TFORMULA_GC_LIMIT 41,1096

CLAUSES/ccl_formulasets.h,277
#define CCL_FORMULASETS25,580
typedef struct formula_set_cell34,885
}FormulaSetCell, *FormulaSet_p;FormulaSet_p38,964
#define FormulaSetCellAlloc(46,1222
#define FormulaSetCellFree(47,1307
#define      FormulaSetCardinality(57,1817
#define      FormulaSetEmpty(58,1874

CLAUSES/ccl_freqvectors.h,919
#define CCL_FREQVECTORS26,602
typedef FixedDArray_p PermVector_p;37,931
typedef struct tuple3_cell39,968
}Tuple3Cell;Tuple3Cell44,1039
typedef struct freq_vector_cell46,1053
}FreqVectorCell, *FreqVector_p, *FVPackedClause_p;FVPackedClause_p51,1203
#define FV_CLAUSE_FEATURES 53,1255
   FVINoFeatures,57,1300
   FVIACFeatures,58,1318
   FVISSFeatures,59,1336
   FVIAllFeatures60,1354
}FVIndexType;FVIndexType61,1372
#define PermVectorAlloc(68,1611
#define PermVectorFree(69,1664
#define PermVectorCopy(70,1716
#define PermVectorPrint(71,1767
#define FreqVectorCellAlloc(79,2010
#define FreqVectorCellFree(80,2095
#define FVACCompatSize(83,2169
#define FVSSCompatSize(84,2233
#define FVFullSize(85,2278
#define FVSize(86,2342
#define FreqVectorFree(94,2643
#define FreqVectorFree(96,2713
#define FVPackedClauseFree(118,3525
#define FVPackedClauseFree(120,3603
#define FreqVectorSub(127,3850

CLAUSES/ccl_g_lithash.h,322
#define CCL_G_LITHASH27,656
typedef struct lit_desc_cell35,931
}LitDescCell,*LitDesc_p;LitDesc_p44,1310
typedef struct lit_hash_cell50,1545
}LitHashCell,*LitHash_p;LitHash_p56,1778
#define LitDescCellAlloc(63,2028
#define LitDescCellFree(64,2104
#define LitHashCellAlloc(68,2228
#define LitHashCellFree(69,2304

CLAUSES/ccl_garbage_coll.h,179
#define CCL_GARBAGE_COLL27,660
typedef struct gc_admin_cell39,970
}GCAdminCell, *GCAdmin_p;GCAdmin_p44,1067
#define GCAdminCellAlloc(51,1318
#define GCAdminCellFree(52,1394

CLAUSES/ccl_groundconstr.h,346
#define CCL_GROUNDCONSTR26,575
typedef struct lit_constr_cell35,854
}LitConstrCell;LitConstrCell39,935
typedef struct lit_occ_table41,952
}LitOccTableCell, *LitOccTable_p;LitOccTable_p46,1063
#define LitOccTableCellAlloc(55,1324
#define LitOccTableCellFree(56,1412
#define LIT_OCC_TABLE_REF(58,1487
#define LIT_OCC_TABLE_ENTRY(61,1603

CLAUSES/ccl_grounding.h,961
#define CCL_GROUNDING26,614
typedef struct var_inst39,1042
}VarInstCell, *VarInst_p;VarInst_p44,1153
typedef struct varset_inst48,1219
}VarSetInstCell, *VarSetInst_p;VarSetInst_p52,1282
   GCUNone 61,1487
   GCUPos 62,1503
   GCUNeg 63,1519
   GCUBoth 64,1535
   GCUBoth = GCUPos|GCUPos64,1535
   GCUBoth = GCUPos|GCUNegGCUNeg64,1535
}GCUEncoding;GCUEncoding65,1562
#define DEFAULT_LIT_NO 67,1577
#define DEFAULT_LIT_GROW 68,1607
   cpl_complete,72,1654
   cpl_lowmem,73,1671
   cpl_timeout,74,1686
   cpl_unknown75,1702
GroundSetState;77,1719
typedef struct ground_set_cell79,1736
}GroundSetCell, *GroundSet_p;GroundSet_p89,2169
#define VarSetInstCellAlloc(95,2423
#define VarSetInstCellFree(96,2508
#define EqnLitCode(112,3041
#define GroundSetCellAlloc(114,3089
#define GroundSetCellFree(115,3171
#define     GroundSetMembers(123,3518
#define     GroundSetDimacsPrintMembers(127,3731
#define     GroundSetLiterals(129,3845

CLAUSES/ccl_inferencedoc.h,1930
#define CCL_INFERENCEDOC25,611
   inf_noinf,37,938
   inf_initial,38,952
   inf_quote,39,968
   inf_paramod,40,982
   inf_sim_paramod,41,998
   inf_efactor,42,1018
   inf_factor,43,1034
   inf_eres,44,1049
   inf_split,45,1062
   inf_simplify_reflect,46,1076
   inf_context_simplify_reflect,47,1101
   inf_ac_resolution,48,1134
   inf_minimize,49,1156
   inf_rewrite,50,1173
   inf_fof_simpl,52,1193
   inf_fof_nnf,53,1211
   inf_fof_intro_def,54,1227
   inf_fof_apply_def,55,1249
   inf_shift_quantors,56,1271
   inf_fof_distrib,57,1294
   inf_var_rename,58,1314
   inf_skolemize_out,59,1333
   inf_neg_conjecture60,1355
}InfType;InfType61,1377
   no_format,65,1406
   lop_format,66,1420
   pcl_format,67,1435
   tstp_format,68,1450
   tptp_format,69,1466
   xml_format70,1482
}OutputFormatType;OutputFormatType71,1496
#define PCL_QUOTE 74,1518
#define PCL_ER 75,1541
#define PCL_PM 76,1564
#define PCL_SPM 77,1587
#define PCL_EF 78,1612
#define PCL_OF 79,1635
#define PCL_SPLIT 80,1658
#define TSTP_SPLIT_REFINED 81,1684
#define TSTP_SPLIT_BASE 82,1720
#define PCL_RW 83,1755
#define PCL_SR 84,1778
#define PCL_CSR 85,1801
#define PCL_ACRES 86,1825
#define PCL_CN 87,1848
#define PCL_SC 89,1872
#define PCL_SE 90,1907
#define PCL_FS 91,1939
#define PCL_NNF 92,1978
#define PCL_ID 93,2006
#define PCL_AD 94,2037
#define PCL_SQ 95,2067
#define PCL_VR 96,2102
#define PCL_SK 97,2138
#define PCL_DSTR 98,2168
#define PCL_NC 99,2199
#define DocClauseCreationDefault(112,2720
#define DocClauseModificationDefault(121,3137
#define DocClauseQuoteDefault(129,3437
#define DocClauseRewriteDefault(136,3709
#define DocFormulaCreationDefault(147,4160
#define DocFormulaModificationDefault(154,4466
#define DocFormulaIntroDefsDefault(159,4723
#define DocIntroSplitDefDefault(165,4977
#define DocIntroSplitDefRestDefault(170,5236
#define DocClauseApplyDefsDefault(176,5543

CLAUSES/ccl_neweval.h,661
#define CCL_NEWEVAL30,744
typedef long EvalPriority;40,1066
#define PrioBest 42,1094
#define PrioPrefer 43,1117
#define PrioNormal 44,1140
#define PrioDefer 45,1163
#define PrioLargestReasonable 46,1186
typedef struct simple_eval_cell49,1223
}SimpleEvalCell, *SimpleEval_p;SimpleEval_p55,1480
typedef struct eval_cell57,1513
}EvalCell, *Eval_p;Eval_p64,1788
#define EvalsFree(71,2033
#define EvalTreeFindSmallestWrap(72,2074
#define EvalTreePrintInOrderWrap(73,2154
#define EVAL_SIZE(81,2498
#define EvalCellAlloc(82,2579
#define EvalCellFree(83,2654
#define EVAL_MEM(86,2755
#define EVAL_MEM(88,2806
#define EvalTreeTraverseExit(113,3763

CLAUSES/ccl_paramod.h,228
#define CCL_PARAMOD26,577
   ParamodPlain,37,891
   ParamodAlwaysSim,38,957
   ParamodOrientedSim,39,1027
   ParamodDecreasingSim,42,1181
   ParamodSizeDecreasingSim 44,1299
}ParamodulationType;ParamodulationType46,1411

CLAUSES/ccl_pdtrees.h,802
#define CCL_PDTREES30,787
typedef struct pdt_node_cell43,1166
}PDTNodeCell, *PDTNode_p;PDTNode_p79,2622
typedef struct pd_tree_cell84,2766
}PDTreeCell, *PDTree_p;PDTree_p102,3646
#define PDNODE_FUN_INIT_ALT 108,3894
#define PDNODE_FUN_GROW_ALT 109,3924
#define PDNODE_VAR_INIT_ALT 110,3954
#define PDNODE_VAR_GROW_ALT 111,3984
#define  PDTREE_IGNORE_TERM_WEIGHT 113,4015
#define  PDTREE_IGNORE_NF_DATE 114,4059
#define  PDT_NODE_INIT_VAL(115,4116
#define  PDT_NODE_CLOSED(116,4176
#define   PDTreeCellAlloc(119,4320
#define   PDTreeCellFree(120,4395
#define PDTREE_CELL_MEM 123,4491
#define PDTREE_CELL_MEM 125,4524
#define PDTNODE_MEM 132,4672
#define PDTNODE_MEM 134,4701
#define   PDTreeStorage(137,4750
#define   PDTNodeCellAlloc(147,4994
#define   PDTNodeCellFree(148,5072

CLAUSES/ccl_proofstate.h,320
#define CTO_PROOFSTATE29,729
typedef struct proofstatecell40,1062
}ProofStateCell, *ProofState_p;ProofState_p81,2679
#define ProofStateCellAlloc(89,2937
#define ProofStateCellFree(91,3024
#define      ProofStateStorage(103,3589
#define WATCHLIST_INLINE_STRING 117,4158
#define WATCHLIST_INLINE_QSTRING 118,4218

CLAUSES/ccl_propclauses.h,455
#define CCL_PROPCLAUSES27,670
typedef struct proplitcell36,945
}PropLitCell, *PropLit_p;PropLit_p40,1025
typedef struct propclausecell43,1053
}PropClauseCell, *PropClause_p;PropClause_p48,1204
typedef struct propclausesetcell50,1237
}PropClauseSetCell, *PropClauseSet_p;PropClauseSet_p60,1610
#define PropClauseCellAlloc(70,1876
#define PropClauseCellFree(71,1961
#define PropClauseSetCellAlloc(80,2279
#define PropClauseSetCellFree(81,2373

CLAUSES/ccl_relevance.h,188
#define CCL_RELEVANCE26,603
typedef struct relevance_cell39,1041
}RelevanceCell, *Relevance_p;Relevance_p56,1377
#define RelevanceCellAlloc(64,1633
#define RelevanceCellFree(65,1715

CLAUSES/ccl_rewrite.h,168
#define CCL_REWRITE25,555
typedef struct rw_desc_cell38,954
}RWDescCell, *RWDesc_p;RWDesc_p47,1186
#define RWDescCellAlloc(57,1438
#define RWDescCellFree(58,1511

CLAUSES/ccl_simparamod.h,30
#define CCL_SIMPARAMOD26,617

CLAUSES/ccl_splitting.h,504
#define CCL_SPLITTING26,634
   SplitGroundNone 33,705
   SplitGroundOne 35,786
   SplitGroundFull 37,896
}SplitType;SplitType38,963
   SplitNone 48,1222
   SplitHorn 49,1247
   SplitNonHorn 50,1272
   SplitNegative 51,1297
   SplitPositive 52,1322
   SplitMixed 53,1347
   SplitAll 54,1373
}SplitClassType;SplitClassType55,1397
#define QuerySplitClass(57,1415
#define SetSplitClass(58,1465
typedef struct lit_split_desc66,1747
}LitSplitDescCell, *LitSplitDesc_p;LitSplitDesc_p73,1990

CLAUSES/ccl_subsumption.h,30
#define CCL_SUBSUPTION26,626

CLAUSES/ccl_subterm_index.h,33
#define CCL_SUBTERM_INDEX27,655

CLAUSES/ccl_tautologies.h,31
#define CCL_TAUTOLOGIES27,672

CLAUSES/ccl_tcnf.h,94
#define CCL_TCNF26,613
#define TFORM_MANY_CLAUSES 40,1134
#define TFORM_MANY_LIMIT 41,1170

CLAUSES/ccl_term_clause_assoc.h,224
#define CCL_SUBTERMINDEX27,665
typedef struct term_clauses_assoc35,916
}TermClausesAssocCell, *TermClauseAssoc_p;TermClauseAssoc_p39,989
#define TermClauseAssocCellAlloc(47,1258
#define TermClauseAssocCellFree(49,1364

CLAUSES/ccl_tformulae.h,591
#define CCL_TFORMULAE26,608
typedef Term_p TFormula_p;34,880
#define TFORM_RENAME_LIMIT 40,1131
#define TFORM_RENAME_LIMIT_STR 41,1165
#define   TFormulaHasSubForm1(43,1202
#define   TFormulaHasSubForm2(46,1337
#define   TFormulaIsBinary(50,1474
#define   TFormulaIsUnary(51,1530
#define   TFormulaIsQuantified(52,1586
#define   TFormulaIsLiteral(54,1709
#define   TFormulaIsPropTrue(59,1862
#define   TFormulaIsPropFalse(60,1940
#define    TFormulaGCMarkCells(62,2020
#define    TFormulaEqual(71,2584
#define    TFormulaCopy(73,2699
#define   TFormulaFindMaxVarCode(84,3266

CLAUSES/ccl_unfold_defs.h,114
#define CCL_UNFOLD_DEFS30,885
#define DEFAULT_EQDEF_INCRLIMIT 41,1251
#define DEFAULT_EQDEF_MAXCLAUSES 44,1346

CLAUSES/ccl_unit_simplify.h,205
#define CCL_UNIT_SIMPLIFY27,631
   NoUnitSimplify,39,927
   TopLevelUnitSimplify,40,981
   FullUnitSimplify 41,1030
}UnitSimplifyType;UnitSimplifyType42,1096
#define TransUnitSimplifyString(51,1375

CONTROL/cco_clausesplitting.h,35
#define CCO_CLAUSESPLITTING25,569

CONTROL/cco_eqnresolving.h,32
#define CCO_EQNRESOLVING25,554

CONTROL/cco_factoring.h,29
#define CCO_FACTORING25,537

CONTROL/cco_forward_contraction.h,82
#define CCO_FORWARD_CONTRACTION27,651
#define DEFAULT_FILTER_DESCRIPTOR 48,1336

CONTROL/cco_paramodulation.h,34
#define CCO_PARAMODULATION25,561

CONTROL/cco_proofproc.h,63
#define CCO_PROOFPROC25,525
#define TMPBANK_GC_LIMIT 49,1432

CONTROL/cco_simplification.h,33
#define CCI_SIMPIFICATION25,559

EXTERNAL/cex_csscpa.h,349
#define CEX_CSSCPA25,569
typedef struct csscpa_state_cell36,896
}CSSCPAStateCell, *CSSCPAState_p;CSSCPAState_p47,1203
   contradicts,52,1277
   improved,53,1293
   rejected,54,1306
   forced,55,1319
   requested,56,1330
   unknown57,1344
ClauseStatusType;59,1357
#define CSSCPAStateCellAlloc(65,1599
#define CSSCPAStateCellFree(66,1687

HEURISTICS/che_axiomscan.h,325
#define CHE_AXIOMSCAN_H25,542
typedef enum aximotype43,1079
   AxNoaxiom,45,1104
   AxCommutative,46,1118
   AxAssociative,47,1136
   AxRightIdentity,48,1154
   AxLeftIdentyty,49,1174
   AxRightInverse,50,1193
   AxLeftInverse,51,1212
   AxIdempotent1,52,1230
   AxIdempotent253,1248
}AxiomType;AxiomType54,1265

HEURISTICS/che_clausefeatures.h,76
#define CHE_CLAUSEFEATURES25,564
#define ClauseAddVarDistribution(48,1348

HEURISTICS/che_clausesetfeatures.h,4092
#define CHE_CLAUSESETFEATURES25,574
   SpecUnit,36,905
   SpecHorn,37,918
   SpecGeneral,38,931
   SpecNoEq,39,947
   SpecSomeEq,40,960
   SpecPureEq,41,975
   SpecFewPosNonGroundUnits,42,990
   SpecSomePosNonGroundUnits,43,1019
   SpecManyPosNonGroundUnits,44,1049
   SpecFewPosGround,45,1079
   SpecSomePosGround,46,1100
   SpecManyPosGround,47,1122
   SpecFewAxioms,48,1144
   SpecSomeAxioms,49,1163
   SpecManyAxioms,50,1182
   SpecFewLiterals,51,1201
   SpecSomeLiterals,52,1221
   SpecManyLiterals,53,1242
   SpecSmallTerms,54,1263
   SpecMediumTerms,55,1282
   SpecLargeTerms,56,1302
   SpecArity0,57,1321
   SpecArity1,58,1336
   SpecArity2,59,1351
   SpecArity3Plus,60,1366
   SpecAritySumSmall,61,1385
   SpecAritySumMedium,62,1407
   SpecAritySumLarge,63,1430
   SpecDepthShallow,64,1452
   SpecDepthMedium,65,1473
   SpecDepthDeep,66,1493
}SpecFeatures;SpecFeatures67,1511
typedef struct spec_limits_cell74,1645
}SpecLimitsCell, *SpecLimits_p;SpecLimits_p92,2109
typedef struct spec_feature_cell97,2263
}SpecFeatureCell, *SpecFeature_p;SpecFeature_p143,3666
#define NGU_ABSOLUTE 150,3925
#define NGU_FEW_DEFAULT 151,3961
#define NGU_MANY_DEFAULT 152,3997
#define NGU_FEW_ABSDEFAULT 153,4033
#define NGU_MANY_ABSDEFAULT 154,4069
#define GPC_ABSOLUTE 155,4105
#define GPC_FEW_DEFAULT 156,4141
#define GPC_MANY_DEFAULT 157,4177
#define GPC_FEW_ABSDEFAULT 158,4213
#define GPC_MANY_ABSDEFAULT 159,4249
#define AX_SOME_DEFAULT 160,4285
#define AX_MANY_DEFAULT 161,4321
#define LIT_SOME_DEFAULT 162,4357
#define LIT_MANY_DEFAULT 163,4393
#define TERM_MED_DEFAULT 164,4429
#define TERM_LARGE_DEFAULT 165,4465
#define FAR_SUM_MED_DEFAULT 166,4501
#define FAR_SUM_LARGE_DEFAULT 167,4536
#define DEPTH_MEDIUM_DEFAULT 168,4571
#define DEPTH_DEEP_DEFAULT 171,4768
#define DEFAULT_OUTPUT_DESCRIPTOR 174,4805
#define DEFAULT_CLASS_MASK 175,4848
#define SpecLimitsCellAlloc(178,4893
#define SpecLimitsCellFree(180,4986
#define SpecFeatureCellAlloc(184,5101
#define SpecFeatureCellFree(186,5197
#define Spec(189,5282
#define SpecAxiomsAreUnit(191,5339
#define SpecAxiomsAreHorn(192,5410
#define SpecAxiomsAreNonUnitHorn(193,5481
#define SpecAxiomsAreGeneral(195,5616
#define SpecGoalsAreUnit(197,5691
#define SpecGoalsAreHorn(198,5759
#define SpecGoalsAreGround(199,5816
#define SpecGoalsHaveVars(200,5876
#define SpecPureEq(202,5937
#define SpecSomeEq(203,6001
#define SpecNoEq(204,6068
#define SpecFewNGPosUnits(206,6116
#define SpecSomeNGPosUnits(208,6212
#define SpecManyNGPosUnits(210,6310
#define SpecFewGroundPos(213,6409
#define SpecSomeGroundPos(215,6504
#define SpecManyGroundPos(217,6601
#define SpecFewAxioms(220,6699
#define SpecSomeAxioms(222,6780
#define SpecManyAxioms(224,6863
#define SpecFewLiterals(227,6947
#define SpecSomeLiterals(229,7033
#define SpecManyLiterals(231,7121
#define SpecSmallTerms(234,7210
#define SpecMediumTerms(236,7295
#define SpecLargeTerms(238,7382
#define SpecMaxFArity0(241,7470
#define SpecMaxFArity1(243,7550
#define SpecMaxFArity2(245,7630
#define SpecMaxFArity3Plus(247,7710
#define SpecAvgFArity0(250,7798
#define SpecAvgFArity1(252,7878
#define SpecAvgFArity2(254,7958
#define SpecAvgFArity3Plus(256,8038
#define SpecSmallFArSum(259,8126
#define SpecMediumFArSum(261,8214
#define SpecLargeFArSum(263,8304
#define SpecShallowMaxDepth(266,8395
#define SpecMediumMaxDepth(268,8485
#define SpecDeepMaxDepth(270,8573
#define ClauseSetCountAxioms(274,8704
#define ClauseSetCountUnitAxioms(279,8885
#define ClauseSetIsUnitSet(281,8987
#define ClauseSetAxiomsAreUnit(283,9073
#define ClauseSetGoalsAreUnit(285,9180
#define ClauseSetCountHornAxioms(290,9380
#define ClauseSetIsHornSet(292,9483
#define ClauseSetAxiomsAreHorn(294,9569
#define ClauseSetGoalsAreHorn(296,9676
#define ClauseSetIsEquationalSet(302,9867
#define ClauseSetIsEquational(305,10008
#define ClauseSetIsPureEquationalSet(309,10144
#define ClauseSetGoalsAreGround(313,10303
#define ClauseSetIsGround(317,10457
#define ClauseSetCountNonGroundUnitAxioms(324,10716

HEURISTICS/che_clauseweight.h,234
#define CHE_CLAUSEWEIGHT27,660
#define DEFAULT_POS_MULT 35,932
typedef struct weightparamcell37,960
}WeightParamCell, *WeightParam_p;WeightParam_p42,1057
#define WeightParamCellAlloc(50,1317
#define WeightParamCellFree(52,1413

HEURISTICS/che_fcode_featurearrays.h,367
#define CHE_F_CODE_FEATUREARRAYS27,733
typedef struct fcode_feature_sort_cell37,1076
}FCodeFeatureSortCell, *FCodeFeatureSort_p;FCodeFeatureSort_p46,1246
typedef struct fcode_feature_array_cell49,1292
}FCodeFeatureArrayCell, *FCodeFeatureArray_p;FCodeFeatureArray_p53,1377
#define FCodeFeatureArrayCellAlloc(62,1650
#define FCodeFeatureArrayCellFree(64,1763

HEURISTICS/che_fcode_weight.h,234
#define CHE_CLAUSEWEIGHT27,660
#define DEFAULT_POS_MULT 35,932
typedef struct weightparamcell37,960
}WeightParamCell, *WeightParam_p;WeightParam_p42,1057
#define WeightParamCellAlloc(50,1317
#define WeightParamCellFree(52,1413

HEURISTICS/che_fifo.h,24
#define CHE_FIFO25,518

HEURISTICS/che_funweights.h,217
#define CHE_FUNWEIGHTS26,597
typedef struct funweightparamcell39,907
}FunWeightParamCell, *FunWeightParam_p;FunWeightParam_p75,1959
#define FunWeightParamCellAlloc(83,2225
#define FunWeightParamCellFree(85,2330

HEURISTICS/che_hcb.h,758
#define CHE_HCB28,627
   NoACHandling,49,1142
   ACDiscardAll,50,1159
   ACKeepUnits,51,1176
   ACKeepOrientable52,1192
}ACHandlingType;ACHandlingType53,1212
typedef struct heuristic_parms_cell58,1291
}HeuristicParmsCell, *HeuristicParms_p;HeuristicParms_p124,3564
typedef struct hcb_cell133,3841
}HCBCell, *HCB_p;HCB_p164,5120
#define HCB_DEFAULT_HEURISTIC 166,5139
#define DEFAULT_FILTER_LIMIT 167,5179
#define DEFAULT_FILTER_COPIES_LIMIT 168,5217
#define DEFAULT_REWEIGHT_INTERVAL 169,5262
#define DEFAULT_DELETE_BAD_LIMIT 170,5305
typedef Clause_p (*ClauseSelectFun)ClauseSelectFun172,5348
#define HeuristicParmsCellAlloc(179,5638
#define HeuristicParmsCellFree(181,5737
#define HCBCellAlloc(189,5997
#define HCBCellFree(190,6058

HEURISTICS/che_hcbadmin.h,179
#define CHE_HCB_ADMIN25,555
typedef struct hcbadmincell34,824
}HCBAdminCell, *HCBAdmin_p;HCBAdmin_p38,894
#define HCBAdminCellAlloc(45,1147
#define HCBAdminCellFree(46,1223

HEURISTICS/che_heuristics.h,265
#define CHE_HEURISTICS25,558
   HEU_NO_HEURISTIC 39,997
   HEU_AUTO_MODE,40,1022
   HEU_AUTO_MODE_CASC,41,1040
   HEU_AUTO_MODE_DEV42,1063
}Heuristic;Heuristic43,1084
typedef struct heuristic_assoc_cell45,1097
}HeuristicAssocCell, HeuristicAssoc_p;50,1218

HEURISTICS/che_learning.h,213
#define CHE_LEARNING25,553
#define DEFAULT_POS_MULT 35,862
typedef struct tsmparamcell43,1205
}TSMParamCell, *TSMParam_p;TSMParam_p65,1943
#define TSMParamCellAlloc(73,2197
#define TSMParamCellFree(75,2279

HEURISTICS/che_lifo.h,25
#define CHE_LFIFO25,527

HEURISTICS/che_litselection.h,345
#define CHE_LITSELECTION26,581
typedef void (*LiteralSelectionFun)LiteralSelectionFun35,886
typedef struct litsel_name_fun_assoc_cell37,952
}LitSelNameFunAssocCell;LitSelNameFunAssocCell41,1055
typedef struct lit_eval_cell43,1081
}LitEvalCell, *LitEval_p;LitEval_p51,1319
typedef void LitWeightFun(53,1346
#define LitEvalInit(59,1625

HEURISTICS/che_normsubst.h,185
#define CLE_NORMSUBST26,566
typedef struct normsubstcell36,867
}NormSubstCell, *NormSubst_p;NormSubst_p41,969
#define NormSubstCellAlloc(48,1224
#define NormSubstCellFree(49,1303

HEURISTICS/che_orientweight.h,270
#define CHE_ORIENTWEIGHT26,614
#define DEFAULT_MAX_MULT 34,894
typedef struct orientweightparamcell36,924
}OrientWeightParamCell, *OrientWeightParam_p;OrientWeightParam_p44,1119
#define OrientWeightParamCellAlloc(52,1391
#define OrientWeightParamCellFree(54,1505

HEURISTICS/che_patterns.h,28
#define CLE_PATTERNS25,538

HEURISTICS/che_prio_funs.h,88
#define CHE_PRIO_FUNS25,542
typedef EvalPriority (*ClausePrioFun)ClausePrioFun34,844

HEURISTICS/che_proofcontrol.h,288
#define CHE_PROOFCONTROL26,611
typedef struct proofcontrolcell38,974
}ProofControlCell, *ProofControl_p;ProofControl_p48,1278
#define HCBARGUMENTS 50,1315
typedef HCB_p (*HCBCreateFun)HCBCreateFun53,1427
#define ProofControlCellAlloc(63,1769
#define ProofControlCellFree(65,1862

HEURISTICS/che_refinedweight.h,277
#define CHE_REFINEDWEIGHT26,619
#define DEFAULT_MAX_MULT 34,900
typedef struct refinedweightparamcell36,930
}RefinedWeightParamCell, *RefinedWeightParam_p;RefinedWeightParam_p44,1114
#define RefinedWeightParamCellAlloc(52,1388
#define RefinedWeightParamCellFree(54,1505

HEURISTICS/che_simweight.h,179
#define CHE_SIMWEIGHT26,595
typedef struct simparamcell35,865
}SimParamCell, *SimParam_p;SimParam_p41,997
#define SimParamCellAlloc(49,1251
#define SimParamCellFree(51,1338

HEURISTICS/che_to_autoselect.h,263
#define CHE_TO_AUTOSELECT26,584
typedef struct order_parms_cell40,1141
}OrderParmsCell, *OrderParms_p;OrderParms_p47,1348
typedef double (*OrderEvaluationFun)OrderEvaluationFun49,1381
#define OrderParmsCellAlloc(57,1709
#define OrderParmsCellFree(59,1796

HEURISTICS/che_to_precgen.h,716
#define CHE_TO_PRECGEN25,556
   PNoMethod 35,856
   PUnaryFirst,36,894
   PUnaryFirstFreq,37,936
   PArity,38,982
   PInvArity,39,1026
   PConstMax,40,1078
   PInvArConstMin,42,1169
   PByFrequency,44,1255
   PByInvFrequency,45,1317
   PByInvConjFrequency,46,1381
   PByInvFreqConjMax,48,1498
   PByInvFreqConjMin,50,1610
   PByInvFreqConstMin,52,1723
   PByInvFreqHack,54,1816
   PArrayOpt,57,1985
   POrientAxioms,60,2154
   PMinMethod 61,2202
   PMinMethod = PUnaryFirst,61,2202
   PMaxMethod 62,2231
   PMaxMethod = POrientAxioms62,2231
}TOPrecGenMethod;TOPrecGenMethod63,2261
#define FREQ_SEMI_INFTY 70,2504
#define TOGetPrecGenName(76,2672
#define TOGenerateDefaultPrecedence(80,2788

HEURISTICS/che_to_weightgen.h,1112
#define CHE_TO_WEIGHTGEN25,556
   WNoMethod 38,861
   WSelectMaximal,39,901
   WArityWeight,41,1012
   WArityMax0,42,1067
   WModArityWeight,43,1138
   WModArityMax0,44,1207
   WAritySqWeight,46,1322
   WAritySqMax0,47,1380
   WInvArityWeight,49,1485
   WInvArityMax0,50,1549
   WInvAritySqWeight,52,1660
   WInvAritySqMax0,53,1728
   WPrecedence,55,1843
   WPrecedenceInv,56,1897
   WPrecRank5,57,1951
   WPrecRank10,58,1983
   WPrecRank20,59,2016
   WFrequency,60,2049
   WInvFrequency,61,2104
   WFrequencyRank,62,2169
   WInvFrequencyRank,64,2284
   WInvConjFrequencyRank,66,2408
   WFrequencyRankSq,69,2570
   WInvFrequencyRankSq,70,2624
   WInvModFreqRank,71,2662
   WInvModFreqRankMax0,74,2844
   WConstantWeight,75,2915
   WMinMethod 76,2961
   WMinMethod = WSelectMaximal,76,2961
   WMaxMethod 77,2993
   WMaxMethod = WConstantWeight 77,2993
}TOWeightGenMethod;TOWeightGenMethod78,3051
#define WConstNoSpecialWeight 82,3147
#define WConstNoWeight 83,3180
#define W_TO_BASEWEIGHT 87,3254
#define TOGetWeightGenName(97,3540
#define TOGenerateDefaultWeights(102,3674

HEURISTICS/che_varweights.h,217
#define CHE_VARWEIGHTS25,571
typedef struct varweightparamcell35,886
}VarWeightParamCell, *VarWeightParam_p;VarWeightParam_p57,1449
#define VarWeightParamCellAlloc(65,1715
#define VarWeightParamCellFree(67,1820

HEURISTICS/che_wfcb.h,270
#define CHE_WFCB54,1639
typedef double (*ClauseEvalFun)ClauseEvalFun68,2025
typedef struct wfcb_cell71,2092
}WFCBCell, *WFCB_p;WFCB_p80,2484
typedef WFCB_p (*WeightFunParseFun)WeightFunParseFun82,2505
#define WFCBCellAlloc(90,2820
#define WFCBCellFree(91,2884

HEURISTICS/che_wfcbadmin.h,188
#define CHE_WFCB_ADMIN25,564
typedef struct wfcbadmincell42,1027
}WFCBAdminCell, *WFCBAdmin_p;WFCBAdmin_p47,1125
#define WFCBAdminCellAlloc(54,1380
#define WFCBAdminCellFree(55,1459

INOUT/cio_basicparser.h,123
#define CIO_BASICPARSER26,605
   SNNoNumber,38,945
   SNInteger,39,960
   SNFloat40,974
}StrNumType;StrNumType41,985

INOUT/cio_commandline.h,358
#define CIO_COMMANDLINE38,1127
   NoArg,51,1449
   OptArg,52,1459
   ReqArg53,1470
}OptArgType;OptArgType54,1480
typedef struct optcell56,1494
}OptCell, *Opt_p;Opt_p65,1883
typedef struct clstatecell68,1903
}CLStateCell, *CLState_p;CLState_p77,2310
#define CLStateCellAlloc(83,2560
#define CLStateCellFree(84,2633
#define FORMAT_WIDTH 87,2708

INOUT/cio_fileops.h,63
#define CIO_FILEOPS25,523
#define FileNameIsAbsolute(48,1290

INOUT/cio_filevars.h,179
#define CIO_FILEVARS25,559
typedef struct filevarscell36,889
}FileVarsCell, *FileVars_p;FileVars_p40,1031
#define FileVarsCellAlloc(49,1286
#define FileVarsCellFree(50,1362

INOUT/cio_initio.h,26
#define CIO_INITIO26,585

INOUT/cio_output.h,84
#define CIO_OUTPUT27,658
#define OUTPRINT(37,948
#define      InitOutput(49,1342

INOUT/cio_scanner.h,2625
#define CIO_SCANNER25,557
typedef unsigned long long TokenType;46,1308
#define NoToken 48,1347
#define WhiteSpace 49,1373
#define Comment 50,1407
#define Ident 51,1444
#define Idnum 52,1478
#define SemIdent 53,1510
#define String 54,1542
#define SQString 55,1577
#define PosInt 56,1610
#define OpenBracket 57,1645
#define CloseBracket 58,1678
#define OpenCurly 59,1716
#define CloseCurly 60,1755
#define OpenSquare 61,1791
#define CloseSquare 62,1828
#define LesserSign 63,1865
#define GreaterSign 64,1903
#define EqualSign 65,1940
#define NegEqualSign 66,1978
#define TildeSign 67,2014
#define Exclamation 68,2053
#define AllQuantor 69,2089
#define QuestionMark 70,2125
#define ExistQuantor 71,2163
#define Comma 72,2200
#define Semicolon 73,2239
#define Colon 74,2271
#define Hyphen 75,2307
#define Plus 76,2339
#define Mult 77,2372
#define Fullstop 78,2403
#define Dollar 79,2434
#define Slash 80,2469
#define Pipe 81,2502
#define FOFOr 82,2534
#define Ampersand 83,2563
#define FOFAnd 84,2594
#define FOFLRImpl 85,2628
#define FOFRLImpl 86,2664
#define FOFEquiv 87,2700
#define FOFXor 88,2736
#define FOFNand 89,2771
#define FOFNor 90,2804
#define SkipToken 93,2840
#define Identifier 94,2885
#define Name 95,2923
#define FOFBinOp 96,2967
#define FOFAssocOp 97,3055
   LOPFormat,106,3202
   TPTPFormat,107,3216
   TSTPFormat108,3231
}IOFormat;IOFormat109,3245
typedef struct tokenrepcell112,3258
}TokenRepCell, *TokenRep_p;TokenRep_p116,3324
typedef struct tokencell119,3354
}TokenCell, *Token_p;Token_p131,4032
#define MAXTOKENLOOKAHEAD 133,4055
typedef struct scannercell135,4084
}ScannerCell, *Scanner_p;Scanner_p146,4687
#define TokenCellAlloc(153,4942
#define TokenCellFree(154,5014
#define ScannerCellAlloc(155,5078
#define ScannerCellFree(156,5154
#define  Source(158,5221
#define  SourceType(159,5282
#define  LookChar(160,5348
#define  CurrChar(161,5421
#define  CurrLine(162,5488
#define  CurrColumn(163,5555
#define  NextChar(164,5624
#define  ScannerSetFormat(166,5692
#define  ScannerGetFormat(167,5760
#define  ScannerGetDefaultDir(169,5823
#define isstartidchar(171,5896
#define isidchar(172,5952
#define ischar(173,6008
#define isstartcomment(174,6047
#define TOKENREALPOS(185,6443
#define AktToken(186,6497
#define AktTokenType(187,6557
#define LookToken(188,6602
#define TestInpTok(195,6817
#define TestInpId(196,6877
#define TestInpIdnum(197,6935
#define TestInpNoSkip(198,6996
#define TestInpTokNoSkip(199,7053
#define AcceptInpTok(209,7357
#define AcceptInpTokNoSkip(211,7461
#define AcceptInpId(214,7610

INOUT/cio_signals.h,27
#define CCO_SIGNALS26,626

INOUT/cio_streams.h,413
#define CIO_STREAMS28,715
#define MAXLOOKAHEAD 37,1009
typedef char* StreamType;45,1247
typedef struct streamcell54,1533
}StreamCell, *Stream_p, **Inpstack_p;Inpstack_p67,1933
#define StreamCellAlloc(80,2382
#define StreamCellFree(81,2452
#define  STREAMREALPOS(86,2632
#define  StreamLookChar(88,2684
#define  StreamCurrChar(91,2825
#define  StreamCurrLine(92,2895
#define  StreamCurrColumn(93,2946

INOUT/cio_tempfile.h,28
#define CIO_TEMPFILE25,537

LEARN/cle_annotations.h,267
#define CLE_ANNOTATIONS26,578
#define ANNOTATION_DEFAULT_SIZE 57,1638
#define ANNOTATIONS_MERGE_ALL 58,1672
typedef NumTree_p Annotation_p;60,1708
#define      AnnotationValues(68,2048
#define      AnnotationCount(69,2105
#define      AnnotationLength(71,2194

LEARN/cle_annoterms.h,364
#define CLE_ANNOTERMS25,541
typedef struct annotermcell34,844
}AnnoTermCell, *AnnoTerm_p;AnnoTerm_p38,1011
typedef struct annosetcell40,1040
}AnnoSetCell, *AnnoSet_p;AnnoSet_p46,1287
#define AnnoTermCellAlloc(53,1538
#define AnnoTermCellFree(54,1614
#define    AnnoTermFreeNoRef(59,1867
#define AnnoSetCellAlloc(66,2139
#define AnnoSetCellFree(67,2212

LEARN/cle_classification.h,34
#define CLE_CLASSIFICATION25,569

LEARN/cle_clauseenc.h,29
#define CLE_CLAUSEENC25,559

LEARN/cle_examplerep.h,358
#define CLE_EXAMPLEREP26,596
typedef struct examplerepcell41,1168
}ExampleRepCell, *ExampleRep_p;ExampleRep_p46,1265
typedef struct examplesetcell51,1359
}ExampleSetCell, *ExampleSet_p;ExampleSet_p57,1522
#define ExampleRepCellAlloc(64,1779
#define ExampleRepCellFree(65,1862
#define ExampleSetCellAlloc(71,2090
#define ExampleSetCellFree(72,2173

LEARN/cle_flatannoterms.h,420
#define CLE_FLATANNOTERMS25,556
typedef struct flatannotermcell35,861
}FlatAnnoTermCell, *FlatAnnoTerm_p;FlatAnnoTerm_p48,1340
typedef struct flatannosetcell50,1377
}FlatAnnoSetCell, *FlatAnnoSet_p;FlatAnnoSet_p54,1492
#define FlatAnnoTermCellAlloc(63,1753
#define FlatAnnoTermCellFree(65,1851
#define         FlatAnnoTermFree(71,2038
#define FlatAnnoSetCellAlloc(73,2105
#define FlatAnnoSetCellFree(75,2200

LEARN/cle_indexfunctions.h,620
#define CLE_INDEXFUNCTIONS25,567
   IndexNoIndex 39,943
   IndexArity 40,967
   IndexSymbol 41,991
   IndexTop 42,1015
   IndexAltTop 43,1039
   IndexCSTop 44,1063
   IndexESTop 45,1087
   IndexIdentity 46,1111
   IndexEmpty 47,1135
}IndexType;IndexType48,1158
typedef struct indextermcell51,1172
}IndexTermCell, *IndexTerm_p;IndexTerm_p57,1414
typedef struct tsmindexcell70,1636
}TSMIndexCell, *TSMIndex_p;TSMIndex_p83,2047
#define IndexDynamicDepth 85,2076
#define IndexTermCellAlloc(94,2360
#define IndexTermCellFree(95,2442
#define TSMIndexCellAlloc(105,2754
#define TSMIndexCellFree(106,2833

LEARN/cle_kbdesc.h,220
#define CLE_KB25,551
#define KB_VERSION 33,819
typedef struct kbdesccell35,849
}KBDescCell, *KBDesc_p;KBDesc_p40,970
#define KB_ANNOTATION_NO 43,996
#define KBDescCellAlloc(50,1248
#define KBDescCellFree(51,1319

LEARN/cle_kbinsert.h,28
#define CLE_KBINSERT25,545

LEARN/cle_numfeatures.h,349
#define CHE_NUMFEATURES27,673
#define FEATURE_NUMBER 36,951
#define FEATURE_NUMBER 52,1513
typedef struct featurescell54,1540
}FeaturesCell, *Features_p;Features_p61,1721
#define SEL_FEATURE_WEIGHTS 63,1750
#define SEL_PRED_WEIGHT 65,1885
#define SEL_FUNC_WEIGHT 66,1913
#define FeaturesCellAlloc(73,2166
#define FeaturesCellFree(74,2243

LEARN/cle_patterns.h,576
#define CLE_PATTERNS26,598
#define NORM_ARITY_LIMIT 41,1222
#define NORM_SYMBOL_LIMIT 42,1283
#define NORM_VAR_INIT 44,1386
typedef struct patternsubstcell46,1424
}PatternSubstCell, *PatternSubst_p;PatternSubst_p58,1931
#define DEFAULT_LITERAL_NO 65,2192
#define PATTERN_SEARCH_BRANCHLIMIT 66,2221
#define PatternNormCode(68,2259
#define PatternSubstCellAlloc(70,2340
#define PatternSubstCellFree(72,2438
#define PatternIdGetArity(82,2821
#define PatternIdGetIdent(83,2886
#define PatIdIsNormId(85,2948
#define PatEqnLTerm(90,3136
#define PatEqnRTerm(91,3210

LEARN/cle_termtops.h,28
#define CLE_TERMTOPS25,553

LEARN/cle_tsm.h,693
#define CLE_TSM 25,516
   TSMTypeNoType,37,862
   TSMTypeFlat,38,880
   TSMTypeRecursive,39,896
   TSMTypeRecurrent,40,917
   TSMTypeRecurrentLocal41,938
}TSMType;TSMType42,963
typedef struct tsmadmincell44,974
}TSMAdminCell, *TSMAdmin_p;TSMAdmin_p60,1494
typedef struct tsmcell63,1524
}TSMCell, *TSM_p;TSM_p69,1637
typedef struct tsacell71,1656
}TSACell, *TSA_p;TSA_p78,1779
#define TSM_MAX_TERMTOP 81,1799
#define       GetTSMType(89,2079
#define       TSMEvalNormalize(91,2145
#define TSMAdminCellAlloc(107,2796
#define TSMAdminCellFree(108,2873
#define TSMCellAlloc(113,3036
#define TSMCellFree(114,3098
#define TSACellAlloc(121,3359
#define TSACellFree(122,3421

LEARN/cle_tsmio.h,25
#define CLE_TSMIO25,542

ORDERINGS/cto_cmpcache.h,128
#define CTO_CMPCACHE26,621
typedef QuadTree_p CmpCache_p;42,1226
#define CmpCacheInit(48,1481
#define CmpCacheClear(49,1527

ORDERINGS/cto_kbo.h,23
#define CTO_KBO29,724

ORDERINGS/cto_kbodata.h,169
#define CTO_KBODATA29,819
typedef struct kbo_lin_cell40,1153
}KBOLinCell, *KBOLin_p;KBOLin_p48,1328
#define KBOLinCellAlloc(56,1578
#define KBOLinCellFree(57,1651

ORDERINGS/cto_kbolin.h,26
#define CTO_KBOLIN28,750

ORDERINGS/cto_lpo.h,23
#define CTO_LPO27,618

ORDERINGS/cto_lpo_debug.h,29
#define CTO_LPO_DEBUG27,605

ORDERINGS/cto_ocb.h,763
#define CTO_OCB26,578
   NoOrdering,40,890
   AUTO,41,905
   AUTOCASC,42,914
   AUTODEV,43,927
   OPTIMIZE_AX,44,939
   KBO,45,955
   KBO6,46,963
   LPO,47,972
   LPOCopy,48,980
   LPO4,49,992
   LPO4Copy,50,1001
   RPO51,1014
}TermOrdering;TermOrdering52,1021
typedef struct ocb_cell55,1038
}OCBCell, *OCB_p;OCB_p75,1825
#define OCB_FUN_DEFAULT_WEIGHT 77,1844
#define W_DEFAULT_WEIGHT 82,1998
#define OCBCellAlloc(88,2249
#define OCBCellFree(89,2310
#define OCBPrecedenceGetState(104,2793
#define OCBFunWeightPos(119,3297
#define OCBFunComparePos(120,3354
#define OCBDesignatedMinConst(125,3489
#define OCBDesignatedMinTerm(128,3625
static __inline__ long OCBFunWeight(159,4729
static __inline__ CompareResult OCBFunCompare(183,5337

ORDERINGS/cto_orderings.h,29
#define CTO_ORDERINGS25,550

PCL2/pcl_analysis.h,64
#define PCL_ANALYSIS26,595
#define PCLStepUpdateGRefs(47,1329

PCL2/pcl_expressions.h,1921
#define PCL_EXPRESSIONS25,538
   PCLOpNoOp,41,993
   PCLOpInitial,42,1007
   PCLOpIntroDef,43,1024
   PCLOpQuote,44,1042
   PCLOpParamod,45,1057
   PCLOpSimParamod,46,1074
   PCLOpEResolution,47,1094
   PCLOpEFactoring,48,1115
   PCLOpSimplifyReflect,49,1135
   PCLOpContextSimplifyReflect,50,1160
   PCLOpACResolution,51,1192
   PCLOpRewrite,52,1214
   PCLOpURewrite,53,1231
   PCLOpClauseNormalize,54,1249
   PCLOpSplitClause,55,1274
   PCLOpSplitEquiv,56,1295
   PCLOpApplyDef,57,1315
   PCLOpFOFSplitConjunct,58,1333
   PCLOpFOFSimplify,59,1359
   PCLOpFOFDeMorgan,60,1380
   PCLOpFOFDistributeQuantors,61,1401
   PCLOpFOFDistributeDisjunction,62,1432
   PCLOpFOFVarRename,63,1466
   PCLOpFOFSkolemize,64,1488
   PCLOpFOFAssumeNegation,65,1510
   PCLOpMaxOp66,1537
}PCLOpcodes;PCLOpcodes67,1551
#define PCL_OP_NOOP_WEIGHT 70,1566
#define PCL_OP_INITIAL_WEIGHT 71,1606
#define PCL_OP_QUOTE_WEIGHT 72,1646
#define PCL_OP_PARAMOD_WEIGHT 73,1686
#define PCL_OP_SIM_PARAMOD_WEIGHT 74,1726
#define PCL_OP_ERESOLUTION_WEIGHT 75,1766
#define PCL_OP_EFACTORING_WEIGHT 76,1806
#define PCL_OP_SIMPLIFYREFLECT_WEIGHT 77,1846
#define PCL_OP_CONTEXTSIMPLIFYREFLECT_WEIGHT 78,1886
#define PCL_OP_ACRESOLUTION_WEIGHT 79,1933
#define PCL_OP_REWRITE_WEIGHT 80,1973
#define PCL_OP_UREWRITE_WEIGHT 81,2013
#define PCL_OP_CLAUSENORMALIZE_WEIGHT 82,2053
#define PCL_OP_SPLITCLAUSE_WEIGHT 83,2093
typedef struct pclexprcell86,2135
}PCLExprCell, *PCLExpr_p;PCLExpr_p91,2266
#define PCL_VAR_ARG 94,2294
#define PCLExprCellAlloc(100,2541
#define PCLExprCellFree(101,2614
#define PCLExprArg(103,2688
#define PCLExprArgInt(104,2755
#define PCLExprArgPos(105,2824
#define   PCLFullExprParse(115,3170
#define   PCLMiniExprParse(116,3226
#define   PCLFullExprPrint(119,3344
#define   PCLMiniExprPrint(120,3415
#define   PCLFullExprPrintTSTP(123,3547
#define   PCLMiniExprPrintTSTP(124,3626

PCL2/pcl_idents.h,280
#define PCL_IDENTS25,541
#define NO_PCL_ID_ELEMENT 36,896
typedef PDArrayCell PCLIdCell;38,926
typedef PDArray_p   PCLId_p;39,957
#define PCLIdCellAlloc(45,1210
#define PCLIdCellFree(46,1277
#define PCLIdAlloc(48,1348
#define PCLIdFree(49,1394
#define PCLIdPrint(53,1539

PCL2/pcl_lemmas.h,753
#define PCL_LEMMAS26,543
typedef struct lemma_param_cell61,1503
}LemmaParamCell, *LemmaParam_p;LemmaParam_p71,1714
#define LEMMA_BASE_W 73,1747
#define LEMMA_ACT_PM_W 74,1776
#define LEMMA_O_GEN_W 75,1805
#define LEMMA_ACT_SIMPL_W 76,1834
#define LEMMA_PAS_SIMPL_W 77,1863
#define LEMMA_PROOF_TREE_W 78,1892
#define LEMMA_PROOF_DAG_W 79,1922
#define LEMMA_HORN_BONUS_W 81,2029
typedef long InferenceWeightType[InferenceWeightType83,2059
typedef InferenceWeightType *InferenceWeight_p;InferenceWeight_p84,2105
#define LemmaParamCellAlloc(93,2380
#define LemmaParamCellFree(94,2462
#define LemmaParamFree(96,2577
#define InferenceWeightCellAlloc(98,2632
#define InferenceWeightCellFree(100,2735
#define InferenceWeightsFree(103,2870

PCL2/pcl_miniclauses.h,197
#define PCL_MINICLAUSES27,713
typedef struct mini_clause_cell39,1112
}MiniClauseCell, *MiniClause_p;MiniClause_p45,1333
#define MiniClauseCellAlloc(54,1592
#define MiniClauseCellFree(56,1683

PCL2/pcl_miniprotocol.h,200
#define PCL_MINIPROTOCOL25,551
typedef struct pclminiprotcell33,828
}PCLMiniProtCell, *PCLMiniProt_p;PCLMiniProt_p38,953
#define PCLMiniProtCellAlloc(45,1212
#define PCLMiniProtCellFree(46,1297

PCL2/pcl_ministeps.h,198
#define PCL_MINISTEPS25,558
typedef struct pclministepcell35,886
}PCLMiniStepCell, *PCLMiniStep_p;PCLMiniStep_p47,1120
#define PCLMiniStepCellAlloc(56,1381
#define PCLMiniStepCellFree(57,1466

PCL2/pcl_positions.h,175
#define PCL_POSITIONS25,522
typedef struct pcl2poscell38,1004
}PCL2PosCell, *PCL2Pos_p;PCL2Pos_p44,1210
#define PCL2PosCellAlloc(52,1462
#define PCL2PosCellFree(53,1535

PCL2/pcl_proofcheck.h,394
#define PCL_PROOFCHECK26,572
   CheckFail,37,888
   CheckOk,38,902
   CheckByAssumption,39,914
   CheckNotImplemented40,936
}PCLCheckType;PCLCheckType41,959
   NoProver,45,990
   EProver,46,1003
   Spass,47,1015
   Setheo,48,1025
   Otter49,1036
}ProverType;ProverType50,1045
#define E_EXEC_DEFAULT 57,1283
#define OTTER_EXEC_DEFAULT 58,1320
#define SPASS_EXEC_DEFAULT 59,1355

PCL2/pcl_propanalysis.h,178
#define PCL_PROPANALYIS26,574
typedef struct pcl_propdata_cell36,882
}PCLPropDataCell, *PCLPropData_p;PCLPropData_p55,1425
typedef int (*PCLCmpFunType)PCLCmpFunType63,1685

PCL2/pcl_protocol.h,357
#define PCL_PROTOCOL25,512
typedef struct pclprotcell33,781
}PCLProtCell, *PCLProt_p;PCLProt_p40,1022
#define PCLProtCellAlloc(47,1273
#define PCLProtCellFree(48,1346
#define PCLProtInsertStep(53,1491
#define   PCLProtStepNo(62,1828
#define   PCLProtPrint(70,2129
#define   PCLStepCollectPreconds(81,2519
#define PCLProtPrintProofClauses(95,3214

PCL2/pcl_steps.h,1423
#define PCL_STEPS25,502
#define PCL_PROOF_DIST_INFINITY 33,774
#define PCL_PROOF_DIST_DEFAULT 34,832
#define PCL_PROOF_DIST_UNKNOWN 35,896
   PCLNoProp 40,972
   PCLIsLemma 41,999
   PCLIsInitial 42,1026
   PCLIsFinal 43,1053
   PCLIsMarked 44,1080
   PCLIsProofStep 45,1107
   PCLIsExample 46,1134
   PCLIsFOFStep 47,1189
   PCLType1 48,1245
   PCLType1          = CPType1,48,1245
   PCLType2 49,1287
   PCLType2          = CPType2,49,1287
   PCLType3 50,1320
   PCLType3          = CPType3,50,1320
   PCLTypeMask 51,1352
   PCLTypeMask       = CPTypeMask,51,1352
   PCLTypeUnknown 52,1387
   PCLTypeAxiom 53,1456
   PCLTypeAxiom      = CPTypeAxiom,53,1456
   PCLTypeHypothesis 54,1520
   PCLTypeHypothesis = CPTypeHypothesis,54,1520
   PCLTypeConjecture 55,1589
   PCLTypeConjecture = CPTypeConjecture,55,1589
   PCLTypeNegConjecture 57,1723
   PCLTypeNegConjecture = CPTypeNegConjecture 57,1723
}PCLStepProperties;PCLStepProperties59,1801
typedef struct pclstepcell62,1823
}PCLStepCell, *PCLStep_p;PCLStep_p93,3099
#define PCLNoWeight 95,3126
#define PCLStepCellAlloc(103,3375
#define PCLStepCellFree(104,3448
#define PCLStepSetProp(106,3523
#define PCLStepDelProp(107,3586
#define PCLStepGiveProps(108,3649
#define PCLStepQueryProp(109,3716
#define PCLStepIsAnyPropSet(110,3783
#define PCLStepIsFOF(112,3857
#define PCLStepIsClausal(113,3923
#define   PCLStepPrint(121,4255

PROPOSITIONAL/cpr_dpll.h,183
#define CPR_DPLL25,521
typedef struct dpll_state_cell35,817
}DPLLStateCell, *DPLLState_p;DPLLState_p45,1319
#define DPLLStateCellAlloc(53,1575
#define DPLLStateCellFree(54,1654

PROPOSITIONAL/cpr_dpllformula.h,338
#define CPR_DPLLFORMULA27,672
typedef struct atom_cell36,951
}AtomCell, *Atom_p;Atom_p42,1062
typedef struct dpllrep_cell44,1083
}DPLLFormulaCell, *DPLLFormula_p;DPLLFormula_p50,1195
#define DEFAULT_ATOM_NUMBER 53,1231
#define ATOM_GROWTH_FACTOR 54,1264
#define DPLLFormulaCellAlloc(61,1521
#define DPLLFormulaCellFree(62,1606

PROPOSITIONAL/cpr_propclauses.h,346
#define CPR_PROPCLAUSES26,586
   DPLLOutNoFormat,38,901
   DPLLOutLOP,39,921
   DPLLOutDimacs40,936
}DPLLOutputFormat;DPLLOutputFormat41,953
typedef struct dpll_clause_cell43,973
}DPLLClauseCell, *DPLLClause_p;DPLLClause_p49,1115
#define DPLLClauseCellAlloc(58,1374
#define DPLLClauseCellFree(59,1456
#define DPLLClauseIsUnit(61,1540

PROPOSITIONAL/cpr_propsig.h,299
#define CPR_PROPSIG27,669
typedef struct propsigcell37,970
}PropSigCell, *PropSig_p;PropSig_p41,1052
typedef long PLiteralCode;44,1080
#define PropSigCellAlloc(51,1332
#define PropSigCellFree(52,1405
#define PLiteralNoLit 53,1482
#define PAtomP(54,1506
#define   PropSigAtomNumber(63,1793

PROPOSITIONAL/cpr_varset.h,206
#define CPR_VARSET26,585
typedef struct atomset_cell34,854
}AtomSetCell, *AtomSet_p;AtomSet_p39,973
#define AtomSetCellAlloc(46,1224
#define AtomSetCellFree(47,1297
#define      AtomSetEmpty(51,1449

PROVER/e_version.h,154
#define E_VERSION25,564
#define VERSION 41,1058
#define E_NICKNAME 43,1090
#define E_URL 45,1124
#define STS_MAIL 47,1164
#define STS_SNAIL 48,1202

TERMS/cte_acterms.h,169
#define CTE_ACTERMS26,591
typedef struct actermopcell38,1008
}ACTermCell, *ACTerm_p;ACTerm_p42,1168
#define ACTermCellAlloc(49,1417
#define ACTermCellFree(50,1487

TERMS/cte_fp_index.h,306
#define CTE_FP_INDEX27,665
typedef struct fp_index_cell47,1484
}FPIndexCell, *FPIndex_p;FPIndex_p55,1759
typedef void (*FPIndexFreeFun)FPIndexFreeFun57,1786
#define FPINDEX_VAR_INIT_ALT 64,2050
#define FPINDEX_VAR_GROW_ALT 65,2081
#define FPIndexCellAlloc(68,2114
#define FPIndexCellFree(69,2187

TERMS/cte_functypes.h,268
#define CTE_FUNCTYPES26,577
   FSNone,40,991
   FSIdentVar,41,1015
   FSIdentFreeFun,42,1095
   FSIdentInt,43,1175
   FSIdentFloat,44,1212
   FSIdentInterpreted,45,1263
   FSIdentObject 46,1343
}FuncSymbType;FuncSymbType47,1423
typedef long FunCode;57,1811

TERMS/cte_idx_fp.h,143
#define CTE_IDX_FP28,750
typedef FunCode IndexFP,42,1188
typedef FunCode IndexFP, *IndexFP_p;IndexFP_p42,1188
#define   BELOW_VAR 50,1451

TERMS/cte_match_mgu_1-1.h,62
#define CTE_MATCH_MGU_1_127,635
#define VerifyMatch(46,1304

TERMS/cte_path_idx.h,223
#define CTE_IDX_FP28,734
typedef struct path_index_cell39,1028
   Term_p term;50,1227
}PathIndexTermCell;PathIndexTermCell52,1262
typedef FunCode IndexFP,60,1456
typedef FunCode IndexFP, *IndexFP_p;IndexFP_p60,1456

TERMS/cte_replace.h,152
#define CTE_REPLACE25,539
   RWNotRewritable 40,960
   RWLimitedRewritable 41,988
   RWAlwaysRewritable 42,1016
}RWResultType;RWResultType43,1044

TERMS/cte_signature.h,1708
#define CTE_SIGNATURE26,629
   FPIgnoreProps 40,1002
   FPPredSymbol 41,1069
   FPFuncSymbol 42,1142
   FPFOFOp 44,1279
   FPSpecial 45,1350
   FPAssociative 46,1431
   FPCommutative 47,1505
   FPIsAC 48,1578
   FPIsAC         =   FPAssociative|FPAssociative48,1578
   FPIsAC         =   FPAssociative|FPCommutative,FPCommutative48,1578
   FPInterpreted 49,1629
   FPIsInteger 50,1687
   FPIsFloat 51,1763
   FPIsObject 52,1817
   FPDistinctProp 54,1935
   FPDistinctProp =  FPIsObject 54,1935
   FPDistinctProp =  FPIsObject | FPIsInteger 54,1935
   FPDistinctProp =  FPIsObject | FPIsInteger | FPIsFloat,54,1935
   FPOpFlag 55,1994
   FPClSplitDef 57,2117
}FunctionProperties;FunctionProperties58,2193
typedef struct funccell65,2403
}FuncCell, *Func_p;Func_p73,2656
#define DEFAULT_SIGNATURE_SIZE 86,3161
typedef struct sigcell88,3196
}SigCell, *Sig_p;Sig_p125,4611
#define SIG_TRUE_CODE 136,4904
#define SIG_FALSE_CODE 137,4929
#define SIG_NIL_CODE 138,4954
#define SIG_CONS_CODE 139,4979
#define FuncSetProp(143,5030
#define FuncDelProp(144,5086
#define FuncQueryProp(147,5192
#define FuncIsAnyPropSet(150,5299
#define SigSetFuncProp(154,5416
#define SigDelFuncProp(156,5510
#define SigQueryFuncProp(158,5604
#define SigIsAnyFuncPropSet(160,5702
#define SigCellAlloc(166,5934
#define SigCellFree(167,5995
#define SigExternalSymbols(172,6153
#define SigInterpreteNumbers(175,6237
#define SigIsFunConst(186,6705
static __inline__ int SigFindArity(243,8986
static __inline__ char*  SigFindName(266,9562
static __inline__ FunCode SigGetEqnCode(287,10051
static __inline__ FunCode SigGetOrCode(328,10930
static __inline__ FunCode SigGetCNilCode(354,11440

TERMS/cte_simplesorts.h,321
#define CTE_SIMPLESORTS26,592
   STNoSort 40,1064
   STBool,41,1087
   STIndividuals,43,1190
   STInteger,44,1245
   STReal 45,1288
}SortType;SortType46,1321
typedef struct sort_table52,1463
}SortTableCell, *SortTable_p;SortTable_p62,1976
#define SortTableCellAlloc(70,2232
#define SortTableCellFree(71,2314

TERMS/cte_simpletypes.h,31
#define CTE_SIMPLETYPES24,486

TERMS/cte_subst.h,248
#define CTE_SUBST28,693
typedef PStackCell SubstCell;38,1012
typedef PStack_p   Subst_p;39,1042
#define SubstAlloc(45,1294
#define SubstFree(46,1332
#define SubstDelete(48,1374
#define SubstDeleteSkolem(49,1437
#define SubstIsEmpty(50,1512

TERMS/cte_termbanks.h,592
#define CTE_TERMBANKS37,1151
typedef struct tbcell47,1484
}TBCell, *TB_p;TB_p83,3253
#define TBCellAlloc(95,3590
#define TBCellFree(96,3648
#define TBNonVarTermNodes(102,3801
#define TBStorage(103,3873
#define TBCellIdent(107,4004
#define TermIsTrueTerm(110,4121
#define TBTermIsSubterm(113,4241
#define TBTermIsTypeTerm(116,4342
#define TBTermIsXTypeTerm(118,4434
#define TBTermIsGround(120,4558
#define TBPrintTermFull(138,5271
#define  TBTermParse(144,5566
#define  TBRawTermParse(145,5632
#define TBTermCellIsMarked(152,5901
static __inline__ bool TBTermEqual(180,6857

TERMS/cte_termcellstore.h,370
#define CTE_TERMCELLSTORE32,872
#define TERM_STORE_HASH_SIZE 40,1150
#define TERM_STORE_HASH_MASK 41,1188
typedef struct termcellstore43,1243
}TermCellStoreCell, *TermCellStore_p;TermCellStore_p48,1353
#define tcs_arity0hash(55,1616
#define tcs_arity1hash(56,1662
#define tcs_aritynhash(57,1746
#define TermCellHash(59,1831
#define TermCellStoreNodes(78,2535

TERMS/cte_termcpos.h,93
#define CTE_TERMCPOS27,674
typedef long TermCPos;36,946
#define  TermCPosIsTopPos(43,1194

TERMS/cte_termfunc.h,289
#define CTE_TERMFUNC25,598
#define TermStartToken 45,1185
#define TermIsStructSubterm(82,2789
#define TermStandardWeight(86,2961
#define TermIsGround(105,3612
#define TermHasUnboundVariables(106,3674
#define TermAddSymbolDistribution(112,3855
#define TermCollectVariables(123,4370

TERMS/cte_termpos.h,346
#define CTE_TERMPOS25,566
typedef PStackCell TermPosCell;57,1621
typedef PStack_p   TermPos_p;58,1653
#define TERM_POS_ELEMENT_SIZE 62,1754
#define TermPosAlloc(69,2011
#define TermPosFree(70,2051
#define TermPosIsTopPos(72,2095
static __inline__ Term_p TermPosGetSubterm(98,2977
static __inline__ Term_p TermPosFirstLIPosition(133,3695

TERMS/cte_termtrees.h,68
#define CTE_TERMTREES35,1029
#define TermTreeTraverseExit(61,2003

TERMS/cte_termtypes.h,2339
#define CTE_TERMTYPES29,776
#define DEFAULT_VWEIGHT 43,1164
#define DEFAULT_FWEIGHT 44,1229
   TPIgnoreProps 50,1374
   TPRestricted 51,1439
   TPTopPos 52,1514
   TPIsGround 53,1579
   TPPredPos 54,1639
   TPIsRewritable 56,1771
   TPIsRRewritable 62,2193
   TPIsSOSRewritten 65,2389
   TPSpecialFlag 67,2519
   TPOpFlag 68,2600
   TPCheckFlag 69,2655
   TPOutputFlag 70,2710
   TPIsSpecialVar 72,2838
   TPIsRewritten 74,2982
   TPIsRRewritten 76,3111
   TPIsShared 80,3356
   TPGarbageFlag 81,3417
   TPIsFreeVar 82,3492
   TPPotentialParamod 83,3548
   TPPosPolarity 85,3672
   TPNegPolarity 87,3816
}TermProperties;TermProperties89,3960
   NoRewrite 95,4037
   RuleRewrite 96,4086
   FullRewrite 97,4138
}RewriteLevel;RewriteLevel98,4199
}RewriteState;RewriteState111,4740
typedef struct termcell114,4757
}TermCell, *Term_p, **TermRef;TermRef137,6088
typedef long DerefType,140,6121
typedef long DerefType, *DerefType_p;DerefType_p140,6121
#define DEREF_ALWAYS 142,6160
#define DEREF_NEVER 143,6184
#define DEREF_ONCE 144,6208
#define TERMCELL_MEM 151,6404
#define TERMARG_MEM 152,6428
#define TERMP_MEM 153,6451
#define TERMCELL_MEM 155,6480
#define TERMARG_MEM 156,6519
#define TERMP_MEM 157,6554
#define TERMCELL_DYN_MEM 160,6598
typedef bool (*TermEqualTestFun)TermEqualTestFun170,6963
#define TERMS_INITIAL_ARGS 172,7020
#define RewriteAdr(174,7051
#define TermIsVar(175,7103
#define TermIsConst(176,7142
#define TermCellSetProp(178,7200
#define TermCellDelProp(179,7260
#define TermCellAssignProp(180,7320
#define TermCellQueryProp(182,7444
#define TermCellIsAnyPropSet(185,7555
#define TermCellGiveProps(187,7626
#define TermCellFlipProp(188,7691
#define TermCellAlloc(190,7755
#define TermCellFree(191,7819
#define TermArgArrayAlloc(192,7887
#define TermArgArrayFree(193,7966
#define TermIsRewritten(195,8045
#define TermIsRRewritten(196,8116
#define TermIsTopRewritten(197,8189
#define TermIsShared(198,8270
#define TermNFDate(200,8342
#define TermRWReplaceField(204,8535
#define TermRWDemodField(205,8602
#define REWRITE_AT_SUBTERM 206,8670
#define TermRWReplace(209,8763
#define TermRWDemod(210,8844
static __inline__ Term_p TermDeref(256,10583
static __inline__ Term_p* TermArgListCopy(295,11322
static __inline__ Term_p TermTopCopy(340,12528

TERMS/cte_termvars.h,413
#define CTE_TERMVARS25,596
typedef struct varbankcell43,1389
}VarBankCell, *VarBank_p;VarBank_p49,1672
#define DEFAULT_VARBANK_SIZE 58,1925
#define FRESH_VAR_LIMIT 63,2141
#define VarBankCellAlloc(65,2177
#define VarBankCellFree(66,2250
#define VarBankGetVCount(80,2919
#define VarBankSetVCount(81,2968
#define VarBankResetVCount(82,3033
#define VarIsFreshVar(83,3088
#define VarFCodeIsFresh(84,3151

TERMS/cte_varhash.h,583
#define CTE_VARHASH28,710
#define VAR_HASH_SIZE 43,1209
#define VAR_HASH_MASK 44,1244
typedef struct var_hash_entry_cell46,1287
}VarHashEntryCell, *VarHashEntry_p;VarHashEntry_p51,1431
typedef struct var_hash_cell53,1468
}VarHashCell, *VarHash_p;VarHash_p56,1538
#define VarHashEntryCellAlloc(66,1792
#define VarHashEntryCellFree(68,1888
#define VarHashCellAlloc(74,2108
#define VarHashCellFree(76,2189
static __inline__ VarHashEntry_p VarHashEntryAlloc(111,3340
static __inline__ VarHash_p VarHashAlloc(136,3873
static __inline__ VarHashEntry_p VarHashFind(162,4390

include/can_clausestats.h,200
#define CAN_CLAUSESTATS26,557
typedef struct clausestatscell37,863
}ClauseStatsCell, *ClauseStats_p;ClauseStats_p45,1037
#define ClauseStatsCellAlloc(53,1297
#define ClauseStatsCellFree(55,1391

include/can_clausestore.h,200
#define CAN_CLAUSESTORE26,593
typedef struct compact_clause_cell40,1046
}CompClauseCell, *CompClause_p;CompClause_p52,1540
#define CompClauseCellAlloc(61,1799
#define CompClauseCellFree(63,1890

include/can_infstate.h,28
#define CAN_INFSTATE25,562

include/can_treeanalyze.h,104
#define CAN_TREEANALYZE25,565
#define PROOF_DIST_INFINITY 41,1067
#define PROOF_DIST_DEFAULT 42,1121

include/ccl_axiomsorter.h,267
#define CCL_AXIOMSORTER26,620
   NoAxiom,37,913
   ClauseAxiom,38,925
   FormulaAxiom39,941
}AxiomType;AxiomType40,957
typedef struct w_axiom_cell45,1027
}WAxiomCell, *WAxiom_p;WAxiom_p54,1167
#define WAxiomCellAlloc(61,1416
#define WAxiomCellFree(62,1489

include/ccl_clausecpos.h,58
#define CLAUSECPOS26,588
typedef long CompactPos;35,860

include/ccl_clausefunc.h,30
#define CCL_CLAUSEFUNC26,642

include/ccl_clauseinfo.h,324
#define CCL_CLAUSEINFO29,788
typedef struct clause_info_cell39,1087
}ClauseInfoCell, *ClauseInfo_p;ClauseInfo_p45,1241
#define ClauseInfoCellAlloc(53,1499
#define ClauseInfoCellFree(54,1584
#define      ClauseInfoAllocEmpty(57,1737
#define ClauseSourceInfoPrintTSTP(61,1988
#define ClauseSourceInfoPrintPCL(64,2094

include/ccl_clausepos.h,516
#define CLAUSEPOS25,548
typedef struct clauseposcell37,844
}ClausePosCell, *ClausePos_p;ClausePos_p43,955
#define ClausePosCellAlloc(52,1212
#define ClausePosCellFree(53,1291
#define CLAUSEPOSCELL_MEM 56,1399
#define CLAUSEPOSCELL_MEM 58,1434
static __inline__ ClausePos_p ClausePosAlloc(93,2791
static __inline__ void ClausePosFree(117,3291
static __inline__ Term_p ClausePosGetSide(139,3746
static __inline__ Term_p ClausePosGetOtherSide(162,4277
static __inline__ Term_p ClausePosGetSubterm(186,4779

include/ccl_clauses.h,5401
#define CCL_CLAUSES27,612
   CPIgnoreProps 40,979
   CPInitial 42,1100
   CPInputClause 43,1163
   CPInputClause       = 2*CPInitial,CPInitial43,1163
   CPIsProcessed 45,1295
   CPIsProcessed       = 2*CPInputClause,CPInputClause45,1295
   CPIsOriented 47,1426
   CPIsOriented        = 2*CPIsProcessed,CPIsProcessed47,1426
   CPIsDIndexed 50,1581
   CPIsDIndexed        = 2*CPIsOriented,CPIsOriented50,1581
   CPIsSIndexed 52,1715
   CPIsSIndexed        = 2*CPIsDIndexed,CPIsDIndexed52,1715
   CPIsTIndexed 54,1845
   CPIsTIndexed        = 2*CPIsSIndexed,CPIsSIndexed54,1845
   CPIsOIndexed 56,1970
   CPIsOIndexed        = 2*CPIsTIndexed,CPIsTIndexed56,1970
   CPDeleteClause 58,2098
   CPDeleteClause      = 2*CPIsOIndexed,CPIsOIndexed58,2098
   CPType1 60,2233
   CPType1             = 2*CPDeleteClause,CPDeleteClause60,2233
   CPType2 64,2508
   CPType2             = 2*CPType1,CPType164,2508
   CPType3 65,2552
   CPType3             = 2*CPType2,CPType265,2552
   CPTypeMask 66,2595
   CPTypeMask          = CPType1|CPType166,2595
   CPTypeMask          = CPType1|CPType2|CPType266,2595
   CPTypeMask          = CPType1|CPType2|CPType3,CPType366,2595
   CPTypeUnknown 67,2645
   CPTypeAxiom 68,2715
   CPTypeAxiom         = CPType1,68,2715
   CPTypeHypothesis 69,2779
   CPTypeHypothesis    = CPType2,69,2779
   CPTypeConjecture 70,2848
   CPTypeConjecture    = CPType1|CPType170,2848
   CPTypeConjecture    = CPType1|CPType2,CPType270,2848
   CPTypeLemma 71,2917
   CPTypeLemma         = CPType3,71,2917
   CPTypeNegConjecture 72,2981
   CPTypeNegConjecture = CPType1|CPType172,2981
   CPTypeNegConjecture = CPType1|CPType3,CPType372,2981
   CPTypeWatchClause 75,3173
   CPTypeWatchClause   = CPType1|CPType175,3173
   CPTypeWatchClause   = CPType1|CPType2|CPType275,3173
   CPTypeWatchClause   = CPType1|CPType2|CPType3,CPType375,3173
   CPIsIRVictim 78,3358
   CPIsIRVictim        = 2*CPType3,CPType378,3358
   CPOpFlag 81,3547
   CPOpFlag            = 2*CPIsIRVictim,CPIsIRVictim81,3547
   CPIsSelected 82,3612
   CPIsSelected        = 2*CPOpFlag,CPOpFlag82,3612
   CPIsFinal 84,3744
   CPIsFinal           = 2*CPIsSelected,CPIsSelected84,3744
   CPIsProofClause 88,4013
   CPIsProofClause  = 2*CPIsFinal,CPIsFinal88,4013
   CPIsSOS 90,4144
   CPIsSOS          = 2*CPIsProofClause,CPIsProofClause90,4144
   CPNoGeneration 91,4224
   CPNoGeneration   = 2*CPIsSOS,CPIsSOS91,4224
   CP_CSSCPA_1 94,4418
   CP_CSSCPA_1      = 2*CPNoGeneration,CPNoGeneration94,4418
   CP_CSSCPA_2 95,4488
   CP_CSSCPA_2      = 2*CP_CSSCPA_1,CP_CSSCPA_195,4488
   CP_CSSCPA_4 96,4526
   CP_CSSCPA_4      = 2*CP_CSSCPA_2,CP_CSSCPA_296,4526
   CP_CSSCPA_8 97,4564
   CP_CSSCPA_8      = 2*CP_CSSCPA_4,CP_CSSCPA_497,4564
   CP_CSSCPA_Mask 98,4601
   CP_CSSCPA_Mask   = CP_CSSCPA_1|CP_CSSCPA_198,4601
   CP_CSSCPA_Mask   = CP_CSSCPA_1|CP_CSSCPA_2|CP_CSSCPA_298,4601
   CP_CSSCPA_Mask   = CP_CSSCPA_1|CP_CSSCPA_2|CP_CSSCPA_4|CP_CSSCPA_498,4601
   CP_CSSCPA_Mask   = CP_CSSCPA_1|CP_CSSCPA_2|CP_CSSCPA_4|CP_CSSCPA_8,CP_CSSCPA_898,4601
   CP_CSSCPA_Unkown 99,4672
   CPIsProtected 100,4697
   CPIsProtected    = 2*CP_CSSCPA_8,CP_CSSCPA_8100,4697
   CPWatchOnly 105,5019
   CPWatchOnly      = 2*CPIsProtected,CPIsProtected105,5019
   CPSubsumesWatch 106,5058
   CPSubsumesWatch  = 2*CPWatchOnly,CPWatchOnly106,5058
   CPLimitedRW 107,5095
   CPLimitedRW      = 2*CPSubsumesWatch CPSubsumesWatch107,5095
}ClauseProperties;ClauseProperties111,5353
typedef struct clause_cell114,5374
}ClauseCell, *Clause_p;Clause_p148,7054
#define ClauseSetProp(159,7417
#define ClauseDelProp(160,7479
#define ClauseGiveProps(161,7541
#define ClauseQueryProp(164,7658
#define ClauseIsAnyPropSet(167,7773
#define ClauseQueryTPTPType(173,7947
#define TPTPTypesCombine(176,8023
#define ClauseSetCSSCPASource(180,8159
#define ClauseQueryCSSCPASource(183,8303
#define ClauseCellAlloc(186,8405
#define ClauseCellFree(187,8478
#define CLAUSECELL_MEM 190,8572
#define CLAUSECELL_MEM 192,8604
#define  ClauseGCMarkTerms(199,8763
#define  ClauseLiteralNumber(201,8838
#define  ClausePropLitNumber(204,8930
#define  ClauseIsEmpty(207,9034
#define  ClauseIsGoal(209,9099
#define  ClauseIsHorn(210,9155
#define  ClauseIsUnit(211,9213
#define  ClauseIsDemodulator(212,9276
#define  ClauseIsRWRule(215,9395
#define  ClauseIsGround(217,9505
#define  ClauseIsPositive(218,9571
#define  ClauseIsNegative(219,9633
#define  ClauseIsMixed(220,9695
#define  ClauseIsConjecture(222,9792
#define  ClauseFindNegPureVarLit(226,9955
#define  ClauseIsTrivial(228,10052
#define  ClauseSubsumeOrderSortLits(236,10302
#define  ClauseIsSubsumeOrdered(240,10550
#define  ClauseToStack(246,10818
#define  ClauseIsEquational(250,10933
#define  ClauseIsPureEquational(252,11019
#define  ClauseTermSetProp(255,11114
#define  ClauseTBTermDelPropCount(257,11213
#define  ClauseTermDelProp(259,11326
#define  ClauseIsSOS(262,11426
#define  ClauseCondMarkMaximalTerms(296,13047
#define  ClauseOrientLiterals(300,13198
#define  ClauseMarkMaximalLiterals(302,13293
#define  ClauseDeleteTermProperties(305,13403
#define  ClauseDepth(347,14990
#define  NormSubstClause(354,15203
#define  ClauseAddSymbolDistribution(360,15401
#define  ClauseComputeFunctionRanks(362,15531
#define  ClauseCollectVariables(364,15675

include/ccl_clausesets.h,380
#define CCL_CLAUSESETS27,632
typedef struct clausesetcell43,1151
}ClauseSetCell, *ClauseSet_p;ClauseSet_p56,1698
#define CLAUSECELL_DYN_MEM 64,1954
#define ClauseSetCellAlloc(66,2016
#define ClauseSetCellFree(67,2098
#define     ClauseSetStorage(69,2169
#define     ClauseSetCardinality(85,3009
#define     ClauseSetEmpty(86,3064
#define     ClauseSetDocQuote(134,5393

include/ccl_clausetrees.h,36
#define CCL_CLAUSESETFILTERS26,597

include/ccl_context_sr.h,30
#define CCL_CONTEXT_SR30,715

include/ccl_def_handling.h,185
#define CCL_DEF_HANDLING27,703
typedef struct def_store_cell36,983
}DefStoreCell, *DefStore_p;DefStore_p41,1225
#define DefStoreCellAlloc(50,1480
#define DefStoreCellFree(51,1559

include/ccl_eqn.h,2737
#define CCL_EQN26,559
   EPNoProps 41,926
   EPIsPositive 42,994
   EPIsMaximal 43,1057
   EPIsStrictlyMaximal 44,1122
   EPIsEquLiteral 45,1184
   EPIsOriented 46,1239
   EPMaxIsUpToDate 47,1292
   EPHasEquiv 48,1363
   EPIsDominated 51,1495
   EPDominates 52,1569
   EPDominates         =   EPIsDominated,52,1569
   EPIsUsed 55,1709
   EPGONatural 57,1807
   EPIsSelected 61,1970
   EPIsPMIntoLit 62,2035
   EPLPatMinimal 63,2098
   EPRPatMinimal 64,2163
   EPIsSplitLit 65,2228
   EPFromClauseLit 67,2319
}EqnProperties;EqnProperties69,2442
typedef struct eqncell76,2628
}EqnCell, *Eqn_p, **EqnRef;EqnRef84,2915
   NoSide 89,2960
   LeftSide 90,2975
   MaxSide 91,2992
   RightSide 92,3008
   MinSide 93,3026
   BothSides 94,3042
}EqnSide;EqnSide95,3059
   PENormal 102,3123
   PEReverse 103,3141
}PatEqnDirection;PatEqnDirection104,3157
#define EQUAL_PREDICATE 109,3228
#define EQN_CELL_MEM 112,3290
#define EQN_CELL_MEM 114,3320
#define EqnCellAlloc(129,3819
#define EqnCellFree(130,3883
#define EqnGCMarkTerms(135,4044
#define EqnSetProp(138,4181
#define EqnDelProp(139,4235
#define EqnFlipProp(140,4289
#define EqnQueryProp(143,4392
#define EqnIsAnyPropSet(146,4495
#define EqnIsOriented(148,4559
#define EqnIsPositive(149,4618
#define EqnIsNegative(150,4677
#define EqnIsEquLit(151,4741
#define EqnIsMaximal(152,4802
#define EqnIsStrictlyMaximal(153,4860
#define EqnGetPredCode(156,4957
#define EqnIsSplitLit(157,5024
#define EqnHasEquiv(161,5154
#define EqnIsDominated(162,5210
#define EqnDominates(163,5272
#define EqnIsSelected(164,5330
#define EqnIsPropTrue(166,5390
#define EqnIsPropFalse(167,5469
#define EqnIsGround(169,5549
#define EqnIsPureVar(171,5644
#define EqnIsPartVar(173,5730
#define EqnIsPropositional(175,5816
#define EqnIsTypePred(177,5906
#define EqnIsXTypePred(179,5994
#define EqnIsRealXTypePred(181,6084
#define EqnTermSetProp(184,6176
#define EqnTBTermDelPropCount(187,6335
#define EqnTermDelProp(190,6479
#define EqnTBTermEncode(198,6829
#define EqnPrintOriginal(204,7138
#define EqnSkolemSubst(215,7574
#define EqnIsTrivial(221,7806
#define EqnWeightCompare(234,8130
#define LiteralEqual(246,8836
#define EqnEquiv(260,9359
#define LiteralEquiv(264,9495
#define EqnStandardWeight(283,10228
#define EqnSplitModStandardWeight(287,10350
#define EqnStandardDiff(304,10980
#define EqnCountMaximalLiterals(339,12253
#define EqnAddSymbolDistribution(345,12413
#define EqnAddSymbolDistributionLimited(348,12583
#define EqnAddSymbolFeaturesLimited(351,12799
#define EqnComputeFunctionRanks(356,13135
#define EqnCollectVariables(360,13335
#define EqnCollectPropVariables(364,13474
static __inline__ long EqnDepth(388,14203

include/ccl_eqnlist.h,171
#define CCL_EQNLIST26,583
#define EqnListExtractFirst(55,1558
#define EqnListDeleteFirst(60,1762
#define EqnListInsertFirst(63,1888
#define NormSubstEqnList(100,3513

include/ccl_eqnresolution.h,33
#define CCL_EQNRESOLUTION25,562

include/ccl_factor.h,26
#define CCL_FACTOR25,530

include/ccl_fcvindexing.h,734
#define CCL_FCVINDEXING28,663
#define FVINDEX_MAX_FEATURES_DEFAULT 37,965
#define FVINDEX_SYMBOL_SLACK_DEFAULT 38,1045
typedef struct fvindex_parms_cell40,1123
}FVIndexParmsCell, *FVIndexParms_p;FVIndexParms_p47,1286
typedef struct fv_index_cell51,1325
}FVIndexCell, *FVIndex_p;FVIndex_p60,1474
typedef struct fvi_anchor_cell62,1501
}FVIAnchorCell, *FVIAnchor_p;FVIAnchor_p69,1667
#define FVIndexParmsCellAlloc(78,1969
#define FVIndexParmsCellFree(79,2057
#define FVIndexParmsFree(83,2229
#define FVIndexCellAlloc(85,2288
#define FVIndexCellFree(86,2364
#define FVIAnchorCellAlloc(91,2501
#define FVIAnchorCellFree(92,2583
#define FVINDEX_MEM 98,2817
#define FVINDEX_MEM 100,2846
#define FVIndexStorage(103,2895

include/ccl_findex.h,166
#define CCL_FINDEX25,568
typedef struct findex_cell35,864
}FIndexCell, *FIndex_p;FIndex_p39,1029
#define FIndexCellAlloc(49,1281
#define FIndexCellFree(50,1354

include/ccl_formula_wrapper.h,1273
#define CCL_FORMULA_WRAPPER27,698
   WPIgnoreProps 37,993
   WPInitial 38,1061
   WPInputFormula 39,1116
   WPInputFormula      = CPInputClause,39,1116
   WPType1 40,1193
   WPType1          = CPType1,40,1193
   WPType2 41,1234
   WPType2          = CPType2,41,1234
   WPType3 42,1266
   WPType3          = CPType3,42,1266
   WPTypeMask 43,1297
   WPTypeMask       = CPTypeMask,43,1297
   WPTypeUnknown 44,1331
   WPTypeAxiom 45,1399
   WPTypeAxiom      = CPTypeAxiom,45,1399
   WPTypeHypothesis 46,1462
   WPTypeHypothesis = CPTypeHypothesis,46,1462
   WPTypeConjecture 47,1530
   WPTypeConjecture = CPTypeConjecture,47,1530
   WPTypeLemma 48,1598
   WPTypeLemma      = CPTypeLemma,48,1598
   WPTypeNegConjecture 49,1661
   WPTypeNegConjecture = CPTypeNegConjecture 49,1661
}WFormulaProperties;WFormulaProperties50,1737
typedef struct wformula_cell53,1760
}WFormulaCell, *WFormula_p;WFormula_p63,2155
#define FormulaSetProp(75,2505
#define FormulaDelProp(76,2564
#define FormulaGiveProps(77,2623
#define FormulaQueryProp(80,2735
#define FormulaIsAnyPropSet(82,2844
#define FormulaSetType(83,2913
#define FormulaQueryType(86,3025
#define  FormulaIsConjecture(88,3089
#define WFormulaCellAlloc(92,3233
#define WFormulaCellFree(93,3312

include/ccl_formulafunc.h,66
#define CCL_FORMULAFUNC26,570
#define TFORMULA_GC_LIMIT 41,1096

include/ccl_formulasets.h,277
#define CCL_FORMULASETS25,580
typedef struct formula_set_cell34,885
}FormulaSetCell, *FormulaSet_p;FormulaSet_p38,964
#define FormulaSetCellAlloc(46,1222
#define FormulaSetCellFree(47,1307
#define      FormulaSetCardinality(57,1817
#define      FormulaSetEmpty(58,1874

include/ccl_freqvectors.h,919
#define CCL_FREQVECTORS26,602
typedef FixedDArray_p PermVector_p;37,931
typedef struct tuple3_cell39,968
}Tuple3Cell;Tuple3Cell44,1039
typedef struct freq_vector_cell46,1053
}FreqVectorCell, *FreqVector_p, *FVPackedClause_p;FVPackedClause_p51,1203
#define FV_CLAUSE_FEATURES 53,1255
   FVINoFeatures,57,1300
   FVIACFeatures,58,1318
   FVISSFeatures,59,1336
   FVIAllFeatures60,1354
}FVIndexType;FVIndexType61,1372
#define PermVectorAlloc(68,1611
#define PermVectorFree(69,1664
#define PermVectorCopy(70,1716
#define PermVectorPrint(71,1767
#define FreqVectorCellAlloc(79,2010
#define FreqVectorCellFree(80,2095
#define FVACCompatSize(83,2169
#define FVSSCompatSize(84,2233
#define FVFullSize(85,2278
#define FVSize(86,2342
#define FreqVectorFree(94,2643
#define FreqVectorFree(96,2713
#define FVPackedClauseFree(118,3525
#define FVPackedClauseFree(120,3603
#define FreqVectorSub(127,3850

include/ccl_g_lithash.h,322
#define CCL_G_LITHASH27,656
typedef struct lit_desc_cell35,931
}LitDescCell,*LitDesc_p;LitDesc_p44,1310
typedef struct lit_hash_cell50,1545
}LitHashCell,*LitHash_p;LitHash_p56,1778
#define LitDescCellAlloc(63,2028
#define LitDescCellFree(64,2104
#define LitHashCellAlloc(68,2228
#define LitHashCellFree(69,2304

include/ccl_garbage_coll.h,179
#define CCL_GARBAGE_COLL27,660
typedef struct gc_admin_cell39,970
}GCAdminCell, *GCAdmin_p;GCAdmin_p44,1067
#define GCAdminCellAlloc(51,1318
#define GCAdminCellFree(52,1394

include/ccl_groundconstr.h,346
#define CCL_GROUNDCONSTR26,575
typedef struct lit_constr_cell35,854
}LitConstrCell;LitConstrCell39,935
typedef struct lit_occ_table41,952
}LitOccTableCell, *LitOccTable_p;LitOccTable_p46,1063
#define LitOccTableCellAlloc(55,1324
#define LitOccTableCellFree(56,1412
#define LIT_OCC_TABLE_REF(58,1487
#define LIT_OCC_TABLE_ENTRY(61,1603

include/ccl_grounding.h,961
#define CCL_GROUNDING26,614
typedef struct var_inst39,1042
}VarInstCell, *VarInst_p;VarInst_p44,1153
typedef struct varset_inst48,1219
}VarSetInstCell, *VarSetInst_p;VarSetInst_p52,1282
   GCUNone 61,1487
   GCUPos 62,1503
   GCUNeg 63,1519
   GCUBoth 64,1535
   GCUBoth = GCUPos|GCUPos64,1535
   GCUBoth = GCUPos|GCUNegGCUNeg64,1535
}GCUEncoding;GCUEncoding65,1562
#define DEFAULT_LIT_NO 67,1577
#define DEFAULT_LIT_GROW 68,1607
   cpl_complete,72,1654
   cpl_lowmem,73,1671
   cpl_timeout,74,1686
   cpl_unknown75,1702
GroundSetState;77,1719
typedef struct ground_set_cell79,1736
}GroundSetCell, *GroundSet_p;GroundSet_p89,2169
#define VarSetInstCellAlloc(95,2423
#define VarSetInstCellFree(96,2508
#define EqnLitCode(112,3041
#define GroundSetCellAlloc(114,3089
#define GroundSetCellFree(115,3171
#define     GroundSetMembers(123,3518
#define     GroundSetDimacsPrintMembers(127,3731
#define     GroundSetLiterals(129,3845

include/ccl_inferencedoc.h,1930
#define CCL_INFERENCEDOC25,611
   inf_noinf,37,938
   inf_initial,38,952
   inf_quote,39,968
   inf_paramod,40,982
   inf_sim_paramod,41,998
   inf_efactor,42,1018
   inf_factor,43,1034
   inf_eres,44,1049
   inf_split,45,1062
   inf_simplify_reflect,46,1076
   inf_context_simplify_reflect,47,1101
   inf_ac_resolution,48,1134
   inf_minimize,49,1156
   inf_rewrite,50,1173
   inf_fof_simpl,52,1193
   inf_fof_nnf,53,1211
   inf_fof_intro_def,54,1227
   inf_fof_apply_def,55,1249
   inf_shift_quantors,56,1271
   inf_fof_distrib,57,1294
   inf_var_rename,58,1314
   inf_skolemize_out,59,1333
   inf_neg_conjecture60,1355
}InfType;InfType61,1377
   no_format,65,1406
   lop_format,66,1420
   pcl_format,67,1435
   tstp_format,68,1450
   tptp_format,69,1466
   xml_format70,1482
}OutputFormatType;OutputFormatType71,1496
#define PCL_QUOTE 74,1518
#define PCL_ER 75,1541
#define PCL_PM 76,1564
#define PCL_SPM 77,1587
#define PCL_EF 78,1612
#define PCL_OF 79,1635
#define PCL_SPLIT 80,1658
#define TSTP_SPLIT_REFINED 81,1684
#define TSTP_SPLIT_BASE 82,1720
#define PCL_RW 83,1755
#define PCL_SR 84,1778
#define PCL_CSR 85,1801
#define PCL_ACRES 86,1825
#define PCL_CN 87,1848
#define PCL_SC 89,1872
#define PCL_SE 90,1907
#define PCL_FS 91,1939
#define PCL_NNF 92,1978
#define PCL_ID 93,2006
#define PCL_AD 94,2037
#define PCL_SQ 95,2067
#define PCL_VR 96,2102
#define PCL_SK 97,2138
#define PCL_DSTR 98,2168
#define PCL_NC 99,2199
#define DocClauseCreationDefault(112,2720
#define DocClauseModificationDefault(121,3137
#define DocClauseQuoteDefault(129,3437
#define DocClauseRewriteDefault(136,3709
#define DocFormulaCreationDefault(147,4160
#define DocFormulaModificationDefault(154,4466
#define DocFormulaIntroDefsDefault(159,4723
#define DocIntroSplitDefDefault(165,4977
#define DocIntroSplitDefRestDefault(170,5236
#define DocClauseApplyDefsDefault(176,5543

include/ccl_neweval.h,661
#define CCL_NEWEVAL30,744
typedef long EvalPriority;40,1066
#define PrioBest 42,1094
#define PrioPrefer 43,1117
#define PrioNormal 44,1140
#define PrioDefer 45,1163
#define PrioLargestReasonable 46,1186
typedef struct simple_eval_cell49,1223
}SimpleEvalCell, *SimpleEval_p;SimpleEval_p55,1480
typedef struct eval_cell57,1513
}EvalCell, *Eval_p;Eval_p64,1788
#define EvalsFree(71,2033
#define EvalTreeFindSmallestWrap(72,2074
#define EvalTreePrintInOrderWrap(73,2154
#define EVAL_SIZE(81,2498
#define EvalCellAlloc(82,2579
#define EvalCellFree(83,2654
#define EVAL_MEM(86,2755
#define EVAL_MEM(88,2806
#define EvalTreeTraverseExit(113,3763

include/ccl_paramod.h,228
#define CCL_PARAMOD26,577
   ParamodPlain,37,891
   ParamodAlwaysSim,38,957
   ParamodOrientedSim,39,1027
   ParamodDecreasingSim,42,1181
   ParamodSizeDecreasingSim 44,1299
}ParamodulationType;ParamodulationType46,1411

include/ccl_pdtrees.h,802
#define CCL_PDTREES30,787
typedef struct pdt_node_cell43,1166
}PDTNodeCell, *PDTNode_p;PDTNode_p79,2622
typedef struct pd_tree_cell84,2766
}PDTreeCell, *PDTree_p;PDTree_p102,3646
#define PDNODE_FUN_INIT_ALT 108,3894
#define PDNODE_FUN_GROW_ALT 109,3924
#define PDNODE_VAR_INIT_ALT 110,3954
#define PDNODE_VAR_GROW_ALT 111,3984
#define  PDTREE_IGNORE_TERM_WEIGHT 113,4015
#define  PDTREE_IGNORE_NF_DATE 114,4059
#define  PDT_NODE_INIT_VAL(115,4116
#define  PDT_NODE_CLOSED(116,4176
#define   PDTreeCellAlloc(119,4320
#define   PDTreeCellFree(120,4395
#define PDTREE_CELL_MEM 123,4491
#define PDTREE_CELL_MEM 125,4524
#define PDTNODE_MEM 132,4672
#define PDTNODE_MEM 134,4701
#define   PDTreeStorage(137,4750
#define   PDTNodeCellAlloc(147,4994
#define   PDTNodeCellFree(148,5072

include/ccl_proofstate.h,320
#define CTO_PROOFSTATE29,729
typedef struct proofstatecell40,1062
}ProofStateCell, *ProofState_p;ProofState_p81,2679
#define ProofStateCellAlloc(89,2937
#define ProofStateCellFree(91,3024
#define      ProofStateStorage(103,3589
#define WATCHLIST_INLINE_STRING 117,4158
#define WATCHLIST_INLINE_QSTRING 118,4218

include/ccl_propclauses.h,455
#define CCL_PROPCLAUSES27,670
typedef struct proplitcell36,945
}PropLitCell, *PropLit_p;PropLit_p40,1025
typedef struct propclausecell43,1053
}PropClauseCell, *PropClause_p;PropClause_p48,1204
typedef struct propclausesetcell50,1237
}PropClauseSetCell, *PropClauseSet_p;PropClauseSet_p60,1610
#define PropClauseCellAlloc(70,1876
#define PropClauseCellFree(71,1961
#define PropClauseSetCellAlloc(80,2279
#define PropClauseSetCellFree(81,2373

include/ccl_relevance.h,188
#define CCL_RELEVANCE26,603
typedef struct relevance_cell39,1041
}RelevanceCell, *Relevance_p;Relevance_p56,1377
#define RelevanceCellAlloc(64,1633
#define RelevanceCellFree(65,1715

include/ccl_rewrite.h,168
#define CCL_REWRITE25,555
typedef struct rw_desc_cell38,954
}RWDescCell, *RWDesc_p;RWDesc_p47,1186
#define RWDescCellAlloc(57,1438
#define RWDescCellFree(58,1511

include/ccl_simparamod.h,30
#define CCL_SIMPARAMOD26,617

include/ccl_splitting.h,504
#define CCL_SPLITTING26,634
   SplitGroundNone 33,705
   SplitGroundOne 35,786
   SplitGroundFull 37,896
}SplitType;SplitType38,963
   SplitNone 48,1222
   SplitHorn 49,1247
   SplitNonHorn 50,1272
   SplitNegative 51,1297
   SplitPositive 52,1322
   SplitMixed 53,1347
   SplitAll 54,1373
}SplitClassType;SplitClassType55,1397
#define QuerySplitClass(57,1415
#define SetSplitClass(58,1465
typedef struct lit_split_desc66,1747
}LitSplitDescCell, *LitSplitDesc_p;LitSplitDesc_p73,1990

include/ccl_subsumption.h,30
#define CCL_SUBSUPTION26,626

include/ccl_subterm_index.h,33
#define CCL_SUBTERM_INDEX27,655

include/ccl_tautologies.h,31
#define CCL_TAUTOLOGIES27,672

include/ccl_tcnf.h,94
#define CCL_TCNF26,613
#define TFORM_MANY_CLAUSES 40,1134
#define TFORM_MANY_LIMIT 41,1170

include/ccl_term_clause_assoc.h,224
#define CCL_SUBTERMINDEX27,665
typedef struct term_clauses_assoc35,916
}TermClausesAssocCell, *TermClauseAssoc_p;TermClauseAssoc_p39,989
#define TermClauseAssocCellAlloc(47,1258
#define TermClauseAssocCellFree(49,1364

include/ccl_tformulae.h,591
#define CCL_TFORMULAE26,608
typedef Term_p TFormula_p;34,880
#define TFORM_RENAME_LIMIT 40,1131
#define TFORM_RENAME_LIMIT_STR 41,1165
#define   TFormulaHasSubForm1(43,1202
#define   TFormulaHasSubForm2(46,1337
#define   TFormulaIsBinary(50,1474
#define   TFormulaIsUnary(51,1530
#define   TFormulaIsQuantified(52,1586
#define   TFormulaIsLiteral(54,1709
#define   TFormulaIsPropTrue(59,1862
#define   TFormulaIsPropFalse(60,1940
#define    TFormulaGCMarkCells(62,2020
#define    TFormulaEqual(71,2584
#define    TFormulaCopy(73,2699
#define   TFormulaFindMaxVarCode(84,3266

include/ccl_unfold_defs.h,114
#define CCL_UNFOLD_DEFS30,885
#define DEFAULT_EQDEF_INCRLIMIT 41,1251
#define DEFAULT_EQDEF_MAXCLAUSES 44,1346

include/ccl_unit_simplify.h,205
#define CCL_UNIT_SIMPLIFY27,631
   NoUnitSimplify,39,927
   TopLevelUnitSimplify,40,981
   FullUnitSimplify 41,1030
}UnitSimplifyType;UnitSimplifyType42,1096
#define TransUnitSimplifyString(51,1375

include/cco_clausesplitting.h,35
#define CCO_CLAUSESPLITTING25,569

include/cco_eqnresolving.h,32
#define CCO_EQNRESOLVING25,554

include/cco_factoring.h,29
#define CCO_FACTORING25,537

include/cco_forward_contraction.h,82
#define CCO_FORWARD_CONTRACTION27,651
#define DEFAULT_FILTER_DESCRIPTOR 48,1336

include/cco_paramodulation.h,34
#define CCO_PARAMODULATION25,561

include/cco_proofproc.h,63
#define CCO_PROOFPROC25,525
#define TMPBANK_GC_LIMIT 49,1432

include/cco_simplification.h,33
#define CCI_SIMPIFICATION25,559

include/cex_csscpa.h,349
#define CEX_CSSCPA25,569
typedef struct csscpa_state_cell36,896
}CSSCPAStateCell, *CSSCPAState_p;CSSCPAState_p47,1203
   contradicts,52,1277
   improved,53,1293
   rejected,54,1306
   forced,55,1319
   requested,56,1330
   unknown57,1344
ClauseStatusType;59,1357
#define CSSCPAStateCellAlloc(65,1599
#define CSSCPAStateCellFree(66,1687

include/che_axiomscan.h,325
#define CHE_AXIOMSCAN_H25,542
typedef enum aximotype43,1079
   AxNoaxiom,45,1104
   AxCommutative,46,1118
   AxAssociative,47,1136
   AxRightIdentity,48,1154
   AxLeftIdentyty,49,1174
   AxRightInverse,50,1193
   AxLeftInverse,51,1212
   AxIdempotent1,52,1230
   AxIdempotent253,1248
}AxiomType;AxiomType54,1265

include/che_clausefeatures.h,76
#define CHE_CLAUSEFEATURES25,564
#define ClauseAddVarDistribution(48,1348

include/che_clausesetfeatures.h,4092
#define CHE_CLAUSESETFEATURES25,574
   SpecUnit,36,905
   SpecHorn,37,918
   SpecGeneral,38,931
   SpecNoEq,39,947
   SpecSomeEq,40,960
   SpecPureEq,41,975
   SpecFewPosNonGroundUnits,42,990
   SpecSomePosNonGroundUnits,43,1019
   SpecManyPosNonGroundUnits,44,1049
   SpecFewPosGround,45,1079
   SpecSomePosGround,46,1100
   SpecManyPosGround,47,1122
   SpecFewAxioms,48,1144
   SpecSomeAxioms,49,1163
   SpecManyAxioms,50,1182
   SpecFewLiterals,51,1201
   SpecSomeLiterals,52,1221
   SpecManyLiterals,53,1242
   SpecSmallTerms,54,1263
   SpecMediumTerms,55,1282
   SpecLargeTerms,56,1302
   SpecArity0,57,1321
   SpecArity1,58,1336
   SpecArity2,59,1351
   SpecArity3Plus,60,1366
   SpecAritySumSmall,61,1385
   SpecAritySumMedium,62,1407
   SpecAritySumLarge,63,1430
   SpecDepthShallow,64,1452
   SpecDepthMedium,65,1473
   SpecDepthDeep,66,1493
}SpecFeatures;SpecFeatures67,1511
typedef struct spec_limits_cell74,1645
}SpecLimitsCell, *SpecLimits_p;SpecLimits_p92,2109
typedef struct spec_feature_cell97,2263
}SpecFeatureCell, *SpecFeature_p;SpecFeature_p143,3666
#define NGU_ABSOLUTE 150,3925
#define NGU_FEW_DEFAULT 151,3961
#define NGU_MANY_DEFAULT 152,3997
#define NGU_FEW_ABSDEFAULT 153,4033
#define NGU_MANY_ABSDEFAULT 154,4069
#define GPC_ABSOLUTE 155,4105
#define GPC_FEW_DEFAULT 156,4141
#define GPC_MANY_DEFAULT 157,4177
#define GPC_FEW_ABSDEFAULT 158,4213
#define GPC_MANY_ABSDEFAULT 159,4249
#define AX_SOME_DEFAULT 160,4285
#define AX_MANY_DEFAULT 161,4321
#define LIT_SOME_DEFAULT 162,4357
#define LIT_MANY_DEFAULT 163,4393
#define TERM_MED_DEFAULT 164,4429
#define TERM_LARGE_DEFAULT 165,4465
#define FAR_SUM_MED_DEFAULT 166,4501
#define FAR_SUM_LARGE_DEFAULT 167,4536
#define DEPTH_MEDIUM_DEFAULT 168,4571
#define DEPTH_DEEP_DEFAULT 171,4768
#define DEFAULT_OUTPUT_DESCRIPTOR 174,4805
#define DEFAULT_CLASS_MASK 175,4848
#define SpecLimitsCellAlloc(178,4893
#define SpecLimitsCellFree(180,4986
#define SpecFeatureCellAlloc(184,5101
#define SpecFeatureCellFree(186,5197
#define Spec(189,5282
#define SpecAxiomsAreUnit(191,5339
#define SpecAxiomsAreHorn(192,5410
#define SpecAxiomsAreNonUnitHorn(193,5481
#define SpecAxiomsAreGeneral(195,5616
#define SpecGoalsAreUnit(197,5691
#define SpecGoalsAreHorn(198,5759
#define SpecGoalsAreGround(199,5816
#define SpecGoalsHaveVars(200,5876
#define SpecPureEq(202,5937
#define SpecSomeEq(203,6001
#define SpecNoEq(204,6068
#define SpecFewNGPosUnits(206,6116
#define SpecSomeNGPosUnits(208,6212
#define SpecManyNGPosUnits(210,6310
#define SpecFewGroundPos(213,6409
#define SpecSomeGroundPos(215,6504
#define SpecManyGroundPos(217,6601
#define SpecFewAxioms(220,6699
#define SpecSomeAxioms(222,6780
#define SpecManyAxioms(224,6863
#define SpecFewLiterals(227,6947
#define SpecSomeLiterals(229,7033
#define SpecManyLiterals(231,7121
#define SpecSmallTerms(234,7210
#define SpecMediumTerms(236,7295
#define SpecLargeTerms(238,7382
#define SpecMaxFArity0(241,7470
#define SpecMaxFArity1(243,7550
#define SpecMaxFArity2(245,7630
#define SpecMaxFArity3Plus(247,7710
#define SpecAvgFArity0(250,7798
#define SpecAvgFArity1(252,7878
#define SpecAvgFArity2(254,7958
#define SpecAvgFArity3Plus(256,8038
#define SpecSmallFArSum(259,8126
#define SpecMediumFArSum(261,8214
#define SpecLargeFArSum(263,8304
#define SpecShallowMaxDepth(266,8395
#define SpecMediumMaxDepth(268,8485
#define SpecDeepMaxDepth(270,8573
#define ClauseSetCountAxioms(274,8704
#define ClauseSetCountUnitAxioms(279,8885
#define ClauseSetIsUnitSet(281,8987
#define ClauseSetAxiomsAreUnit(283,9073
#define ClauseSetGoalsAreUnit(285,9180
#define ClauseSetCountHornAxioms(290,9380
#define ClauseSetIsHornSet(292,9483
#define ClauseSetAxiomsAreHorn(294,9569
#define ClauseSetGoalsAreHorn(296,9676
#define ClauseSetIsEquationalSet(302,9867
#define ClauseSetIsEquational(305,10008
#define ClauseSetIsPureEquationalSet(309,10144
#define ClauseSetGoalsAreGround(313,10303
#define ClauseSetIsGround(317,10457
#define ClauseSetCountNonGroundUnitAxioms(324,10716

include/che_clauseweight.h,234
#define CHE_CLAUSEWEIGHT27,660
#define DEFAULT_POS_MULT 35,932
typedef struct weightparamcell37,960
}WeightParamCell, *WeightParam_p;WeightParam_p42,1057
#define WeightParamCellAlloc(50,1317
#define WeightParamCellFree(52,1413

include/che_fcode_featurearrays.h,367
#define CHE_F_CODE_FEATUREARRAYS27,733
typedef struct fcode_feature_sort_cell37,1076
}FCodeFeatureSortCell, *FCodeFeatureSort_p;FCodeFeatureSort_p46,1246
typedef struct fcode_feature_array_cell49,1292
}FCodeFeatureArrayCell, *FCodeFeatureArray_p;FCodeFeatureArray_p53,1377
#define FCodeFeatureArrayCellAlloc(62,1650
#define FCodeFeatureArrayCellFree(64,1763

include/che_fcode_weight.h,234
#define CHE_CLAUSEWEIGHT27,660
#define DEFAULT_POS_MULT 35,932
typedef struct weightparamcell37,960
}WeightParamCell, *WeightParam_p;WeightParam_p42,1057
#define WeightParamCellAlloc(50,1317
#define WeightParamCellFree(52,1413

include/che_fifo.h,24
#define CHE_FIFO25,518

include/che_funweights.h,217
#define CHE_FUNWEIGHTS26,597
typedef struct funweightparamcell39,907
}FunWeightParamCell, *FunWeightParam_p;FunWeightParam_p75,1959
#define FunWeightParamCellAlloc(83,2225
#define FunWeightParamCellFree(85,2330

include/che_hcb.h,758
#define CHE_HCB28,627
   NoACHandling,49,1142
   ACDiscardAll,50,1159
   ACKeepUnits,51,1176
   ACKeepOrientable52,1192
}ACHandlingType;ACHandlingType53,1212
typedef struct heuristic_parms_cell58,1291
}HeuristicParmsCell, *HeuristicParms_p;HeuristicParms_p124,3564
typedef struct hcb_cell133,3841
}HCBCell, *HCB_p;HCB_p164,5120
#define HCB_DEFAULT_HEURISTIC 166,5139
#define DEFAULT_FILTER_LIMIT 167,5179
#define DEFAULT_FILTER_COPIES_LIMIT 168,5217
#define DEFAULT_REWEIGHT_INTERVAL 169,5262
#define DEFAULT_DELETE_BAD_LIMIT 170,5305
typedef Clause_p (*ClauseSelectFun)ClauseSelectFun172,5348
#define HeuristicParmsCellAlloc(179,5638
#define HeuristicParmsCellFree(181,5737
#define HCBCellAlloc(189,5997
#define HCBCellFree(190,6058

include/che_hcbadmin.h,179
#define CHE_HCB_ADMIN25,555
typedef struct hcbadmincell34,824
}HCBAdminCell, *HCBAdmin_p;HCBAdmin_p38,894
#define HCBAdminCellAlloc(45,1147
#define HCBAdminCellFree(46,1223

include/che_heuristics.h,265
#define CHE_HEURISTICS25,558
   HEU_NO_HEURISTIC 39,997
   HEU_AUTO_MODE,40,1022
   HEU_AUTO_MODE_CASC,41,1040
   HEU_AUTO_MODE_DEV42,1063
}Heuristic;Heuristic43,1084
typedef struct heuristic_assoc_cell45,1097
}HeuristicAssocCell, HeuristicAssoc_p;50,1218

include/che_learning.h,213
#define CHE_LEARNING25,553
#define DEFAULT_POS_MULT 35,862
typedef struct tsmparamcell43,1205
}TSMParamCell, *TSMParam_p;TSMParam_p65,1943
#define TSMParamCellAlloc(73,2197
#define TSMParamCellFree(75,2279

include/che_lifo.h,25
#define CHE_LFIFO25,527

include/che_litselection.h,345
#define CHE_LITSELECTION26,581
typedef void (*LiteralSelectionFun)LiteralSelectionFun35,886
typedef struct litsel_name_fun_assoc_cell37,952
}LitSelNameFunAssocCell;LitSelNameFunAssocCell41,1055
typedef struct lit_eval_cell43,1081
}LitEvalCell, *LitEval_p;LitEval_p51,1319
typedef void LitWeightFun(53,1346
#define LitEvalInit(59,1625

include/che_normsubst.h,185
#define CLE_NORMSUBST26,566
typedef struct normsubstcell36,867
}NormSubstCell, *NormSubst_p;NormSubst_p41,969
#define NormSubstCellAlloc(48,1224
#define NormSubstCellFree(49,1303

include/che_orientweight.h,270
#define CHE_ORIENTWEIGHT26,614
#define DEFAULT_MAX_MULT 34,894
typedef struct orientweightparamcell36,924
}OrientWeightParamCell, *OrientWeightParam_p;OrientWeightParam_p44,1119
#define OrientWeightParamCellAlloc(52,1391
#define OrientWeightParamCellFree(54,1505

include/che_patterns.h,28
#define CLE_PATTERNS25,538

include/che_prio_funs.h,88
#define CHE_PRIO_FUNS25,542
typedef EvalPriority (*ClausePrioFun)ClausePrioFun34,844

include/che_proofcontrol.h,288
#define CHE_PROOFCONTROL26,611
typedef struct proofcontrolcell38,974
}ProofControlCell, *ProofControl_p;ProofControl_p48,1278
#define HCBARGUMENTS 50,1315
typedef HCB_p (*HCBCreateFun)HCBCreateFun53,1427
#define ProofControlCellAlloc(63,1769
#define ProofControlCellFree(65,1862

include/che_refinedweight.h,277
#define CHE_REFINEDWEIGHT26,619
#define DEFAULT_MAX_MULT 34,900
typedef struct refinedweightparamcell36,930
}RefinedWeightParamCell, *RefinedWeightParam_p;RefinedWeightParam_p44,1114
#define RefinedWeightParamCellAlloc(52,1388
#define RefinedWeightParamCellFree(54,1505

include/che_simweight.h,179
#define CHE_SIMWEIGHT26,595
typedef struct simparamcell35,865
}SimParamCell, *SimParam_p;SimParam_p41,997
#define SimParamCellAlloc(49,1251
#define SimParamCellFree(51,1338

include/che_to_autoselect.h,263
#define CHE_TO_AUTOSELECT26,584
typedef struct order_parms_cell40,1141
}OrderParmsCell, *OrderParms_p;OrderParms_p47,1348
typedef double (*OrderEvaluationFun)OrderEvaluationFun49,1381
#define OrderParmsCellAlloc(57,1709
#define OrderParmsCellFree(59,1796

include/che_to_precgen.h,716
#define CHE_TO_PRECGEN25,556
   PNoMethod 35,856
   PUnaryFirst,36,894
   PUnaryFirstFreq,37,936
   PArity,38,982
   PInvArity,39,1026
   PConstMax,40,1078
   PInvArConstMin,42,1169
   PByFrequency,44,1255
   PByInvFrequency,45,1317
   PByInvConjFrequency,46,1381
   PByInvFreqConjMax,48,1498
   PByInvFreqConjMin,50,1610
   PByInvFreqConstMin,52,1723
   PByInvFreqHack,54,1816
   PArrayOpt,57,1985
   POrientAxioms,60,2154
   PMinMethod 61,2202
   PMinMethod = PUnaryFirst,61,2202
   PMaxMethod 62,2231
   PMaxMethod = POrientAxioms62,2231
}TOPrecGenMethod;TOPrecGenMethod63,2261
#define FREQ_SEMI_INFTY 70,2504
#define TOGetPrecGenName(76,2672
#define TOGenerateDefaultPrecedence(80,2788

include/che_to_weightgen.h,1112
#define CHE_TO_WEIGHTGEN25,556
   WNoMethod 38,861
   WSelectMaximal,39,901
   WArityWeight,41,1012
   WArityMax0,42,1067
   WModArityWeight,43,1138
   WModArityMax0,44,1207
   WAritySqWeight,46,1322
   WAritySqMax0,47,1380
   WInvArityWeight,49,1485
   WInvArityMax0,50,1549
   WInvAritySqWeight,52,1660
   WInvAritySqMax0,53,1728
   WPrecedence,55,1843
   WPrecedenceInv,56,1897
   WPrecRank5,57,1951
   WPrecRank10,58,1983
   WPrecRank20,59,2016
   WFrequency,60,2049
   WInvFrequency,61,2104
   WFrequencyRank,62,2169
   WInvFrequencyRank,64,2284
   WInvConjFrequencyRank,66,2408
   WFrequencyRankSq,69,2570
   WInvFrequencyRankSq,70,2624
   WInvModFreqRank,71,2662
   WInvModFreqRankMax0,74,2844
   WConstantWeight,75,2915
   WMinMethod 76,2961
   WMinMethod = WSelectMaximal,76,2961
   WMaxMethod 77,2993
   WMaxMethod = WConstantWeight 77,2993
}TOWeightGenMethod;TOWeightGenMethod78,3051
#define WConstNoSpecialWeight 82,3147
#define WConstNoWeight 83,3180
#define W_TO_BASEWEIGHT 87,3254
#define TOGetWeightGenName(97,3540
#define TOGenerateDefaultWeights(102,3674

include/che_varweights.h,217
#define CHE_VARWEIGHTS25,571
typedef struct varweightparamcell35,886
}VarWeightParamCell, *VarWeightParam_p;VarWeightParam_p57,1449
#define VarWeightParamCellAlloc(65,1715
#define VarWeightParamCellFree(67,1820

include/che_wfcb.h,270
#define CHE_WFCB54,1639
typedef double (*ClauseEvalFun)ClauseEvalFun68,2025
typedef struct wfcb_cell71,2092
}WFCBCell, *WFCB_p;WFCB_p80,2484
typedef WFCB_p (*WeightFunParseFun)WeightFunParseFun82,2505
#define WFCBCellAlloc(90,2820
#define WFCBCellFree(91,2884

include/che_wfcbadmin.h,188
#define CHE_WFCB_ADMIN25,564
typedef struct wfcbadmincell42,1027
}WFCBAdminCell, *WFCBAdmin_p;WFCBAdmin_p47,1125
#define WFCBAdminCellAlloc(54,1380
#define WFCBAdminCellFree(55,1459

include/cio_basicparser.h,123
#define CIO_BASICPARSER26,605
   SNNoNumber,38,945
   SNInteger,39,960
   SNFloat40,974
}StrNumType;StrNumType41,985

include/cio_commandline.h,358
#define CIO_COMMANDLINE38,1127
   NoArg,51,1449
   OptArg,52,1459
   ReqArg53,1470
}OptArgType;OptArgType54,1480
typedef struct optcell56,1494
}OptCell, *Opt_p;Opt_p65,1883
typedef struct clstatecell68,1903
}CLStateCell, *CLState_p;CLState_p77,2310
#define CLStateCellAlloc(83,2560
#define CLStateCellFree(84,2633
#define FORMAT_WIDTH 87,2708

include/cio_fileops.h,63
#define CIO_FILEOPS25,523
#define FileNameIsAbsolute(48,1290

include/cio_filevars.h,179
#define CIO_FILEVARS25,559
typedef struct filevarscell36,889
}FileVarsCell, *FileVars_p;FileVars_p40,1031
#define FileVarsCellAlloc(49,1286
#define FileVarsCellFree(50,1362

include/cio_initio.h,26
#define CIO_INITIO26,585

include/cio_output.h,84
#define CIO_OUTPUT27,658
#define OUTPRINT(37,948
#define      InitOutput(49,1342

include/cio_scanner.h,2625
#define CIO_SCANNER25,557
typedef unsigned long long TokenType;46,1308
#define NoToken 48,1347
#define WhiteSpace 49,1373
#define Comment 50,1407
#define Ident 51,1444
#define Idnum 52,1478
#define SemIdent 53,1510
#define String 54,1542
#define SQString 55,1577
#define PosInt 56,1610
#define OpenBracket 57,1645
#define CloseBracket 58,1678
#define OpenCurly 59,1716
#define CloseCurly 60,1755
#define OpenSquare 61,1791
#define CloseSquare 62,1828
#define LesserSign 63,1865
#define GreaterSign 64,1903
#define EqualSign 65,1940
#define NegEqualSign 66,1978
#define TildeSign 67,2014
#define Exclamation 68,2053
#define AllQuantor 69,2089
#define QuestionMark 70,2125
#define ExistQuantor 71,2163
#define Comma 72,2200
#define Semicolon 73,2239
#define Colon 74,2271
#define Hyphen 75,2307
#define Plus 76,2339
#define Mult 77,2372
#define Fullstop 78,2403
#define Dollar 79,2434
#define Slash 80,2469
#define Pipe 81,2502
#define FOFOr 82,2534
#define Ampersand 83,2563
#define FOFAnd 84,2594
#define FOFLRImpl 85,2628
#define FOFRLImpl 86,2664
#define FOFEquiv 87,2700
#define FOFXor 88,2736
#define FOFNand 89,2771
#define FOFNor 90,2804
#define SkipToken 93,2840
#define Identifier 94,2885
#define Name 95,2923
#define FOFBinOp 96,2967
#define FOFAssocOp 97,3055
   LOPFormat,106,3202
   TPTPFormat,107,3216
   TSTPFormat108,3231
}IOFormat;IOFormat109,3245
typedef struct tokenrepcell112,3258
}TokenRepCell, *TokenRep_p;TokenRep_p116,3324
typedef struct tokencell119,3354
}TokenCell, *Token_p;Token_p131,4032
#define MAXTOKENLOOKAHEAD 133,4055
typedef struct scannercell135,4084
}ScannerCell, *Scanner_p;Scanner_p146,4687
#define TokenCellAlloc(153,4942
#define TokenCellFree(154,5014
#define ScannerCellAlloc(155,5078
#define ScannerCellFree(156,5154
#define  Source(158,5221
#define  SourceType(159,5282
#define  LookChar(160,5348
#define  CurrChar(161,5421
#define  CurrLine(162,5488
#define  CurrColumn(163,5555
#define  NextChar(164,5624
#define  ScannerSetFormat(166,5692
#define  ScannerGetFormat(167,5760
#define  ScannerGetDefaultDir(169,5823
#define isstartidchar(171,5896
#define isidchar(172,5952
#define ischar(173,6008
#define isstartcomment(174,6047
#define TOKENREALPOS(185,6443
#define AktToken(186,6497
#define AktTokenType(187,6557
#define LookToken(188,6602
#define TestInpTok(195,6817
#define TestInpId(196,6877
#define TestInpIdnum(197,6935
#define TestInpNoSkip(198,6996
#define TestInpTokNoSkip(199,7053
#define AcceptInpTok(209,7357
#define AcceptInpTokNoSkip(211,7461
#define AcceptInpId(214,7610

include/cio_signals.h,27
#define CCO_SIGNALS26,626

include/cio_streams.h,413
#define CIO_STREAMS28,715
#define MAXLOOKAHEAD 37,1009
typedef char* StreamType;45,1247
typedef struct streamcell54,1533
}StreamCell, *Stream_p, **Inpstack_p;Inpstack_p67,1933
#define StreamCellAlloc(80,2382
#define StreamCellFree(81,2452
#define  STREAMREALPOS(86,2632
#define  StreamLookChar(88,2684
#define  StreamCurrChar(91,2825
#define  StreamCurrLine(92,2895
#define  StreamCurrColumn(93,2946

include/cio_tempfile.h,28
#define CIO_TEMPFILE25,537

include/clb_avlgeneric.h,113
#define CLB_AVLGENERIC29,804
#define AVL_TRAVERSE_DECLARATION(56,1668
#define AVL_TRAVERSE_DEFINITION(91,2600

include/clb_ddarrays.h,292
#define CLB_DDARRAYS25,581
typedef struct ddarraycell34,852
}DDArrayCell, *DDArray_p;DDArray_p39,931
#define DDArrayCellAlloc(46,1183
#define DDArrayCellFree(47,1256
#define   DDArrayAssign(56,1540
#define   DDArrayElement(59,1641
static __inline__ double* DDArrayElementRef(88,2641

include/clb_defines.h,1010
#define CLB_DEFINES25,545
   false 49,1057
   true 50,1071
}bool;bool51,1083
#define CPPCAST(53,1091
#define CPPCAST(58,1151
typedef union int_or_p66,1293
}IntOrP;IntOrP70,1349
#define INTORP_MEM 73,1388
#define LONG_MEM 74,1409
#define INTORP_MEM 76,1434
#define LONG_MEM 77,1468
#define NULL 85,1565
#define NULL 87,1595
#define VOLATILE 96,1823
#define VOLATILE98,1855
typedef void (*GenericExitFun)GenericExitFun105,1997
typedef int (*ComparisonFunctionType)ComparisonFunctionType109,2100
typedef unsigned long ulong_c;111,2166
typedef ptrdiff_t ptr_int;120,2547
#undef MAX130,2878
#define MAX(132,2896
#undef MIN135,2943
#define MIN(137,2961
#undef ABS140,3008
#define ABS(142,3026
#undef XOR145,3075
#define XOR(147,3093
#undef EQUIV150,3155
#define EQUIV(152,3175
#define SWAP(154,3226
#define KILO 159,3332
#define MEGA 160,3350
#define WRITE_STR(164,3404
#define TSTPOUT(168,3484
#define TSTPOUTFD(169,3550
#define TSTPOUT(173,3663
#define TSTPOUTFD(174,3690

include/clb_dstacks.h,297
#define CLB_DSTACKS25,551
typedef int DStackPointer;36,851
typedef struct dstackcell38,879
}DStackCell, *DStack_p;DStack_p43,1079
#define DSTACK_DEFAULT_SIZE 50,1328
#define DStackCellAlloc(55,1460
#define DStackCellFree(56,1530
#define  DStackEmpty(60,1667
#define  DStackGetSP(65,1808

include/clb_dstrings.h,305
#define CLB_DSTRINGS35,1169
typedef struct dstrcell43,1439
}DStrCell, *DStr_p;DStr_p49,1525
#define DSTRGROW 51,1546
#define DStrCellAlloc(59,1814
#define DStrCellFree(60,1878
#define DStrAppendDStr(70,2236
#define DStrLastChar(73,2364
#define DStrGetRef(82,2705
#define DStrReleaseRef(83,2777

include/clb_error.h,372
#define CLB_ERROR28,661
#define getrusage(38,809
   NO_ERROR,49,1111
   OUT_OF_MEMORY,50,1124
   SYNTAX_ERROR,51,1142
   USAGE_ERROR,52,1159
   FILE_ERROR,53,1175
   SYS_ERROR,54,1190
   CPU_LIMIT_ERROR,55,1204
   OTHER_ERROR,56,1224
   INPUT_SEMANTIC_ERROR57,1240
}ErrorCodes;ErrorCodes58,1264
#define MAX_ERRMSG_ADD 64,1501
#define MAX_ERRMSG_LEN 65,1530

include/clb_fixdarrays.h,231
#define CLB_FIXDARRAYS27,591
typedef struct fixd_array_cell36,864
}FixedDArrayCell, *FixedDArray_p;FixedDArray_p40,927
#define FixedDArrayCellAlloc(47,1186
#define FixedDArrayCellFree(48,1274
#define FixedDArraySize(53,1444

include/clb_floattrees.h,227
#define CLB_FLOATTREES26,641
typedef struct floattreecell51,1548
}FloatTreeCell, *FloatTree_p;FloatTree_p58,1730
#define FloatTreeCellAlloc(61,1762
#define FloatTreeCellFree(62,1841
#define FloatTreeTraverseExit(75,2448

include/clb_gpdarrays.h,581
#define CLB_GPDARRAYS31,962
typedef struct pdarraycell40,1236
}GPDArrayCell, *GPDArray_p;GPDArray_p47,1353
#define GPDArrayCellAlloc(54,1607
#define GPDArrayCellFree(55,1683
#define GPDARRAYSIZE(56,1751
#define GPDARRAYCELL_MEM 59,1837
#define GPDARRAYCELL_MEM 61,1871
#define GPDArrayStorage(63,1925
#define   GPDArrayAssign(77,2438
#define   GPDArrayAssignP(79,2540
#define   GPDArrayAssignInt(81,2649
#define   GPDArrayElement(84,2761
#define   GPDArrayElementP(86,2840
#define   GPDArrayElementInt(88,2928
static __inline__ IntOrP* GPDArrayElementRef(116,3982

include/clb_intmap.h,779
#define CLB_INTMAP27,669
   IMEmpty,40,1001
   IMSingle,41,1013
   IMArray,42,1026
   IMTree43,1038
}IntMapType;IntMapType44,1048
#define MAX_TREE_DENSITY 46,1062
#define MIN_TREE_DENSITY 47,1089
#define IM_ARRAY_SIZE 48,1116
typedef struct intmap_cell56,1502
}IntMapCell, *IntMap_p;IntMap_p73,2218
typedef struct intmap_iter_cell77,2245
}IntMapIterCell, *IntMapIter_p;IntMapIter_p88,2511
typedef long (*IntMapFreeFunc)IntMapFreeFunc91,2545
#define IntMapCellAlloc(97,2818
#define IntMapCellFree(98,2888
#define IntMapIterCellAlloc(109,3216
#define IntMapIterCellFree(110,3298
#define INTMAPCELL_MEM 113,3400
#define INTMAPCELL_MEM 115,3432
#define IntMapDStorage(118,3483
#define IntMapStorage(123,3731
static __inline__ void* IntMapIterNext(154,4674

include/clb_memory.h,806
#define CLB_MEMORY27,785
typedef struct memcell42,1177
}MemCell, *Mem_p;Mem_p48,1274
#define MEM_ARR_SIZE 54,1516
#define MEM_FREE_PATTERN 55,1542
#define MEM_RSET_PATTERN 56,1578
#define MEMSIZE(72,2162
#define MEMSIZE(74,2259
#define SizeFree(80,2356
#define SizeMalloc(81,2407
#define ENSURE_NULL(82,2449
#define SizeFree(84,2494
#define SizeMalloc(85,2534
#define ENSURE_NULL(86,2576
#define SizeFree(92,2665
#define SizeMalloc(93,2730
#define ENSURE_NULL(94,2780
#define SizeFree(96,2825
#define SizeMalloc(97,2880
#define ENSURE_NULL(98,2930
#define FREE(108,3204
#define IntArrayFree(111,3290
#undef FREE126,3768
#define FREE(127,3780
#undef FREE131,3886
#define FREE(132,3898
static __inline__ void* SizeMallocReal(162,5058
static __inline__ void SizeFreeReal(213,6519

include/clb_newmem.h,480
#define CLB_NEWMEM28,865
typedef struct memcell39,1200
}MemCell, *Mem_p;Mem_p45,1297
#define MEM_ARR_SIZE 51,1539
#define MEM_ALIGN 52,1569
#define MEM_CHUNKLIMIT 53,1597
#define MEM_MULTIPLIER 55,1720
#define MEM_FREE_PATTERN 56,1751
#define MEM_RSET_PATTERN 57,1787
#define SizeFree(66,1967
#define SizeMalloc(67,2032
#define SizeFree(69,2084
#define SizeMalloc(70,2139
#define FREE(78,2366
#define IntArrayFree(81,2441
#undef FREE95,2885
#define FREE(96,2897

include/clb_numtrees.h,310
#define CLB_NUMTREES26,618
typedef struct numtreecell51,1517
}NumTreeCell, *NumTree_p;NumTree_p58,1687
#define NumTreeCellAlloc(61,1715
#define NumTreeCellFree(62,1788
#define NUMTREECELL_MEM 65,1891
#define NUMTREECELL_MEM 67,1924
#define   NumTreeMaxKey(81,2520
#define NumTreeTraverseExit(86,2690

include/clb_objtrees.h,28
#define CLB_OBJTREES28,745

include/clb_os_wrapper.h,129
#define CLB_OS_WRAPPERS24,546
   RLimFailed,40,926
   RLimReduced,41,941
   RLimSuccess42,957
}RLimResult;RLimResult43,972

include/clb_partial_orderings.h,319
#define CLB_PARTIAL_ORDERINGS25,581
   to_unknown 38,933
   to_uncomparable 39,952
   to_equal 40,976
   to_greater 41,993
   to_lesser 42,1012
   to_notgteq,43,1030
   to_notleeq44,1083
}CompareResult;CompareResult45,1097
#define Q_TO_PART(58,1461
static __inline__ CompareResult POInverseRelation(83,2184

include/clb_pdarrays.h,569
#define CLB_PDARRAYS32,935
typedef struct pdarraycell41,1206
}PDArrayCell, *PDArray_p;PDArray_p47,1305
#define GROW_EXPONENTIAL 49,1333
#define PDArrayCellAlloc(55,1584
#define PDArrayCellFree(56,1657
#define PDARRAYCELL_MEM 59,1753
#define PDARRAYCELL_MEM 61,1786
#define PDArrayStorage(63,1838
#define   PDArrayAssign(76,2356
#define   PDArrayAssignP(78,2456
#define   PDArrayAssignInt(80,2563
#define   PDArrayElement(83,2673
#define   PDArrayElementP(85,2750
#define   PDArrayElementInt(87,2836
static __inline__ IntOrP* PDArrayElementRef(120,4103

include/clb_plist.h,185
#define CLB_PLIST25,537
typedef struct plistcell35,806
}PListCell, *PList_p;PList_p40,902
#define PListCellAlloc(46,1148
#define PListCellFree(47,1215
#define PListEmpty(51,1345

include/clb_pqueue.h,987
#define CLB_PQUEUE25,519
#define PQUEUE_DEFAULT_SIZE 34,788
typedef struct pqueuecell38,978
}PQueueCell, *PQueue_p;PQueue_p44,1204
#define PQueueCellAlloc(51,1453
#define PQueueCellFree(52,1523
#define  PQueueEmpty(57,1733
#define  PQueueGetNextInt(67,2183
#define  PQueueGetNextP(68,2245
#define  PQueueGetLastInt(71,2366
#define  PQueueGetLastP(72,2428
#define  PQueueLookInt(75,2546
#define  PQueueLookP(76,2602
static __inline__ void pqueue_store(95,3186
static __inline__ void pqueue_bury(120,3806
static __inline__ PQueue_p PQueueAlloc(144,4341
static __inline__ void PQueueFree(169,4893
static __inline__ void PQueueReset(187,5300
static __inline__ void PQueueStoreInt(206,5673
static __inline__ void PQueueStoreP(226,6092
static __inline__ void PQueueBuryInt(246,6529
static __inline__ void PQueueBuryP(266,6958
static __inline__ IntOrP PQueueGetNext(287,7412
static __inline__ IntOrP PQueueGetLast(313,7985
static __inline__ IntOrP PQueueLook(339,8526

include/clb_properties.h,249
#define CLB_PROPERTIES28,765
#define SetProp(44,1241
#define DelProp(45,1317
#define FlipProp(46,1394
#define AssignProp(47,1471
#define QueryProp(50,1603
#define IsAnyPropSet(53,1719
#define GiveProps(57,1896
#define PropsAreEquiv(61,1995

include/clb_pstacks.h,1111
#define CLB_PSTACKS25,558
typedef int PStackPointer;36,897
typedef struct pstackcell38,925
}PStackCell, *PStack_p;PStack_p43,1125
#define PSTACK_DEFAULT_SIZE 46,1151
#define PStackCellAlloc(51,1287
#define PStackCellFree(52,1357
#define  PStackEmpty(57,1585
#define  PStackGetSP(62,1829
#define  PStackPopInt(65,1931
#define  PStackPopP(66,1985
#define  PStackTopInt(70,2155
#define  PStackTopP(71,2209
#define  PStackBelowTopInt(73,2322
#define  PStackBelowTopP(74,2386
#define  PStackElementInt(78,2529
#define  PStackElementP(79,2599
static __inline__ void push(104,3494
static __inline__ PStack_p PStackAlloc(136,4330
static __inline__ void  PStackFree(161,4870
static __inline__ PStack_p PStackCopy(185,5478
static __inline__ void PStackReset(210,5999
static __inline__ void PStackPushInt(227,6363
static __inline__ void PStackPushP(247,6774
static __inline__ IntOrP PStackPop(268,7190
static __inline__ void PStackDiscardTop(289,7644
static __inline__ IntOrP PStackTop(309,8045
static __inline__ IntOrP PStackBelowTop(330,8497
static __inline__ IntOrP PStackElement(350,8911

include/clb_ptrees.h,386
#define CLB_PTREES32,907
typedef struct ptreecell52,1725
}PTreeCell, *PTree_p;PTree_p57,1831
#define PTreeCellAlloc(65,2079
#define PTreeCellFree(66,2149
#define PTREE_CELL_MEM 69,2241
#define PTREE_CELL_MEM 71,2273
#define SLOW_PTR_CMP79,2562
#define PCmp(81,2603
#define PCmp(83,2647
#define PTreeTraverseExit(110,3774
AVL_TRAVERSE_DECLARATION(PTreeTraverseExit109,3733

include/clb_quadtrees.h,304
#define CLB_QUADTREES26,626
typedef struct quadkeycell36,955
}QuadKeyCell,QuadKey,*QuadKey_p;QuadKey_p42,1092
typedef struct quadtreecell46,1191
}QuadTreeCell, *QuadTree_p;QuadTree_p52,1337
#define QuadTreeCellAlloc(60,1591
#define QuadTreeCellFree(61,1670
#define QuadTreeTraverseExit(73,2266

include/clb_simple_stuff.h,253
#define CLB_SIMPLE_STUFF25,546
}WeightedObjectCell, *WeightedObject_p;WeightedObject_p40,935
#define MAXINDENTSPACES 47,1200
#define WeightedObjectArrayAlloc(49,1228
#define WeightedObjectArrayFree(51,1329
#define WeightedObjectArraySort(56,1463

include/clb_stringtrees.h,214
#define CLB_STRINGTREES27,662
typedef struct strtreecell53,1649
}StrTreeCell, *StrTree_p;StrTree_p60,1820
#define StrTreeCellAlloc(63,1848
#define StrTreeCellFree(64,1921
#define StrTreeTraverseExit(76,2453

include/clb_sysdate.h,416
#define CLB_SYSDATE29,790
typedef long SysDate;41,1149
   DateEarlier 46,1192
   DateEqual 47,1213
   DateLater 48,1231
}DateRelation;DateRelation49,1248
#define      SysDateCreationTime(55,1487
#define      SysDateArmageddonTime(56,1525
#define      SysDateInc(57,1572
#define      SysDateMaximum(60,1756
#define      SysDateIsCreationDate(63,1892
static __inline__ DateRelation SysDateCompare(82,2396

include/clb_verbose.h,240
#define CLB_VERBOSE26,591
#define VERBOSE(43,1106
#define VERBOUT(44,1146
#define VERBOUTARG(46,1246
#define VERBOSE2(50,1371
#define VERBOUT2(51,1415
#define VERBOUTARG2(54,1518
#define VERBOSE10(58,1645
#define VERBOUT10(59,1691

include/cle_annotations.h,267
#define CLE_ANNOTATIONS26,578
#define ANNOTATION_DEFAULT_SIZE 57,1638
#define ANNOTATIONS_MERGE_ALL 58,1672
typedef NumTree_p Annotation_p;60,1708
#define      AnnotationValues(68,2048
#define      AnnotationCount(69,2105
#define      AnnotationLength(71,2194

include/cle_annoterms.h,364
#define CLE_ANNOTERMS25,541
typedef struct annotermcell34,844
}AnnoTermCell, *AnnoTerm_p;AnnoTerm_p38,1011
typedef struct annosetcell40,1040
}AnnoSetCell, *AnnoSet_p;AnnoSet_p46,1287
#define AnnoTermCellAlloc(53,1538
#define AnnoTermCellFree(54,1614
#define    AnnoTermFreeNoRef(59,1867
#define AnnoSetCellAlloc(66,2139
#define AnnoSetCellFree(67,2212

include/cle_classification.h,34
#define CLE_CLASSIFICATION25,569

include/cle_clauseenc.h,29
#define CLE_CLAUSEENC25,559

include/cle_examplerep.h,358
#define CLE_EXAMPLEREP26,596
typedef struct examplerepcell41,1168
}ExampleRepCell, *ExampleRep_p;ExampleRep_p46,1265
typedef struct examplesetcell51,1359
}ExampleSetCell, *ExampleSet_p;ExampleSet_p57,1522
#define ExampleRepCellAlloc(64,1779
#define ExampleRepCellFree(65,1862
#define ExampleSetCellAlloc(71,2090
#define ExampleSetCellFree(72,2173

include/cle_flatannoterms.h,420
#define CLE_FLATANNOTERMS25,556
typedef struct flatannotermcell35,861
}FlatAnnoTermCell, *FlatAnnoTerm_p;FlatAnnoTerm_p48,1340
typedef struct flatannosetcell50,1377
}FlatAnnoSetCell, *FlatAnnoSet_p;FlatAnnoSet_p54,1492
#define FlatAnnoTermCellAlloc(63,1753
#define FlatAnnoTermCellFree(65,1851
#define         FlatAnnoTermFree(71,2038
#define FlatAnnoSetCellAlloc(73,2105
#define FlatAnnoSetCellFree(75,2200

include/cle_indexfunctions.h,620
#define CLE_INDEXFUNCTIONS25,567
   IndexNoIndex 39,943
   IndexArity 40,967
   IndexSymbol 41,991
   IndexTop 42,1015
   IndexAltTop 43,1039
   IndexCSTop 44,1063
   IndexESTop 45,1087
   IndexIdentity 46,1111
   IndexEmpty 47,1135
}IndexType;IndexType48,1158
typedef struct indextermcell51,1172
}IndexTermCell, *IndexTerm_p;IndexTerm_p57,1414
typedef struct tsmindexcell70,1636
}TSMIndexCell, *TSMIndex_p;TSMIndex_p83,2047
#define IndexDynamicDepth 85,2076
#define IndexTermCellAlloc(94,2360
#define IndexTermCellFree(95,2442
#define TSMIndexCellAlloc(105,2754
#define TSMIndexCellFree(106,2833

include/cle_kbdesc.h,220
#define CLE_KB25,551
#define KB_VERSION 33,819
typedef struct kbdesccell35,849
}KBDescCell, *KBDesc_p;KBDesc_p40,970
#define KB_ANNOTATION_NO 43,996
#define KBDescCellAlloc(50,1248
#define KBDescCellFree(51,1319

include/cle_kbinsert.h,28
#define CLE_KBINSERT25,545

include/cle_numfeatures.h,349
#define CHE_NUMFEATURES27,673
#define FEATURE_NUMBER 36,951
#define FEATURE_NUMBER 52,1513
typedef struct featurescell54,1540
}FeaturesCell, *Features_p;Features_p61,1721
#define SEL_FEATURE_WEIGHTS 63,1750
#define SEL_PRED_WEIGHT 65,1885
#define SEL_FUNC_WEIGHT 66,1913
#define FeaturesCellAlloc(73,2166
#define FeaturesCellFree(74,2243

include/cle_patterns.h,576
#define CLE_PATTERNS26,598
#define NORM_ARITY_LIMIT 41,1222
#define NORM_SYMBOL_LIMIT 42,1283
#define NORM_VAR_INIT 44,1386
typedef struct patternsubstcell46,1424
}PatternSubstCell, *PatternSubst_p;PatternSubst_p58,1931
#define DEFAULT_LITERAL_NO 65,2192
#define PATTERN_SEARCH_BRANCHLIMIT 66,2221
#define PatternNormCode(68,2259
#define PatternSubstCellAlloc(70,2340
#define PatternSubstCellFree(72,2438
#define PatternIdGetArity(82,2821
#define PatternIdGetIdent(83,2886
#define PatIdIsNormId(85,2948
#define PatEqnLTerm(90,3136
#define PatEqnRTerm(91,3210

include/cle_termtops.h,28
#define CLE_TERMTOPS25,553

include/cle_tsm.h,693
#define CLE_TSM 25,516
   TSMTypeNoType,37,862
   TSMTypeFlat,38,880
   TSMTypeRecursive,39,896
   TSMTypeRecurrent,40,917
   TSMTypeRecurrentLocal41,938
}TSMType;TSMType42,963
typedef struct tsmadmincell44,974
}TSMAdminCell, *TSMAdmin_p;TSMAdmin_p60,1494
typedef struct tsmcell63,1524
}TSMCell, *TSM_p;TSM_p69,1637
typedef struct tsacell71,1656
}TSACell, *TSA_p;TSA_p78,1779
#define TSM_MAX_TERMTOP 81,1799
#define       GetTSMType(89,2079
#define       TSMEvalNormalize(91,2145
#define TSMAdminCellAlloc(107,2796
#define TSMAdminCellFree(108,2873
#define TSMCellAlloc(113,3036
#define TSMCellFree(114,3098
#define TSACellAlloc(121,3359
#define TSACellFree(122,3421

include/cle_tsmio.h,25
#define CLE_TSMIO25,542

include/cpr_dpll.h,183
#define CPR_DPLL25,521
typedef struct dpll_state_cell35,817
}DPLLStateCell, *DPLLState_p;DPLLState_p45,1319
#define DPLLStateCellAlloc(53,1575
#define DPLLStateCellFree(54,1654

include/cpr_dpllformula.h,338
#define CPR_DPLLFORMULA27,672
typedef struct atom_cell36,951
}AtomCell, *Atom_p;Atom_p42,1062
typedef struct dpllrep_cell44,1083
}DPLLFormulaCell, *DPLLFormula_p;DPLLFormula_p50,1195
#define DEFAULT_ATOM_NUMBER 53,1231
#define ATOM_GROWTH_FACTOR 54,1264
#define DPLLFormulaCellAlloc(61,1521
#define DPLLFormulaCellFree(62,1606

include/cpr_propclauses.h,346
#define CPR_PROPCLAUSES26,586
   DPLLOutNoFormat,38,901
   DPLLOutLOP,39,921
   DPLLOutDimacs40,936
}DPLLOutputFormat;DPLLOutputFormat41,953
typedef struct dpll_clause_cell43,973
}DPLLClauseCell, *DPLLClause_p;DPLLClause_p49,1115
#define DPLLClauseCellAlloc(58,1374
#define DPLLClauseCellFree(59,1456
#define DPLLClauseIsUnit(61,1540

include/cpr_propsig.h,299
#define CPR_PROPSIG27,669
typedef struct propsigcell37,970
}PropSigCell, *PropSig_p;PropSig_p41,1052
typedef long PLiteralCode;44,1080
#define PropSigCellAlloc(51,1332
#define PropSigCellFree(52,1405
#define PLiteralNoLit 53,1482
#define PAtomP(54,1506
#define   PropSigAtomNumber(63,1793

include/cpr_varset.h,206
#define CPR_VARSET26,585
typedef struct atomset_cell34,854
}AtomSetCell, *AtomSet_p;AtomSet_p39,973
#define AtomSetCellAlloc(46,1224
#define AtomSetCellFree(47,1297
#define      AtomSetEmpty(51,1449

include/cte_acterms.h,169
#define CTE_ACTERMS26,591
typedef struct actermopcell38,1008
}ACTermCell, *ACTerm_p;ACTerm_p42,1168
#define ACTermCellAlloc(49,1417
#define ACTermCellFree(50,1487

include/cte_fp_index.h,306
#define CTE_FP_INDEX27,665
typedef struct fp_index_cell47,1484
}FPIndexCell, *FPIndex_p;FPIndex_p55,1759
typedef void (*FPIndexFreeFun)FPIndexFreeFun57,1786
#define FPINDEX_VAR_INIT_ALT 64,2050
#define FPINDEX_VAR_GROW_ALT 65,2081
#define FPIndexCellAlloc(68,2114
#define FPIndexCellFree(69,2187

include/cte_functypes.h,268
#define CTE_FUNCTYPES26,577
   FSNone,40,991
   FSIdentVar,41,1015
   FSIdentFreeFun,42,1095
   FSIdentInt,43,1175
   FSIdentFloat,44,1212
   FSIdentInterpreted,45,1263
   FSIdentObject 46,1343
}FuncSymbType;FuncSymbType47,1423
typedef long FunCode;57,1811

include/cte_idx_fp.h,143
#define CTE_IDX_FP28,750
typedef FunCode IndexFP,42,1188
typedef FunCode IndexFP, *IndexFP_p;IndexFP_p42,1188
#define   BELOW_VAR 50,1451

include/cte_match_mgu_1-1.h,62
#define CTE_MATCH_MGU_1_127,635
#define VerifyMatch(46,1304

include/cte_path_idx.h,223
#define CTE_IDX_FP28,734
typedef struct path_index_cell39,1028
   Term_p term;50,1227
}PathIndexTermCell;PathIndexTermCell52,1262
typedef FunCode IndexFP,60,1456
typedef FunCode IndexFP, *IndexFP_p;IndexFP_p60,1456

include/cte_replace.h,152
#define CTE_REPLACE25,539
   RWNotRewritable 40,960
   RWLimitedRewritable 41,988
   RWAlwaysRewritable 42,1016
}RWResultType;RWResultType43,1044

include/cte_signature.h,1708
#define CTE_SIGNATURE26,629
   FPIgnoreProps 40,1002
   FPPredSymbol 41,1069
   FPFuncSymbol 42,1142
   FPFOFOp 44,1279
   FPSpecial 45,1350
   FPAssociative 46,1431
   FPCommutative 47,1505
   FPIsAC 48,1578
   FPIsAC         =   FPAssociative|FPAssociative48,1578
   FPIsAC         =   FPAssociative|FPCommutative,FPCommutative48,1578
   FPInterpreted 49,1629
   FPIsInteger 50,1687
   FPIsFloat 51,1763
   FPIsObject 52,1817
   FPDistinctProp 54,1935
   FPDistinctProp =  FPIsObject 54,1935
   FPDistinctProp =  FPIsObject | FPIsInteger 54,1935
   FPDistinctProp =  FPIsObject | FPIsInteger | FPIsFloat,54,1935
   FPOpFlag 55,1994
   FPClSplitDef 57,2117
}FunctionProperties;FunctionProperties58,2193
typedef struct funccell65,2403
}FuncCell, *Func_p;Func_p73,2656
#define DEFAULT_SIGNATURE_SIZE 86,3161
typedef struct sigcell88,3196
}SigCell, *Sig_p;Sig_p125,4611
#define SIG_TRUE_CODE 136,4904
#define SIG_FALSE_CODE 137,4929
#define SIG_NIL_CODE 138,4954
#define SIG_CONS_CODE 139,4979
#define FuncSetProp(143,5030
#define FuncDelProp(144,5086
#define FuncQueryProp(147,5192
#define FuncIsAnyPropSet(150,5299
#define SigSetFuncProp(154,5416
#define SigDelFuncProp(156,5510
#define SigQueryFuncProp(158,5604
#define SigIsAnyFuncPropSet(160,5702
#define SigCellAlloc(166,5934
#define SigCellFree(167,5995
#define SigExternalSymbols(172,6153
#define SigInterpreteNumbers(175,6237
#define SigIsFunConst(186,6705
static __inline__ int SigFindArity(243,8986
static __inline__ char*  SigFindName(266,9562
static __inline__ FunCode SigGetEqnCode(287,10051
static __inline__ FunCode SigGetOrCode(328,10930
static __inline__ FunCode SigGetCNilCode(354,11440

include/cte_simplesorts.h,321
#define CTE_SIMPLESORTS26,592
   STNoSort 40,1064
   STBool,41,1087
   STIndividuals,43,1190
   STInteger,44,1245
   STReal 45,1288
}SortType;SortType46,1321
typedef struct sort_table52,1463
}SortTableCell, *SortTable_p;SortTable_p62,1976
#define SortTableCellAlloc(70,2232
#define SortTableCellFree(71,2314

include/cte_simpletypes.h,31
#define CTE_SIMPLETYPES24,486

include/cte_subst.h,248
#define CTE_SUBST28,693
typedef PStackCell SubstCell;38,1012
typedef PStack_p   Subst_p;39,1042
#define SubstAlloc(45,1294
#define SubstFree(46,1332
#define SubstDelete(48,1374
#define SubstDeleteSkolem(49,1437
#define SubstIsEmpty(50,1512

include/cte_termbanks.h,592
#define CTE_TERMBANKS37,1151
typedef struct tbcell47,1484
}TBCell, *TB_p;TB_p83,3253
#define TBCellAlloc(95,3590
#define TBCellFree(96,3648
#define TBNonVarTermNodes(102,3801
#define TBStorage(103,3873
#define TBCellIdent(107,4004
#define TermIsTrueTerm(110,4121
#define TBTermIsSubterm(113,4241
#define TBTermIsTypeTerm(116,4342
#define TBTermIsXTypeTerm(118,4434
#define TBTermIsGround(120,4558
#define TBPrintTermFull(138,5271
#define  TBTermParse(144,5566
#define  TBRawTermParse(145,5632
#define TBTermCellIsMarked(152,5901
static __inline__ bool TBTermEqual(180,6857

include/cte_termcellstore.h,370
#define CTE_TERMCELLSTORE32,872
#define TERM_STORE_HASH_SIZE 40,1150
#define TERM_STORE_HASH_MASK 41,1188
typedef struct termcellstore43,1243
}TermCellStoreCell, *TermCellStore_p;TermCellStore_p48,1353
#define tcs_arity0hash(55,1616
#define tcs_arity1hash(56,1662
#define tcs_aritynhash(57,1746
#define TermCellHash(59,1831
#define TermCellStoreNodes(78,2535

include/cte_termcpos.h,93
#define CTE_TERMCPOS27,674
typedef long TermCPos;36,946
#define  TermCPosIsTopPos(43,1194

include/cte_termfunc.h,289
#define CTE_TERMFUNC25,598
#define TermStartToken 45,1185
#define TermIsStructSubterm(82,2789
#define TermStandardWeight(86,2961
#define TermIsGround(105,3612
#define TermHasUnboundVariables(106,3674
#define TermAddSymbolDistribution(112,3855
#define TermCollectVariables(123,4370

include/cte_termpos.h,346
#define CTE_TERMPOS25,566
typedef PStackCell TermPosCell;57,1621
typedef PStack_p   TermPos_p;58,1653
#define TERM_POS_ELEMENT_SIZE 62,1754
#define TermPosAlloc(69,2011
#define TermPosFree(70,2051
#define TermPosIsTopPos(72,2095
static __inline__ Term_p TermPosGetSubterm(98,2977
static __inline__ Term_p TermPosFirstLIPosition(133,3695

include/cte_termtrees.h,68
#define CTE_TERMTREES35,1029
#define TermTreeTraverseExit(61,2003

include/cte_termtypes.h,2339
#define CTE_TERMTYPES29,776
#define DEFAULT_VWEIGHT 43,1164
#define DEFAULT_FWEIGHT 44,1229
   TPIgnoreProps 50,1374
   TPRestricted 51,1439
   TPTopPos 52,1514
   TPIsGround 53,1579
   TPPredPos 54,1639
   TPIsRewritable 56,1771
   TPIsRRewritable 62,2193
   TPIsSOSRewritten 65,2389
   TPSpecialFlag 67,2519
   TPOpFlag 68,2600
   TPCheckFlag 69,2655
   TPOutputFlag 70,2710
   TPIsSpecialVar 72,2838
   TPIsRewritten 74,2982
   TPIsRRewritten 76,3111
   TPIsShared 80,3356
   TPGarbageFlag 81,3417
   TPIsFreeVar 82,3492
   TPPotentialParamod 83,3548
   TPPosPolarity 85,3672
   TPNegPolarity 87,3816
}TermProperties;TermProperties89,3960
   NoRewrite 95,4037
   RuleRewrite 96,4086
   FullRewrite 97,4138
}RewriteLevel;RewriteLevel98,4199
}RewriteState;RewriteState111,4740
typedef struct termcell114,4757
}TermCell, *Term_p, **TermRef;TermRef137,6088
typedef long DerefType,140,6121
typedef long DerefType, *DerefType_p;DerefType_p140,6121
#define DEREF_ALWAYS 142,6160
#define DEREF_NEVER 143,6184
#define DEREF_ONCE 144,6208
#define TERMCELL_MEM 151,6404
#define TERMARG_MEM 152,6428
#define TERMP_MEM 153,6451
#define TERMCELL_MEM 155,6480
#define TERMARG_MEM 156,6519
#define TERMP_MEM 157,6554
#define TERMCELL_DYN_MEM 160,6598
typedef bool (*TermEqualTestFun)TermEqualTestFun170,6963
#define TERMS_INITIAL_ARGS 172,7020
#define RewriteAdr(174,7051
#define TermIsVar(175,7103
#define TermIsConst(176,7142
#define TermCellSetProp(178,7200
#define TermCellDelProp(179,7260
#define TermCellAssignProp(180,7320
#define TermCellQueryProp(182,7444
#define TermCellIsAnyPropSet(185,7555
#define TermCellGiveProps(187,7626
#define TermCellFlipProp(188,7691
#define TermCellAlloc(190,7755
#define TermCellFree(191,7819
#define TermArgArrayAlloc(192,7887
#define TermArgArrayFree(193,7966
#define TermIsRewritten(195,8045
#define TermIsRRewritten(196,8116
#define TermIsTopRewritten(197,8189
#define TermIsShared(198,8270
#define TermNFDate(200,8342
#define TermRWReplaceField(204,8535
#define TermRWDemodField(205,8602
#define REWRITE_AT_SUBTERM 206,8670
#define TermRWReplace(209,8763
#define TermRWDemod(210,8844
static __inline__ Term_p TermDeref(256,10583
static __inline__ Term_p* TermArgListCopy(295,11322
static __inline__ Term_p TermTopCopy(340,12528

include/cte_termvars.h,413
#define CTE_TERMVARS25,596
typedef struct varbankcell43,1389
}VarBankCell, *VarBank_p;VarBank_p49,1672
#define DEFAULT_VARBANK_SIZE 58,1925
#define FRESH_VAR_LIMIT 63,2141
#define VarBankCellAlloc(65,2177
#define VarBankCellFree(66,2250
#define VarBankGetVCount(80,2919
#define VarBankSetVCount(81,2968
#define VarBankResetVCount(82,3033
#define VarIsFreshVar(83,3088
#define VarFCodeIsFresh(84,3151

include/cte_varhash.h,583
#define CTE_VARHASH28,710
#define VAR_HASH_SIZE 43,1209
#define VAR_HASH_MASK 44,1244
typedef struct var_hash_entry_cell46,1287
}VarHashEntryCell, *VarHashEntry_p;VarHashEntry_p51,1431
typedef struct var_hash_cell53,1468
}VarHashCell, *VarHash_p;VarHash_p56,1538
#define VarHashEntryCellAlloc(66,1792
#define VarHashEntryCellFree(68,1888
#define VarHashCellAlloc(74,2108
#define VarHashCellFree(76,2189
static __inline__ VarHashEntry_p VarHashEntryAlloc(111,3340
static __inline__ VarHash_p VarHashAlloc(136,3873
static __inline__ VarHashEntry_p VarHashFind(162,4390

include/cto_cmpcache.h,128
#define CTO_CMPCACHE26,621
typedef QuadTree_p CmpCache_p;42,1226
#define CmpCacheInit(48,1481
#define CmpCacheClear(49,1527

include/cto_kbo.h,23
#define CTO_KBO29,724

include/cto_kbodata.h,169
#define CTO_KBODATA29,819
typedef struct kbo_lin_cell40,1153
}KBOLinCell, *KBOLin_p;KBOLin_p48,1328
#define KBOLinCellAlloc(56,1578
#define KBOLinCellFree(57,1651

include/cto_kbolin.h,26
#define CTO_KBOLIN28,750

include/cto_lpo.h,23
#define CTO_LPO27,618

include/cto_lpo_debug.h,29
#define CTO_LPO_DEBUG27,605

include/cto_ocb.h,763
#define CTO_OCB26,578
   NoOrdering,40,890
   AUTO,41,905
   AUTOCASC,42,914
   AUTODEV,43,927
   OPTIMIZE_AX,44,939
   KBO,45,955
   KBO6,46,963
   LPO,47,972
   LPOCopy,48,980
   LPO4,49,992
   LPO4Copy,50,1001
   RPO51,1014
}TermOrdering;TermOrdering52,1021
typedef struct ocb_cell55,1038
}OCBCell, *OCB_p;OCB_p75,1825
#define OCB_FUN_DEFAULT_WEIGHT 77,1844
#define W_DEFAULT_WEIGHT 82,1998
#define OCBCellAlloc(88,2249
#define OCBCellFree(89,2310
#define OCBPrecedenceGetState(104,2793
#define OCBFunWeightPos(119,3297
#define OCBFunComparePos(120,3354
#define OCBDesignatedMinConst(125,3489
#define OCBDesignatedMinTerm(128,3625
static __inline__ long OCBFunWeight(159,4729
static __inline__ CompareResult OCBFunCompare(183,5337

include/cto_orderings.h,29
#define CTO_ORDERINGS25,550

include/e_version.h,154
#define E_VERSION25,564
#define VERSION 41,1058
#define E_NICKNAME 43,1090
#define E_URL 45,1124
#define STS_MAIL 47,1164
#define STS_SNAIL 48,1202

include/pcl_analysis.h,64
#define PCL_ANALYSIS26,595
#define PCLStepUpdateGRefs(47,1329

include/pcl_expressions.h,1921
#define PCL_EXPRESSIONS25,538
   PCLOpNoOp,41,993
   PCLOpInitial,42,1007
   PCLOpIntroDef,43,1024
   PCLOpQuote,44,1042
   PCLOpParamod,45,1057
   PCLOpSimParamod,46,1074
   PCLOpEResolution,47,1094
   PCLOpEFactoring,48,1115
   PCLOpSimplifyReflect,49,1135
   PCLOpContextSimplifyReflect,50,1160
   PCLOpACResolution,51,1192
   PCLOpRewrite,52,1214
   PCLOpURewrite,53,1231
   PCLOpClauseNormalize,54,1249
   PCLOpSplitClause,55,1274
   PCLOpSplitEquiv,56,1295
   PCLOpApplyDef,57,1315
   PCLOpFOFSplitConjunct,58,1333
   PCLOpFOFSimplify,59,1359
   PCLOpFOFDeMorgan,60,1380
   PCLOpFOFDistributeQuantors,61,1401
   PCLOpFOFDistributeDisjunction,62,1432
   PCLOpFOFVarRename,63,1466
   PCLOpFOFSkolemize,64,1488
   PCLOpFOFAssumeNegation,65,1510
   PCLOpMaxOp66,1537
}PCLOpcodes;PCLOpcodes67,1551
#define PCL_OP_NOOP_WEIGHT 70,1566
#define PCL_OP_INITIAL_WEIGHT 71,1606
#define PCL_OP_QUOTE_WEIGHT 72,1646
#define PCL_OP_PARAMOD_WEIGHT 73,1686
#define PCL_OP_SIM_PARAMOD_WEIGHT 74,1726
#define PCL_OP_ERESOLUTION_WEIGHT 75,1766
#define PCL_OP_EFACTORING_WEIGHT 76,1806
#define PCL_OP_SIMPLIFYREFLECT_WEIGHT 77,1846
#define PCL_OP_CONTEXTSIMPLIFYREFLECT_WEIGHT 78,1886
#define PCL_OP_ACRESOLUTION_WEIGHT 79,1933
#define PCL_OP_REWRITE_WEIGHT 80,1973
#define PCL_OP_UREWRITE_WEIGHT 81,2013
#define PCL_OP_CLAUSENORMALIZE_WEIGHT 82,2053
#define PCL_OP_SPLITCLAUSE_WEIGHT 83,2093
typedef struct pclexprcell86,2135
}PCLExprCell, *PCLExpr_p;PCLExpr_p91,2266
#define PCL_VAR_ARG 94,2294
#define PCLExprCellAlloc(100,2541
#define PCLExprCellFree(101,2614
#define PCLExprArg(103,2688
#define PCLExprArgInt(104,2755
#define PCLExprArgPos(105,2824
#define   PCLFullExprParse(115,3170
#define   PCLMiniExprParse(116,3226
#define   PCLFullExprPrint(119,3344
#define   PCLMiniExprPrint(120,3415
#define   PCLFullExprPrintTSTP(123,3547
#define   PCLMiniExprPrintTSTP(124,3626

include/pcl_idents.h,280
#define PCL_IDENTS25,541
#define NO_PCL_ID_ELEMENT 36,896
typedef PDArrayCell PCLIdCell;38,926
typedef PDArray_p   PCLId_p;39,957
#define PCLIdCellAlloc(45,1210
#define PCLIdCellFree(46,1277
#define PCLIdAlloc(48,1348
#define PCLIdFree(49,1394
#define PCLIdPrint(53,1539

include/pcl_lemmas.h,753
#define PCL_LEMMAS26,543
typedef struct lemma_param_cell61,1503
}LemmaParamCell, *LemmaParam_p;LemmaParam_p71,1714
#define LEMMA_BASE_W 73,1747
#define LEMMA_ACT_PM_W 74,1776
#define LEMMA_O_GEN_W 75,1805
#define LEMMA_ACT_SIMPL_W 76,1834
#define LEMMA_PAS_SIMPL_W 77,1863
#define LEMMA_PROOF_TREE_W 78,1892
#define LEMMA_PROOF_DAG_W 79,1922
#define LEMMA_HORN_BONUS_W 81,2029
typedef long InferenceWeightType[InferenceWeightType83,2059
typedef InferenceWeightType *InferenceWeight_p;InferenceWeight_p84,2105
#define LemmaParamCellAlloc(93,2380
#define LemmaParamCellFree(94,2462
#define LemmaParamFree(96,2577
#define InferenceWeightCellAlloc(98,2632
#define InferenceWeightCellFree(100,2735
#define InferenceWeightsFree(103,2870

include/pcl_miniclauses.h,197
#define PCL_MINICLAUSES27,713
typedef struct mini_clause_cell39,1112
}MiniClauseCell, *MiniClause_p;MiniClause_p45,1333
#define MiniClauseCellAlloc(54,1592
#define MiniClauseCellFree(56,1683

include/pcl_miniprotocol.h,200
#define PCL_MINIPROTOCOL25,551
typedef struct pclminiprotcell33,828
}PCLMiniProtCell, *PCLMiniProt_p;PCLMiniProt_p38,953
#define PCLMiniProtCellAlloc(45,1212
#define PCLMiniProtCellFree(46,1297

include/pcl_ministeps.h,198
#define PCL_MINISTEPS25,558
typedef struct pclministepcell35,886
}PCLMiniStepCell, *PCLMiniStep_p;PCLMiniStep_p47,1120
#define PCLMiniStepCellAlloc(56,1381
#define PCLMiniStepCellFree(57,1466

include/pcl_positions.h,175
#define PCL_POSITIONS25,522
typedef struct pcl2poscell38,1004
}PCL2PosCell, *PCL2Pos_p;PCL2Pos_p44,1210
#define PCL2PosCellAlloc(52,1462
#define PCL2PosCellFree(53,1535

include/pcl_proofcheck.h,394
#define PCL_PROOFCHECK26,572
   CheckFail,37,888
   CheckOk,38,902
   CheckByAssumption,39,914
   CheckNotImplemented40,936
}PCLCheckType;PCLCheckType41,959
   NoProver,45,990
   EProver,46,1003
   Spass,47,1015
   Setheo,48,1025
   Otter49,1036
}ProverType;ProverType50,1045
#define E_EXEC_DEFAULT 57,1283
#define OTTER_EXEC_DEFAULT 58,1320
#define SPASS_EXEC_DEFAULT 59,1355

include/pcl_propanalysis.h,178
#define PCL_PROPANALYIS26,574
typedef struct pcl_propdata_cell36,882
}PCLPropDataCell, *PCLPropData_p;PCLPropData_p55,1425
typedef int (*PCLCmpFunType)PCLCmpFunType63,1685

include/pcl_protocol.h,357
#define PCL_PROTOCOL25,512
typedef struct pclprotcell33,781
}PCLProtCell, *PCLProt_p;PCLProt_p40,1022
#define PCLProtCellAlloc(47,1273
#define PCLProtCellFree(48,1346
#define PCLProtInsertStep(53,1491
#define   PCLProtStepNo(62,1828
#define   PCLProtPrint(70,2129
#define   PCLStepCollectPreconds(81,2519
#define PCLProtPrintProofClauses(95,3214

include/pcl_steps.h,1423
#define PCL_STEPS25,502
#define PCL_PROOF_DIST_INFINITY 33,774
#define PCL_PROOF_DIST_DEFAULT 34,832
#define PCL_PROOF_DIST_UNKNOWN 35,896
   PCLNoProp 40,972
   PCLIsLemma 41,999
   PCLIsInitial 42,1026
   PCLIsFinal 43,1053
   PCLIsMarked 44,1080
   PCLIsProofStep 45,1107
   PCLIsExample 46,1134
   PCLIsFOFStep 47,1189
   PCLType1 48,1245
   PCLType1          = CPType1,48,1245
   PCLType2 49,1287
   PCLType2          = CPType2,49,1287
   PCLType3 50,1320
   PCLType3          = CPType3,50,1320
   PCLTypeMask 51,1352
   PCLTypeMask       = CPTypeMask,51,1352
   PCLTypeUnknown 52,1387
   PCLTypeAxiom 53,1456
   PCLTypeAxiom      = CPTypeAxiom,53,1456
   PCLTypeHypothesis 54,1520
   PCLTypeHypothesis = CPTypeHypothesis,54,1520
   PCLTypeConjecture 55,1589
   PCLTypeConjecture = CPTypeConjecture,55,1589
   PCLTypeNegConjecture 57,1723
   PCLTypeNegConjecture = CPTypeNegConjecture 57,1723
}PCLStepProperties;PCLStepProperties59,1801
typedef struct pclstepcell62,1823
}PCLStepCell, *PCLStep_p;PCLStep_p93,3099
#define PCLNoWeight 95,3126
#define PCLStepCellAlloc(103,3375
#define PCLStepCellFree(104,3448
#define PCLStepSetProp(106,3523
#define PCLStepDelProp(107,3586
#define PCLStepGiveProps(108,3649
#define PCLStepQueryProp(109,3716
#define PCLStepIsAnyPropSet(110,3783
#define PCLStepIsFOF(112,3857
#define PCLStepIsClausal(113,3923
#define   PCLStepPrint(121,4255

HEURISTICS/che_auto_cases.c,0

HEURISTICS/che_X_____auto_pp_opt_dev.c,0

HEURISTICS/che_X_____auto_pp_opt_080.c,0

HEURISTICS/che_X_____auto_pp_opt_071.c,0

HEURISTICS/che_X_____auto_dev.c,0

HEURISTICS/che_X_____auto_casc.c,0

HEURISTICS/che_X_____auto_0999.c,0

HEURISTICS/che_X_____auto.c,0

ANALYSIS/can_infstate.c,0
